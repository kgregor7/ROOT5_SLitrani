//
// File generated by /home/gregor/root5/bin/rootcint at Sun Aug 12 09:25:24 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TwoPadDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TwoPadDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TGDocument_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGDocument(void *p = 0);
   static void *newArray_TGDocument(Long_t size, void *p);
   static void delete_TGDocument(void *p);
   static void deleteArray_TGDocument(void *p);
   static void destruct_TGDocument(void *p);
   static void streamer_TGDocument(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TGDocument*)
   {
      ::TGDocument *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGDocument >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGDocument", ::TGDocument::Class_Version(), "./TGRootIDE.h", 54,
                  typeid(::TGDocument), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TGDocument::Dictionary, isa_proxy, 0,
                  sizeof(::TGDocument) );
      instance.SetNew(&new_TGDocument);
      instance.SetNewArray(&newArray_TGDocument);
      instance.SetDelete(&delete_TGDocument);
      instance.SetDeleteArray(&deleteArray_TGDocument);
      instance.SetDestructor(&destruct_TGDocument);
      instance.SetStreamerFunc(&streamer_TGDocument);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TGDocument*)
   {
      return GenerateInitInstanceLocal((::TGDocument*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGDocument*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TGRootIDE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGRootIDE(void *p = 0);
   static void *newArray_TGRootIDE(Long_t size, void *p);
   static void delete_TGRootIDE(void *p);
   static void deleteArray_TGRootIDE(void *p);
   static void destruct_TGRootIDE(void *p);
   static void streamer_TGRootIDE(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TGRootIDE*)
   {
      ::TGRootIDE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGRootIDE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGRootIDE", ::TGRootIDE::Class_Version(), "./TGRootIDE.h", 86,
                  typeid(::TGRootIDE), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TGRootIDE::Dictionary, isa_proxy, 0,
                  sizeof(::TGRootIDE) );
      instance.SetNew(&new_TGRootIDE);
      instance.SetNewArray(&newArray_TGRootIDE);
      instance.SetDelete(&delete_TGRootIDE);
      instance.SetDeleteArray(&deleteArray_TGRootIDE);
      instance.SetDestructor(&destruct_TGRootIDE);
      instance.SetStreamerFunc(&streamer_TGRootIDE);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TGRootIDE*)
   {
      return GenerateInitInstanceLocal((::TGRootIDE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGRootIDE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TAuthor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAuthor(void *p = 0);
   static void *newArray_TAuthor(Long_t size, void *p);
   static void delete_TAuthor(void *p);
   static void deleteArray_TAuthor(void *p);
   static void destruct_TAuthor(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAuthor*)
   {
      ::TAuthor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAuthor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAuthor", ::TAuthor::Class_Version(), "./TAuthor.h", 17,
                  typeid(::TAuthor), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAuthor::Dictionary, isa_proxy, 4,
                  sizeof(::TAuthor) );
      instance.SetNew(&new_TAuthor);
      instance.SetNewArray(&newArray_TAuthor);
      instance.SetDelete(&delete_TAuthor);
      instance.SetDeleteArray(&deleteArray_TAuthor);
      instance.SetDestructor(&destruct_TAuthor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAuthor*)
   {
      return GenerateInitInstanceLocal((::TAuthor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAuthor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TReference_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TReference(void *p = 0);
   static void *newArray_TReference(Long_t size, void *p);
   static void delete_TReference(void *p);
   static void deleteArray_TReference(void *p);
   static void destruct_TReference(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TReference*)
   {
      ::TReference *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TReference >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TReference", ::TReference::Class_Version(), "./TReference.h", 19,
                  typeid(::TReference), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TReference::Dictionary, isa_proxy, 4,
                  sizeof(::TReference) );
      instance.SetNew(&new_TReference);
      instance.SetNewArray(&newArray_TReference);
      instance.SetDelete(&delete_TReference);
      instance.SetDeleteArray(&deleteArray_TReference);
      instance.SetDestructor(&destruct_TReference);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TReference*)
   {
      return GenerateInitInstanceLocal((::TReference*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TReference*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TwoPadDisplay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TwoPadDisplay(void *p = 0);
   static void *newArray_TwoPadDisplay(Long_t size, void *p);
   static void delete_TwoPadDisplay(void *p);
   static void deleteArray_TwoPadDisplay(void *p);
   static void destruct_TwoPadDisplay(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TwoPadDisplay*)
   {
      ::TwoPadDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TwoPadDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TwoPadDisplay", ::TwoPadDisplay::Class_Version(), "./TwoPadDisplay.h", 26,
                  typeid(::TwoPadDisplay), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TwoPadDisplay::Dictionary, isa_proxy, 4,
                  sizeof(::TwoPadDisplay) );
      instance.SetNew(&new_TwoPadDisplay);
      instance.SetNewArray(&newArray_TwoPadDisplay);
      instance.SetDelete(&delete_TwoPadDisplay);
      instance.SetDeleteArray(&deleteArray_TwoPadDisplay);
      instance.SetDestructor(&destruct_TwoPadDisplay);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TwoPadDisplay*)
   {
      return GenerateInitInstanceLocal((::TwoPadDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TwoPadDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TGDocument::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGDocument::Class_Name()
{
   return "TGDocument";
}

//______________________________________________________________________________
const char *TGDocument::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGDocument*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGDocument::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGDocument*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGDocument::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGDocument*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGDocument::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGDocument*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TGRootIDE::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGRootIDE::Class_Name()
{
   return "TGRootIDE";
}

//______________________________________________________________________________
const char *TGRootIDE::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGRootIDE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGRootIDE::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGRootIDE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGRootIDE::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGRootIDE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGRootIDE::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGRootIDE*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TAuthor::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAuthor::Class_Name()
{
   return "TAuthor";
}

//______________________________________________________________________________
const char *TAuthor::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAuthor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAuthor::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAuthor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAuthor::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAuthor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAuthor::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAuthor*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TReference::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TReference::Class_Name()
{
   return "TReference";
}

//______________________________________________________________________________
const char *TReference::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TReference*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TReference::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TReference*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TReference::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TReference*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TReference::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TReference*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TwoPadDisplay::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TwoPadDisplay::Class_Name()
{
   return "TwoPadDisplay";
}

//______________________________________________________________________________
const char *TwoPadDisplay::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TwoPadDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TwoPadDisplay::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TwoPadDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TwoPadDisplay::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TwoPadDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TwoPadDisplay::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TwoPadDisplay*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TAuthor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAuthor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAuthor::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAuthor::Class(),this);
   }
}

//______________________________________________________________________________
void TAuthor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAuthor.
      TClass *R__cl = ::TAuthor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInitials", &fInitials);
      R__insp.InspectMember(fInitials, "fInitials.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAddress", &fAddress);
      R__insp.InspectMember(fAddress, "fAddress.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMail", &fMail);
      R__insp.InspectMember(fMail, "fMail.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWebSite", &fWebSite);
      R__insp.InspectMember(fWebSite, "fWebSite.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCountry", &fCountry);
      R__insp.InspectMember(fCountry, "fCountry.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhone", &fPhone);
      R__insp.InspectMember(fPhone, "fPhone.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TAuthor(void *p) {
      return  p ? new(p) ::TAuthor : new ::TAuthor;
   }
   static void *newArray_TAuthor(Long_t nElements, void *p) {
      return p ? new(p) ::TAuthor[nElements] : new ::TAuthor[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAuthor(void *p) {
      delete ((::TAuthor*)p);
   }
   static void deleteArray_TAuthor(void *p) {
      delete [] ((::TAuthor*)p);
   }
   static void destruct_TAuthor(void *p) {
      typedef ::TAuthor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAuthor

//______________________________________________________________________________
void TReference::Streamer(TBuffer &R__b)
{
   // Stream an object of class TReference.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TReference::Class(),this);
   } else {
      R__b.WriteClassBuffer(TReference::Class(),this);
   }
}

//______________________________________________________________________________
void TReference::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TReference.
      TClass *R__cl = ::TReference::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVersion", &fVersion);
      R__insp.InspectMember(fVersion, "fVersion.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWebSite", &fWebSite);
      R__insp.InspectMember(fWebSite, "fWebSite.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLanguage", &fLanguage);
      R__insp.InspectMember(fLanguage, "fLanguage.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFramework", &fFramework);
      R__insp.InspectMember(fFramework, "fFramework.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAuthor", &fAuthor);
      R__insp.InspectMember(fAuthor, "fAuthor.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TReference(void *p) {
      return  p ? new(p) ::TReference : new ::TReference;
   }
   static void *newArray_TReference(Long_t nElements, void *p) {
      return p ? new(p) ::TReference[nElements] : new ::TReference[nElements];
   }
   // Wrapper around operator delete
   static void delete_TReference(void *p) {
      delete ((::TReference*)p);
   }
   static void deleteArray_TReference(void *p) {
      delete [] ((::TReference*)p);
   }
   static void destruct_TReference(void *p) {
      typedef ::TReference current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TReference

//______________________________________________________________________________
void TwoPadDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class TwoPadDisplay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TwoPadDisplay::Class(),this);
   } else {
      R__b.WriteClassBuffer(TwoPadDisplay::Class(),this);
   }
}

//______________________________________________________________________________
void TwoPadDisplay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TwoPadDisplay.
      TClass *R__cl = ::TwoPadDisplay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCanDelete", &fCanDelete);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRef", &fRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsOwnerOfRef", &fIsOwnerOfRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameForSave", &fNameForSave);
      R__insp.InspectMember(fNameForSave, "fNameForSave.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtForSave", &fExtForSave);
      R__insp.InspectMember(fExtForSave, "fExtForSave.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize", &fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPad1", &fPad1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPad2", &fPad2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUsePad2", &fUsePad2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStateOfPads", &fStateOfPads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGrey", &fGrey);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPadLogX", &fPadLogX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPadLogY", &fPadLogY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDate", &fDate);
      R__insp.InspectMember(fDate, "fDate.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.InspectMember(fTime, "fTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTexTL", &fTexTL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStringTL", &fStringTL);
      R__insp.InspectMember(fStringTL, "fStringTL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefTexTL", &fDefTexTL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXTexTL", &fXTexTL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYTexTL", &fYTexTL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTexBL", &fTexBL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStringBL", &fStringBL);
      R__insp.InspectMember(fStringBL, "fStringBL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefTexBL", &fDefTexBL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXTexBL", &fXTexBL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYTexBL", &fYTexBL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTexBR", &fTexBR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStringBR", &fStringBR);
      R__insp.InspectMember(fStringBR, "fStringBR.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefTexBR", &fDefTexBR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXTexBR", &fXTexBR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYTexBR", &fYTexBR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTexTR", &fTexTR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStringTR", &fStringTR);
      R__insp.InspectMember(fStringTR, "fStringTR.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefTexTR", &fDefTexTR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXTexTR", &fXTexTR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYTexTR", &fYTexTR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFontTex", &fFontTex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSizeTex", &fSizeTex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidthTex", &fWidthTex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColCan", &fColCan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStyleCan", &fStyleCan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStyleStat", &fStyleStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStyleHistColor", &fStyleHistColor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStyleTitleColor", &fStyleTitleColor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStyleTFColor", &fStyleTFColor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStyleTTextColor", &fStyleTTextColor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBszCan", &fBszCan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlaceLeft", &fPlaceLeft);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmptyX", &fEmptyX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmptyY", &fEmptyY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbButtons", &fNbButtons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCollBut", &fCollBut);
      R__insp.InspectMember(fCollBut, "fCollBut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fButNames", &fButNames);
      R__insp.InspectMember(fButNames, "fButNames.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fButActions", &fButActions);
      R__insp.InspectMember(fButActions, "fButActions.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeightBut", &fHeightBut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFreeYBut", &fFreeYBut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXLowButton", &fXLowButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXUpButton", &fXUpButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFontButton", &fFontButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColorBut", &fColorBut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBszBut", &fBszBut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTextSBut", &fTextSBut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXLowPad1", &fXLowPad1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYLowPad", &fYLowPad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXUpPad1", &fXUpPad1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYUpPad", &fYUpPad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColPad1", &fColPad1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStylePad1", &fStylePad1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXLowPad2", &fXLowPad2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXUpPad2", &fXUpPad2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColPad2", &fColPad2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStylePad2", &fStylePad2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBszPad", &fBszPad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColFrame", &fColFrame);
      TCanvas::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TwoPadDisplay(void *p) {
      return  p ? new(p) ::TwoPadDisplay : new ::TwoPadDisplay;
   }
   static void *newArray_TwoPadDisplay(Long_t nElements, void *p) {
      return p ? new(p) ::TwoPadDisplay[nElements] : new ::TwoPadDisplay[nElements];
   }
   // Wrapper around operator delete
   static void delete_TwoPadDisplay(void *p) {
      delete ((::TwoPadDisplay*)p);
   }
   static void deleteArray_TwoPadDisplay(void *p) {
      delete [] ((::TwoPadDisplay*)p);
   }
   static void destruct_TwoPadDisplay(void *p) {
      typedef ::TwoPadDisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TwoPadDisplay

//______________________________________________________________________________
void TGRootIDE::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGRootIDE.

   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGRootIDE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGRootIDE.
      TClass *R__cl = ::TGRootIDE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPid", &fPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimer", &fTimer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStatusBar", &fStatusBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fToolBar", &fToolBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDir", &fDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDirBuf", &fDirBuf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDirCombo", &fDirCombo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fContents", &fContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTextEdit", &fTextEdit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTextView", &fTextView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fComboCmd", &fComboCmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileType", &fFileType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilter", &fFilter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLabel", &fLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCommand", &fCommand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCommandBuf", &fCommandBuf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuBarLayout", &fMenuBarLayout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuBarItemLayout", &fMenuBarItemLayout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuFile", &fMenuFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuEdit", &fMenuEdit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuSearch", &fMenuSearch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuTools", &fMenuTools);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuHelp", &fMenuHelp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExiting", &fExiting);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTextChanged", &fTextChanged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilename", &fFilename);
      R__insp.InspectMember(fFilename, "fFilename.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMacro", &fMacro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDocList", &fDocList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentDoc", &fCurrentDoc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbDoc", &fNbDoc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVerticalFrame", &fVerticalFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHorizontalFrame", &fHorizontalFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBack", &fBack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fForward", &fForward);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReload", &fReload);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStop", &fStop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHome", &fHome);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fComboBox", &fComboBox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fURLBuf", &fURLBuf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fURL", &fURL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHtml", &fHtml);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGuiHtml", &fGuiHtml);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TGRootIDE(void *p) {
      return  p ? new(p) ::TGRootIDE : new ::TGRootIDE;
   }
   static void *newArray_TGRootIDE(Long_t nElements, void *p) {
      return p ? new(p) ::TGRootIDE[nElements] : new ::TGRootIDE[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGRootIDE(void *p) {
      delete ((::TGRootIDE*)p);
   }
   static void deleteArray_TGRootIDE(void *p) {
      delete [] ((::TGRootIDE*)p);
   }
   static void destruct_TGRootIDE(void *p) {
      typedef ::TGRootIDE current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TGRootIDE(TBuffer &buf, void *obj) {
      ((::TGRootIDE*)obj)->::TGRootIDE::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TGRootIDE

//______________________________________________________________________________
void TGDocument::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGDocument.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void TGDocument::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGDocument.
      TClass *R__cl = ::TGDocument::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTabId", &fTabId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModified", &fModified);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEditor", &fEditor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTabEl", &fTabEl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDocList", &fDocList);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TGDocument(void *p) {
      return  p ? new(p) ::TGDocument : new ::TGDocument;
   }
   static void *newArray_TGDocument(Long_t nElements, void *p) {
      return p ? new(p) ::TGDocument[nElements] : new ::TGDocument[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGDocument(void *p) {
      delete ((::TGDocument*)p);
   }
   static void deleteArray_TGDocument(void *p) {
      delete [] ((::TGDocument*)p);
   }
   static void destruct_TGDocument(void *p) {
      typedef ::TGDocument current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TGDocument(TBuffer &buf, void *obj) {
      ((::TGDocument*)obj)->::TGDocument::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TGDocument

/********************************************************
* TwoPadDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTwoPadDict();

extern "C" void G__set_cpp_environmentTwoPadDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TGRootIDE.h");
  G__add_compiledheader("TAuthor.h");
  G__add_compiledheader("TReference.h");
  G__add_compiledheader("TwoPadDisplay.h");
  G__cpp_reset_tagtableTwoPadDict();
}
#include <new>
extern "C" int G__cpp_dllrevTwoPadDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGDocument */
static int G__TwoPadDict_289_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGDocument* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGTab*) G__int(libp->para[3])
, (TGTabElement*) G__int(libp->para[4]), (TGTextEdit*) G__int(libp->para[5])
, (TObjArray*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGTab*) G__int(libp->para[3])
, (TGTabElement*) G__int(libp->para[4]), (TGTextEdit*) G__int(libp->para[5])
, (TObjArray*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGTab*) G__int(libp->para[3])
, (TGTabElement*) G__int(libp->para[4]), (TGTextEdit*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGTab*) G__int(libp->para[3])
, (TGTabElement*) G__int(libp->para[4]), (TGTextEdit*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGTab*) G__int(libp->para[3])
, (TGTabElement*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGTab*) G__int(libp->para[3])
, (TGTabElement*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGTab*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGTab*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TGDocument(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGDocument((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TGDocument((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGDocument((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TGDocument((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGDocument[n];
       } else {
         p = new((void*) gvp) TGDocument[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGDocument;
       } else {
         p = new((void*) gvp) TGDocument;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TGDocument*) G__getstructoffset())->Open((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TGDocument*) G__getstructoffset())->Close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TGDocument*) G__getstructoffset())->Save((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TGDocument*) G__getstructoffset())->Save());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGDocument*) G__getstructoffset())->GetTabId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TGDocument*) G__getstructoffset())->IsModified());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGDocument*) G__getstructoffset())->SetTabId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGDocument*) G__getstructoffset())->Modified((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGDocument*) G__getstructoffset())->Modified();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGDocument*) G__getstructoffset())->GetTextEdit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGDocument*) G__getstructoffset())->GetTab());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGDocument*) G__getstructoffset())->GetTabEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGDocument*) G__getstructoffset())->DataChanged();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGDocument*) G__getstructoffset())->DataDropped((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGDocument::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGDocument::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGDocument::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGDocument::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGDocument*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGDocument::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGDocument::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGDocument::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_289_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGDocument::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TwoPadDict_289_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGDocument* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGDocument(*(TGDocument*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGDocument G__TTGDocument;
static int G__TwoPadDict_289_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGDocument*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGDocument*) (soff+(sizeof(TGDocument)*i)))->~G__TTGDocument();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGDocument*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGDocument*) (soff))->~G__TTGDocument();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TwoPadDict_289_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGDocument* dest = (TGDocument*) G__getstructoffset();
   *dest = *(TGDocument*) libp->para[0].ref;
   const TGDocument& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGRootIDE */
static int G__TwoPadDict_290_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGRootIDE* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGRootIDE(
(const char*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TGRootIDE(
(const char*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGRootIDE(
(const char*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TGRootIDE(
(const char*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGRootIDE((const char*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TGRootIDE((const char*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGRootIDE((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TGRootIDE((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGRootIDE[n];
       } else {
         p = new((void*) gvp) TGRootIDE[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGRootIDE;
       } else {
         p = new((void*) gvp) TGRootIDE;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGRootIDE* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGRootIDE(
(TMacro*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TGRootIDE(
(TMacro*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGRootIDE(
(TMacro*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TGRootIDE(
(TMacro*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGRootIDE((TMacro*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TGRootIDE((TMacro*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGRootIDE((TMacro*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TGRootIDE((TMacro*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->ClearText();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TGRootIDE*) G__getstructoffset())->LoadBuffer((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGRootIDE*) G__getstructoffset())->LoadFile((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGRootIDE*) G__getstructoffset())->LoadFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->SaveFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TGRootIDE*) G__getstructoffset())->SaveFileAs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->PrintText();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->Search((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->Goto();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->About();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGRootIDE*) G__getstructoffset())->IsSaved());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->CompileMacro();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->ExecuteMacro();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->InterruptMacro();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->SetText((TGText*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->AddText((TGText*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->AddLine((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->AddLineFast((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGRootIDE*) G__getstructoffset())->GetText());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->DisplayFile(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->DisplayDirectory(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->DisplayObject(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->OnDoubleClick((TGLVEntry*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->CloseTab((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->DoTab((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->ApplyFilter((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->CheckRemote((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->DirSelected((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->DirChanged();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->Selected((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->URLChanged();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->Back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->Forward();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->Reload();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->Stop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->MouseOver((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->MouseDown((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGRootIDE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGRootIDE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGRootIDE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGRootIDE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGRootIDE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGRootIDE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGRootIDE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGRootIDE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_290_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGRootIDE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGRootIDE G__TTGRootIDE;
static int G__TwoPadDict_290_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGRootIDE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGRootIDE*) (soff+(sizeof(TGRootIDE)*i)))->~G__TTGRootIDE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGRootIDE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGRootIDE*) (soff))->~G__TTGRootIDE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAuthor */
static int G__TwoPadDict_291_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAuthor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAuthor[n];
     } else {
       p = new((void*) gvp) TAuthor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAuthor;
     } else {
       p = new((void*) gvp) TAuthor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAuthor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TAuthor((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TAuthor((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAuthor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAuthor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TAuthor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAuthor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TAuthor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAuthor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TAuthor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAuthor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TAuthor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAuthor*) G__getstructoffset())->AddAddress((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAuthor*) G__getstructoffset())->AddCountry((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAuthor*) G__getstructoffset())->AddMail((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAuthor*) G__getstructoffset())->AddPhone((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAuthor*) G__getstructoffset())->AddWebSite((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TAuthor*) G__getstructoffset())->GetAddress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TAuthor*) G__getstructoffset())->GetCountry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TAuthor*) G__getstructoffset())->GetInitials());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TAuthor*) G__getstructoffset())->GetMail());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TAuthor*) G__getstructoffset())->GetPhone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TAuthor*) G__getstructoffset())->GetWebSite());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TAuthor*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAuthor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAuthor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAuthor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAuthor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAuthor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAuthor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAuthor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAuthor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_291_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAuthor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TwoPadDict_291_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAuthor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAuthor(*(TAuthor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAuthor G__TTAuthor;
static int G__TwoPadDict_291_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAuthor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAuthor*) (soff+(sizeof(TAuthor)*i)))->~G__TTAuthor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAuthor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAuthor*) (soff))->~G__TTAuthor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TwoPadDict_291_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAuthor* dest = (TAuthor*) G__getstructoffset();
   *dest = *(TAuthor*) libp->para[0].ref;
   const TAuthor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TReference */
static int G__TwoPadDict_293_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReference* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReference[n];
     } else {
       p = new((void*) gvp) TReference[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReference;
     } else {
       p = new((void*) gvp) TReference;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TReference));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReference* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TReference((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TReference((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TReference));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReference* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReference(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TReference(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReference(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TReference(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TReference));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReference*) G__getstructoffset())->AddAuthor((TAuthor*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TObjArray& obj = ((TReference*) G__getstructoffset())->GetCollection();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TReference*) G__getstructoffset())->GetFramework());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TReference*) G__getstructoffset())->GetLanguage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TReference*) G__getstructoffset())->GetNbOfAuthor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TReference*) G__getstructoffset())->GetVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TReference*) G__getstructoffset())->GetWebSite());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TReference*) G__getstructoffset())->GetAuthor((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReference*) G__getstructoffset())->SetFramework((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReference*) G__getstructoffset())->SetLanguage((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReference*) G__getstructoffset())->SetVersion((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReference*) G__getstructoffset())->SetWebSite((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TReference::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReference::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TReference::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TReference::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReference*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReference::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TReference::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReference::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_293_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TReference::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TReference G__TTReference;
static int G__TwoPadDict_293_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TReference*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TReference*) (soff+(sizeof(TReference)*i)))->~G__TTReference();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TReference*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TReference*) (soff))->~G__TTReference();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TwoPadDisplay */
static int G__TwoPadDict_328_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TwoPadDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay[n];
     } else {
       p = new((void*) gvp) TwoPadDisplay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay;
     } else {
       p = new((void*) gvp) TwoPadDisplay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TwoPadDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay((TReference*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TwoPadDisplay((TReference*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay((TReference*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TwoPadDisplay((TReference*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TwoPadDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TwoPadDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (TCanvas*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (TCanvas*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (TCanvas*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TwoPadDisplay(
(TReference*) G__int(libp->para[0]), (TCanvas*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay((TReference*) G__int(libp->para[0]), (TCanvas*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TwoPadDisplay((TReference*) G__int(libp->para[0]), (TCanvas*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TwoPadDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TReference*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TwoPadDisplay(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TReference*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TwoPadDisplay(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TReference*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TwoPadDisplay(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TReference*) G__int(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TwoPadDisplay*) G__getstructoffset())->CanDelete());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->CanDelete((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->ChangePad();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->ChangePadLogX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->ChangePadLogY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->CommentTL((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->CommentBL((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->CommentBR((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->CommentTR((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->DefCommentTL();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->DefCommentBL();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->DefCommentBR();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->DefCommentTR();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->DrawLabels();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TwoPadDisplay*) G__getstructoffset())->Editor((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TwoPadDisplay*) G__getstructoffset())->Editor();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetBorderCan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetBorderPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TwoPadDisplay*) G__getstructoffset())->GetButton((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetColCan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetColFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetColPad1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetColPad2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetEmptyX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetEmptyY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetFontTex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetNbButtons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetPad1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetPad2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetPadLogX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetPadLogY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetPlaceLeft());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetRef());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetSizeTex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetStateOfPads());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetStyleCan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetStylePad1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetStylePad2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetStyleStat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetUsePad2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TwoPadDisplay*) G__getstructoffset())->GetWidthTex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetXLowPad1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetXLowPad2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetXUpPad1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetXUpPad2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetYLowPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetYUpPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetXTexTL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetXTexBL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetXTexBR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetXTexTR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetYTexTL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetYTexBL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetYTexBR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TwoPadDisplay*) G__getstructoffset())->GetYTexTR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->GreyOrColor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SaveCanvas();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SelectCanvas();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SelectPad1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SelectPad2();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetAllColor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetAllGrey();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetBorderCan((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetBorderPad((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetButton((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetButtonFast((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetColCan((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetColFrame((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetColPad1((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetColPad2((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetEmptyX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetEmptyY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetExtForSave((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetFontTex((Font_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetNameForSave((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetNbButtons((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetPadLogX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetPadLogY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetPlaceLeft((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TwoPadDisplay*) G__getstructoffset())->SetRef((TReference*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TwoPadDisplay*) G__getstructoffset())->SetRef((TReference*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetSizeTex((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetStateOfPads((StateOfPads) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetStyleCan((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetStylePad1((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetStylePad2((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetStyleStat((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetWidthTex((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetXTexTL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetYTexTL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetXTexBL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetYTexBL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetXTexBR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetYTexBR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetXTexTR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->SetYTexTR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->ToggleButtons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->ToggleState();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->UpdateCanvas();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->UpdateIt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->UpdatePad1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->UpdatePad2();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TwoPadDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TwoPadDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TwoPadDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TwoPadDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TwoPadDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TwoPadDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TwoPadDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TwoPadDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TwoPadDict_328_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TwoPadDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TwoPadDisplay G__TTwoPadDisplay;
static int G__TwoPadDict_328_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TwoPadDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TwoPadDisplay*) (soff+(sizeof(TwoPadDisplay)*i)))->~G__TTwoPadDisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TwoPadDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TwoPadDisplay*) (soff))->~G__TTwoPadDisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGDocument */

/* TGRootIDE */

/* TAuthor */

/* TReference */

/* TwoPadDisplay */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTwoPadDict {
 public:
  G__Sizep2memfuncTwoPadDict(): p(&G__Sizep2memfuncTwoPadDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTwoPadDict::*p)();
};

size_t G__get_sizep2memfuncTwoPadDict()
{
  G__Sizep2memfuncTwoPadDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTwoPadDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument))) {
     TGDocument *G__Lderived;
     G__Lderived=(TGDocument*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument),G__get_linked_tagnum(&G__TwoPadDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument),G__get_linked_tagnum(&G__TwoPadDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE))) {
     TGRootIDE *G__Lderived;
     G__Lderived=(TGRootIDE*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE),G__get_linked_tagnum(&G__TwoPadDictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE),G__get_linked_tagnum(&G__TwoPadDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE),G__get_linked_tagnum(&G__TwoPadDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE),G__get_linked_tagnum(&G__TwoPadDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE),G__get_linked_tagnum(&G__TwoPadDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE),G__get_linked_tagnum(&G__TwoPadDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE),G__get_linked_tagnum(&G__TwoPadDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor))) {
     TAuthor *G__Lderived;
     G__Lderived=(TAuthor*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor),G__get_linked_tagnum(&G__TwoPadDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor),G__get_linked_tagnum(&G__TwoPadDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TwoPadDictLN_TReference))) {
     TReference *G__Lderived;
     G__Lderived=(TReference*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TReference),G__get_linked_tagnum(&G__TwoPadDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TReference),G__get_linked_tagnum(&G__TwoPadDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay))) {
     TwoPadDisplay *G__Lderived;
     G__Lderived=(TwoPadDisplay*)0x1000;
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),G__get_linked_tagnum(&G__TwoPadDictLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),G__get_linked_tagnum(&G__TwoPadDictLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),G__get_linked_tagnum(&G__TwoPadDictLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),G__get_linked_tagnum(&G__TwoPadDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),G__get_linked_tagnum(&G__TwoPadDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),G__get_linked_tagnum(&G__TwoPadDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),G__get_linked_tagnum(&G__TwoPadDictLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),G__get_linked_tagnum(&G__TwoPadDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox2D *G__Lpbase=(TAttBBox2D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),G__get_linked_tagnum(&G__TwoPadDictLN_TAttBBox2D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTwoPadDict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Font_t",115,-1,0,-1);
   G__setnewtype(-1,"Font number (short)",0);
   G__search_typename2("Style_t",115,-1,0,-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Width_t",115,-1,0,-1);
   G__setnewtype(-1,"Line width (short)",0);
   G__search_typename2("Color_t",115,-1,0,-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TwoPadDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TwoPadDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TwoPadDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TwoPadDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__TwoPadDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TwoPadDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TwoPadDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__TwoPadDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TwoPadDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TwoPadDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TwoPadDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TwoPadDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TwoPadDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGDocument */
static void G__setup_memvarTGDocument(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument));
   { TGDocument *p; p=(TGDocument*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTabId=",0,"Tab id associated to this document");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fModified=",0,"modified flag");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextEdit),-1,-1,2,"fEditor=",0,"pointer on TGTextEdit widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTab),-1,-1,2,"fTab=",0,"pointer to main TGTab widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTabElement),-1,-1,2,"fTabEl=",0,"pointer to associated TGTabElement");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TObjArray),-1,-1,2,"fDocList=",0,"pointer to list of opened documents");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGRootIDE */
static void G__setup_memvarTGRootIDE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE));
   { TGRootIDE *p; p=(TGRootIDE*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPid=",0,"current process id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TTimer),-1,-1,2,"fTimer=",0,"for statusbar and toolbar update");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGStatusBar),-1,-1,2,"fStatusBar=",0,"for file name, line and col number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGToolBar),-1,-1,2,"fToolBar=",0,"toolbar with common tool buttons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTab),-1,-1,2,"fTab=",0,"Main tab");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextEntry),-1,-1,2,"fDir=",0,"directory text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextBuffer),-1,-1,2,"fDirBuf=",0,"directory text buffer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGComboBox),-1,-1,2,"fDirCombo=",0,"directory history combobox");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGFileContainer),-1,-1,2,"fContents=",0,"file navigation container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextEdit),-1,-1,2,"fTextEdit=",0,"active text edit widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextView),-1,-1,2,"fTextView=",0,"command output widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGComboBox),-1,-1,2,"fComboCmd=",0,"commands combobox");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGComboBox),-1,-1,2,"fFileType=",0,"file type combobox");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextEntry),-1,-1,2,"fFilter=",0,"file type text entry widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGLabel),-1,-1,2,"fLabel=",0,"\"command :\" label");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextEntry),-1,-1,2,"fCommand=",0,"command text entry widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextBuffer),-1,-1,2,"fCommandBuf=",0,"command text buffer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGLayoutHints),-1,-1,2,"fMenuBarLayout=",0,"used for the menubar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGLayoutHints),-1,-1,2,"fMenuBarItemLayout=",0,"used for for menubar items");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGMenuBar),-1,-1,2,"fMenuBar=",0,"editor's menu bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPopupMenu),-1,-1,2,"fMenuFile=",0,"\"File\" menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPopupMenu),-1,-1,2,"fMenuEdit=",0,"\"Edit\" menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPopupMenu),-1,-1,2,"fMenuSearch=",0,"\"Search\" menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPopupMenu),-1,-1,2,"fMenuTools=",0,"\"Tools\" menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPopupMenu),-1,-1,2,"fMenuHelp=",0,"\"Help\" menu entry");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fExiting=",0,"true if editor is closing");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTextChanged=",0,"true if text has changed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fFilename=",0,"name of the opened file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TMacro),-1,-1,2,"fMacro=",0,"pointer on the opened macro");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TObjArray),-1,-1,2,"fDocList=",0,"list of open documents");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument),-1,-1,2,"fCurrentDoc=",0,"pointer on current document");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCurrent=",0,"index of current document");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbDoc=",0,"number of documents");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGVerticalFrame),-1,-1,2,"fVerticalFrame=",0,"vertical frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGHorizontalFrame),-1,-1,2,"fHorizontalFrame=",0,"horizontal frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPictureButton),-1,-1,2,"fBack=",0,"back button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPictureButton),-1,-1,2,"fForward=",0,"forward button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPictureButton),-1,-1,2,"fReload=",0,"reload button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPictureButton),-1,-1,2,"fStop=",0,"stop loading button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGPictureButton),-1,-1,2,"fHome=",0,"home button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGComboBox),-1,-1,2,"fComboBox=",0,"url history combo box");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextBuffer),-1,-1,2,"fURLBuf=",0,"url buffer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGTextEntry),-1,-1,2,"fURL=",0,"url text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_THtml),-1,-1,2,"fHtml=",0,"html doc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGHtml),-1,-1,2,"fGuiHtml=",0,"html widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAuthor */
static void G__setup_memvarTAuthor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor));
   { TAuthor *p; p=(TAuthor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fInitials=",0,"Initials of Firstname");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fAddress=",0,"Address of the laboratory or private address of the author");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fMail=",0,"Mail address of author");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fWebSite=",0,"Address of web site of author");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fCountry=",0,"Country of author");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fPhone=",0,"Phone number of author");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TReference */
static void G__setup_memvarTReference(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TReference));
   { TReference *p; p=(TReference*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fVersion=",0,"Version of program. For instance : \"5_15_06\"");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fWebSite=",0,"Web address describing the program");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fLanguage=",0,"Language in which program is written. Default: C++");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fFramework=",0,"Framework on which program is built. Default: ROOT");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TObjArray),-1,-1,2,"fAuthor=",0,"Collection of TAuthor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TwoPadDisplay */
static void G__setup_memvarTwoPadDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay));
   { TwoPadDisplay *p; p=(TwoPadDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCanDelete=",0,"Allows to prevent delete of TwoPadDisplay if not wanted");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TReference),-1,-1,2,"fRef=",0,"References concerning program and authors");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsOwnerOfRef=",0,"True if fRef was not given by the user and was created as the default of TwoPadDisplay");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fNameForSave=",0,"Name to be given to fCanvas when it is saved");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fExtForSave=",0,"Type of file used when saving canvas [ps, eps, pdf,...]");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fSize=",0,"Size of canvas, [ 1 <= size <= 8 ]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TPad),-1,-1,2,"fPad1=",0,"First pad");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TPad),-1,-1,2,"fPad2=",0,"Second pad");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUsePad2=",0,"Change used pad");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_StateOfPads),-1,-1,2,"fStateOfPads=",0,"4 different ways to use the 2 pads");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fGrey=",0,"True if all grey, no color [default false]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPadLogX=",0,"log display in x");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPadLogY=",0,"log display in y");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fDate=",0,"Date when program runs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fTime=",0,"Time when program runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TLatex),-1,-1,2,"fTexTL=",0,"User updatable label 1 on top    left  of main canvas");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fStringTL=",0,"Used to store title of fTexTL");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDefTexTL=",0,"True if default label TL used");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXTexTL=",0,"x position of label 1");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYTexTL=",0,"y position of label 1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TLatex),-1,-1,2,"fTexBL=",0,"user updatable label 2 on bottom left  of main canvas");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fStringBL=",0,"Used to store title of fTexBL");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDefTexBL=",0,"True if default label BL used");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXTexBL=",0,"x position of label 2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYTexBL=",0,"y position of label 2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TLatex),-1,-1,2,"fTexBR=",0,"fixed          label 3 on bottom right of main canvas");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fStringBR=",0,"Used to store title of fTexBR");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDefTexBR=",0,"True if default label BR used");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXTexBR=",0,"x position of label 3");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYTexBR=",0,"y position of label 3");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TLatex),-1,-1,2,"fTexTR=",0,"fixed          label 4 on top    right of main canvas");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TString),-1,-1,2,"fStringTR=",0,"Used to store title of fTexTR");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDefTexTR=",0,"True if default label TR used");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXTexTR=",0,"x position of label 4");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYTexTR=",0,"y position of label 4");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Font_t"),-1,2,"fFontTex=",0,"font used for label");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fSizeTex=",0,"size of label font");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Width_t"),-1,2,"fWidthTex=",0,"line width for label text");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fColCan=",0,"Color of main canvas");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Style_t"),-1,2,"fStyleCan=",0,"Fill style of main canvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStyleStat=",0,"What to plot in stat");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fStyleHistColor=",0,"fill color of histograms");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fStyleTitleColor=",0,"Color of title");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fStyleTFColor=",0,"Fill color for title");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fStyleTTextColor=",0,"Color text of title");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fBszCan=",0,"Border size of main canvas");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPlaceLeft=",0,"Place at left of pad 1, to put buttons, in case fNbButtons != 0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmptyX=",0,"Empty space between pads in x");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmptyY=",0,"Empty space up and down pads");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbButtons=",0,"Number of buttons wanted");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TObjArray),-1,-1,2,"fCollBut=",0,"Collection of TButton");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TObjArray),-1,-1,2,"fButNames=",0,"Collection of TButton names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TObjArray),-1,-1,2,"fButActions=",0,"Collection of TButton actions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHeightBut=",0,"Height of one button");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFreeYBut=",0,"Space in y between buttons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXLowButton=",0,"XLow of all buttons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXUpButton=",0,"Xup of all buttons");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Font_t"),-1,2,"fFontButton=",0,"Font used in buttons");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fColorBut=",0,"Color of button");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fBszBut=",0,"Border size of buttons");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTextSBut=",0,"Size of text in button");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXLowPad1=",0,"XLow of fPad1 in fCanvas");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYLowPad=",0,"YLow of fPad1 and fPad2 in fCanvas");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXUpPad1=",0,"XUp  of fPad1 in fCanvas");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYUpPad=",0,"YUp  of fPad1 in fCanvas");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fColPad1=",0,"Color of fPad1");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Style_t"),-1,2,"fStylePad1=",0,"Fill style of pad1");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXLowPad2=",0,"XLow of fPad2 in fCanvas");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXUpPad2=",0,"XUp  of fPad2 in fCanvas");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fColPad2=",0,"Color of fPad2");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Style_t"),-1,2,"fStylePad2=",0,"Fill style of pad2");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fBszPad=",0,"Border size of both pads");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fColFrame=",0,"Color of frame of pad 1 or 2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTwoPadDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGDocument(void) {
   /* TGDocument */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument));
   G__memfunc_setup("TGDocument",986,G__TwoPadDict_289_0_1, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument), -1, 0, 7, 1, 1, 0, 
"C - - 10 '\"\"' fname C - - 10 '\"\"' title "
"i - 'Int_t' 0 '0' tabid U 'TGTab' - 0 '0' tab "
"U 'TGTabElement' - 0 '0' tabel U 'TGTextEdit' - 0 '0' edit "
"U 'TObjArray' - 0 '0' doclist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__TwoPadDict_289_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__TwoPadDict_289_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Save",399,G__TwoPadDict_289_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTabId",740,G__TwoPadDict_289_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsModified",989,G__TwoPadDict_289_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTabId",752,G__TwoPadDict_289_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Modified",801,G__TwoPadDict_289_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTextEdit",1099,G__TwoPadDict_289_0_9, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TGTextEdit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTab",567,G__TwoPadDict_289_0_10, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TGTab), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTabEl",744,G__TwoPadDict_289_0_11, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TGTabElement), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataChanged",1060,G__TwoPadDict_289_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataDropped",1096,G__TwoPadDict_289_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TwoPadDict_289_0_14, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGDocument::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TwoPadDict_289_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGDocument::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TwoPadDict_289_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGDocument::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TwoPadDict_289_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGDocument::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TwoPadDict_289_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TwoPadDict_289_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGDocument::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TwoPadDict_289_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGDocument::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TwoPadDict_289_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGDocument::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TwoPadDict_289_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGDocument::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGDocument", 986, G__TwoPadDict_289_0_26, (int) ('i'), G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument), -1, 0, 1, 1, 1, 0, "u 'TGDocument' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGDocument", 1112, G__TwoPadDict_289_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TwoPadDict_289_0_28, (int) ('u'), G__get_linked_tagnum(&G__TwoPadDictLN_TGDocument), -1, 1, 1, 1, 1, 0, "u 'TGDocument' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGRootIDE(void) {
   /* TGRootIDE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE));
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TGRootIDE",785,G__TwoPadDict_290_0_2, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE), -1, 0, 4, 1, 1, 0, 
"C - - 10 '0' filename U 'TGWindow' - 10 '0' p "
"h - 'UInt_t' 0 '900' w h - 'UInt_t' 0 '600' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGRootIDE",785,G__TwoPadDict_290_0_3, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE), -1, 0, 4, 1, 1, 0, 
"U 'TMacro' - 0 - macro U 'TGWindow' - 10 '0' p "
"h - 'UInt_t' 0 '0' w h - 'UInt_t' 0 '0' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleKey",885,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'Event_t' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTimer' - 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearText",908,G__TwoPadDict_290_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadBuffer",986,G__TwoPadDict_290_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - buf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFile",768,G__TwoPadDict_290_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 'NULL' fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveFile",783,G__TwoPadDict_290_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveFileAs",963,G__TwoPadDict_290_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintText",946,G__TwoPadDict_290_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Search",598,G__TwoPadDict_290_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - ret", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Goto",409,G__TwoPadDict_290_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("About",507,G__TwoPadDict_290_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSaved",687,G__TwoPadDict_290_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CompileMacro",1211,G__TwoPadDict_290_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteMacro",1221,G__TwoPadDict_290_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InterruptMacro",1471,G__TwoPadDict_290_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetText",721,G__TwoPadDict_290_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGText' - 0 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddText",686,G__TwoPadDict_290_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGText' - 0 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLine",657,G__TwoPadDict_290_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - string", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLineFast",1055,G__TwoPadDict_290_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - string", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetText",709,G__TwoPadDict_290_0_25, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TGText), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayFile",1110,G__TwoPadDict_290_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayDirectory",1675,G__TwoPadDict_290_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayObject",1325,G__TwoPadDict_290_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - fname u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnDoubleClick",1278,G__TwoPadDict_290_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGLVEntry' - 0 - f i - 'Int_t' 0 - btn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseTab",781,G__TwoPadDict_290_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoTab",458,G__TwoPadDict_290_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyFilter",1132,G__TwoPadDict_290_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckRemote",1098,G__TwoPadDict_290_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DirSelected",1096,G__TwoPadDict_290_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DirChanged",969,G__TwoPadDict_290_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Selected",809,G__TwoPadDict_290_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("URLChanged",925,G__TwoPadDict_290_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Back",369,G__TwoPadDict_290_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Forward",725,G__TwoPadDict_290_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reload",599,G__TwoPadDict_290_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Stop",422,G__TwoPadDict_290_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MouseOver",933,G__TwoPadDict_290_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MouseDown",929,G__TwoPadDict_290_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TwoPadDict_290_0_44, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGRootIDE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TwoPadDict_290_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGRootIDE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TwoPadDict_290_0_46, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGRootIDE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TwoPadDict_290_0_47, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGRootIDE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TwoPadDict_290_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TwoPadDict_290_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGRootIDE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TwoPadDict_290_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGRootIDE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TwoPadDict_290_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGRootIDE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TwoPadDict_290_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGRootIDE::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGRootIDE", 911, G__TwoPadDict_290_0_56, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAuthor(void) {
   /* TAuthor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAuthor",711,G__TwoPadDict_291_0_2, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAuthor",711,G__TwoPadDict_291_0_3, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAuthor",711,G__TwoPadDict_291_0_4, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor), -1, 0, 7, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"C - - 10 '\"\"' - C - - 10 '\"\"' - "
"C - - 10 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAddress",975,G__TwoPadDict_291_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - addr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCountry",1021,G__TwoPadDict_291_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - country", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMail",652,G__TwoPadDict_291_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - mail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPhone",771,G__TwoPadDict_291_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - phone", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddWebSite",956,G__TwoPadDict_291_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - web", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAddress",998,G__TwoPadDict_291_0_10, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCountry",1044,G__TwoPadDict_291_0_11, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitials",1117,G__TwoPadDict_291_0_12, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMail",675,G__TwoPadDict_291_0_13, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhone",794,G__TwoPadDict_291_0_14, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWebSite",979,G__TwoPadDict_291_0_15, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TwoPadDict_291_0_16, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TwoPadDict_291_0_17, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAuthor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TwoPadDict_291_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAuthor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TwoPadDict_291_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAuthor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TwoPadDict_291_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAuthor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TwoPadDict_291_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TwoPadDict_291_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAuthor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TwoPadDict_291_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAuthor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TwoPadDict_291_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAuthor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TwoPadDict_291_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAuthor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAuthor", 711, G__TwoPadDict_291_0_29, (int) ('i'), G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor), -1, 0, 1, 1, 1, 0, "u 'TAuthor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAuthor", 837, G__TwoPadDict_291_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TwoPadDict_291_0_31, (int) ('u'), G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor), -1, 1, 1, 1, 1, 0, "u 'TAuthor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTReference(void) {
   /* TReference */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TReference));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TReference",995,G__TwoPadDict_293_0_2, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TReference), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TReference",995,G__TwoPadDict_293_0_3, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TReference), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TReference",995,G__TwoPadDict_293_0_4, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TReference), -1, 0, 4, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - C - - 10 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAuthor",892,G__TwoPadDict_293_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TAuthor' - 0 - author", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollection",1324,G__TwoPadDict_293_0_6, 117, G__get_linked_tagnum(&G__TwoPadDictLN_TObjArray), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFramework",1230,G__TwoPadDict_293_0_7, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLanguage",1092,G__TwoPadDict_293_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfAuthor",1272,G__TwoPadDict_293_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVersion",1030,G__TwoPadDict_293_0_10, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWebSite",979,G__TwoPadDict_293_0_11, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAuthor",915,G__TwoPadDict_293_0_12, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TAuthor), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFramework",1242,G__TwoPadDict_293_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLanguage",1104,G__TwoPadDict_293_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVersion",1042,G__TwoPadDict_293_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWebSite",991,G__TwoPadDict_293_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TwoPadDict_293_0_17, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TReference::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TwoPadDict_293_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReference::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TwoPadDict_293_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TReference::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TwoPadDict_293_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TReference::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TwoPadDict_293_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TwoPadDict_293_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReference::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TwoPadDict_293_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TReference::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TwoPadDict_293_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReference::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TwoPadDict_293_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TReference::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TReference", 1121, G__TwoPadDict_293_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTwoPadDisplay(void) {
   /* TwoPadDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay));
   G__memfunc_setup("BookButtons",1146,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookCanvas",999,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookLabels",990,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookPad1",721,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookPad2",722,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommentTL",883,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommentBL",865,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommentBR",871,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommentTR",889,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateContent",1327,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefRef",556,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteContent",1326,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteLabels",1190,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeletePads",987,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecalcX",674,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecalcY",675,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDate",682,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TwoPadDisplay",1317,G__TwoPadDict_328_0_20, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TwoPadDisplay",1317,G__TwoPadDict_328_0_21, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay), -1, 0, 5, 1, 1, 0, 
"U 'TReference' - 0 - - s - 'Short_t' 0 '4' - "
"i - 'Int_t' 0 '24' - i - 'Int_t' 0 '2' - "
"i - 'Int_t' 0 '2' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TwoPadDisplay",1317,G__TwoPadDict_328_0_22, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay), -1, 0, 6, 1, 1, 0, 
"U 'TReference' - 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"h - 'UInt_t' 0 - - h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TwoPadDisplay",1317,G__TwoPadDict_328_0_23, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay), -1, 0, 4, 1, 1, 0, 
"U 'TReference' - 0 - - U 'TCanvas' - 0 - - "
"i - 'Int_t' 0 '24' - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TwoPadDisplay",1317,G__TwoPadDict_328_0_24, 105, G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"U 'TReference' - 0 - - i - 'Int_t' 0 '24' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CanDelete",869,G__TwoPadDict_328_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CanDelete",869,G__TwoPadDict_328_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangePad",859,G__TwoPadDict_328_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangePadLogX",1237,G__TwoPadDict_328_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangePadLogY",1238,G__TwoPadDict_328_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("CommentTL",883,G__TwoPadDict_328_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommentBL",865,G__TwoPadDict_328_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommentBR",871,G__TwoPadDict_328_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommentTR",889,G__TwoPadDict_328_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefCommentTL",1154,G__TwoPadDict_328_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefCommentBL",1136,G__TwoPadDict_328_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefCommentBR",1142,G__TwoPadDict_328_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefCommentTR",1160,G__TwoPadDict_328_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawLabels",993,G__TwoPadDict_328_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Editor",615,G__TwoPadDict_328_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBorderCan",1168,G__TwoPadDict_328_0_40, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBorderPad",1171,G__TwoPadDict_328_0_41, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetButton",924,G__TwoPadDict_328_0_42, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TButton), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvas",892,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TwoPadDictLN_TCanvas), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetColCan",848,G__TwoPadDict_328_0_44, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColFrame",1065,G__TwoPadDict_328_0_45, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColPad1",900,G__TwoPadDict_328_0_46, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColPad2",901,G__TwoPadDict_328_0_47, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEmptyX",903,G__TwoPadDict_328_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEmptyY",904,G__TwoPadDict_328_0_49, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFontTex",1000,G__TwoPadDict_328_0_50, 115, -1, G__defined_typename("Font_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbButtons",1215,G__TwoPadDict_328_0_51, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPad1",614,G__TwoPadDict_328_0_52, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPad2",615,G__TwoPadDict_328_0_53, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPadLogX",943,G__TwoPadDict_328_0_54, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPadLogY",944,G__TwoPadDict_328_0_55, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaceLeft",1168,G__TwoPadDict_328_0_56, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRef",573,G__TwoPadDict_328_0_57, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TReference), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSizeTex",1004,G__TwoPadDict_328_0_58, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStateOfPads",1374,G__TwoPadDict_328_0_59, 105, G__get_linked_tagnum(&G__TwoPadDictLN_StateOfPads), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStyleCan",1091,G__TwoPadDict_328_0_60, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStylePad1",1143,G__TwoPadDict_328_0_61, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStylePad2",1144,G__TwoPadDict_328_0_62, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStyleStat",1229,G__TwoPadDict_328_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUsePad2",916,G__TwoPadDict_328_0_64, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidthTex",1105,G__TwoPadDict_328_0_65, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXLowPad1",1008,G__TwoPadDict_328_0_66, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXLowPad2",1009,G__TwoPadDict_328_0_67, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXUpPad1",899,G__TwoPadDict_328_0_68, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXUpPad2",900,G__TwoPadDict_328_0_69, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYLowPad",960,G__TwoPadDict_328_0_70, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYUpPad",851,G__TwoPadDict_328_0_71, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXTexTL",841,G__TwoPadDict_328_0_72, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXTexBL",823,G__TwoPadDict_328_0_73, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXTexBR",829,G__TwoPadDict_328_0_74, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXTexTR",847,G__TwoPadDict_328_0_75, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYTexTL",842,G__TwoPadDict_328_0_76, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYTexBL",824,G__TwoPadDict_328_0_77, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYTexBR",830,G__TwoPadDict_328_0_78, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYTexTR",848,G__TwoPadDict_328_0_79, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GreyOrColor",1111,G__TwoPadDict_328_0_80, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveCanvas",1003,G__TwoPadDict_328_0_81, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectCanvas",1212,G__TwoPadDict_328_0_82, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectPad1",934,G__TwoPadDict_328_0_83, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectPad2",935,G__TwoPadDict_328_0_84, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllColor",1092,G__TwoPadDict_328_0_85, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetAllGrey",988,G__TwoPadDict_328_0_86, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetBorderCan",1180,G__TwoPadDict_328_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBorderPad",1183,G__TwoPadDict_328_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetButton",936,G__TwoPadDict_328_0_89, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - C - - 10 - - "
"C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetButtonFast",1334,G__TwoPadDict_328_0_90, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - C - - 10 - - "
"C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColCan",860,G__TwoPadDict_328_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColFrame",1077,G__TwoPadDict_328_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColPad1",912,G__TwoPadDict_328_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColPad2",913,G__TwoPadDict_328_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEmptyX",915,G__TwoPadDict_328_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEmptyY",916,G__TwoPadDict_328_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtForSave",1299,G__TwoPadDict_328_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFontTex",1012,G__TwoPadDict_328_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Font_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameForSave",1379,G__TwoPadDict_328_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNbButtons",1227,G__TwoPadDict_328_0_100, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPadLogX",955,G__TwoPadDict_328_0_101, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - L", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPadLogY",956,G__TwoPadDict_328_0_102, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - L", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlaceLeft",1180,G__TwoPadDict_328_0_103, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRef",585,G__TwoPadDict_328_0_104, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TReference' - 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSizeTex",1016,G__TwoPadDict_328_0_105, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStateOfPads",1386,G__TwoPadDict_328_0_106, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StateOfPads' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStyleCan",1103,G__TwoPadDict_328_0_107, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStylePad1",1155,G__TwoPadDict_328_0_108, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStylePad2",1156,G__TwoPadDict_328_0_109, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStyleStat",1241,G__TwoPadDict_328_0_110, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWidthTex",1117,G__TwoPadDict_328_0_111, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXTexTL",853,G__TwoPadDict_328_0_112, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYTexTL",854,G__TwoPadDict_328_0_113, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXTexBL",835,G__TwoPadDict_328_0_114, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYTexBL",836,G__TwoPadDict_328_0_115, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXTexBR",841,G__TwoPadDict_328_0_116, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYTexBR",842,G__TwoPadDict_328_0_117, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXTexTR",859,G__TwoPadDict_328_0_118, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYTexTR",860,G__TwoPadDict_328_0_119, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggleButtons",1361,G__TwoPadDict_328_0_120, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("ToggleState",1123,G__TwoPadDict_328_0_121, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("UpdateCanvas",1215,G__TwoPadDict_328_0_122, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateIt",800,G__TwoPadDict_328_0_123, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdatePad1",937,G__TwoPadDict_328_0_124, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdatePad2",938,G__TwoPadDict_328_0_125, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TwoPadDict_328_0_126, 85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TwoPadDisplay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TwoPadDict_328_0_127, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TwoPadDisplay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TwoPadDict_328_0_128, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TwoPadDisplay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TwoPadDict_328_0_129, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TwoPadDisplay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TwoPadDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TwoPadDict_328_0_133, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TwoPadDict_328_0_134, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TwoPadDisplay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TwoPadDict_328_0_135, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TwoPadDisplay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TwoPadDict_328_0_136, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TwoPadDisplay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TwoPadDict_328_0_137, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TwoPadDisplay::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TwoPadDisplay", 1443, G__TwoPadDict_328_0_138, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTwoPadDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
   G__memvar_setup((void*)(&gRootIDE),85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TGRootIDE),-1,-1,1,"gRootIDE=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TwoPadDictLN_StateOfPads),-1,-1,1,"Pad1AndPad2=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TwoPadDictLN_StateOfPads),-1,-1,1,"Pad1Only=1",0,(char*)NULL);
}

static void G__cpp_setup_global7() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TwoPadDictLN_StateOfPads),-1,-1,1,"Pad2Only=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TwoPadDictLN_StateOfPads),-1,-1,1,"OnePad=3",0,(char*)NULL);
   G__memvar_setup((void*)(&gTwoPad),85,0,0,G__get_linked_tagnum(&G__TwoPadDictLN_TwoPadDisplay),-1,-1,1,"gTwoPad=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTwoPadDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTwoPadDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TwoPadDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__TwoPadDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGText = { "TGText" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGTextView = { "TGTextView" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGTextEdit = { "TGTextEdit" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGToolBar = { "TGToolBar" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TMacro = { "TMacro" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGComboBox = { "TGComboBox" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGTextBuffer = { "TGTextBuffer" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGFileContainer = { "TGFileContainer" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGLVEntry = { "TGLVEntry" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGTabElement = { "TGTabElement" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGPictureButton = { "TGPictureButton" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_THtml = { "THtml" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGHtml = { "TGHtml" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGDocument = { "TGDocument" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TGRootIDE = { "TGRootIDE" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TAuthor = { "TAuthor" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TReference = { "TReference" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TAttBBox2D = { "TAttBBox2D" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TAttPad = { "TAttPad" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_TButton = { "TButton" , 99 , -1 };
G__linked_taginfo G__TwoPadDictLN_StateOfPads = { "StateOfPads" , 101 , -1 };
G__linked_taginfo G__TwoPadDictLN_TwoPadDisplay = { "TwoPadDisplay" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTwoPadDict() {
  G__TwoPadDictLN_TClass.tagnum = -1 ;
  G__TwoPadDictLN_TBuffer.tagnum = -1 ;
  G__TwoPadDictLN_TMemberInspector.tagnum = -1 ;
  G__TwoPadDictLN_TObject.tagnum = -1 ;
  G__TwoPadDictLN_TNamed.tagnum = -1 ;
  G__TwoPadDictLN_TString.tagnum = -1 ;
  G__TwoPadDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TwoPadDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TwoPadDictLN_TObjArray.tagnum = -1 ;
  G__TwoPadDictLN_TTimer.tagnum = -1 ;
  G__TwoPadDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TwoPadDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TwoPadDictLN_Event_t.tagnum = -1 ;
  G__TwoPadDictLN_TGObject.tagnum = -1 ;
  G__TwoPadDictLN_TQObject.tagnum = -1 ;
  G__TwoPadDictLN_TGWindow.tagnum = -1 ;
  G__TwoPadDictLN_TAttLine.tagnum = -1 ;
  G__TwoPadDictLN_TAttFill.tagnum = -1 ;
  G__TwoPadDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__TwoPadDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__TwoPadDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TwoPadDictLN_TGFrame.tagnum = -1 ;
  G__TwoPadDictLN_TGCompositeFrame.tagnum = -1 ;
  G__TwoPadDictLN_TGLayoutHints.tagnum = -1 ;
  G__TwoPadDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TwoPadDictLN_TGVerticalFrame.tagnum = -1 ;
  G__TwoPadDictLN_TGHorizontalFrame.tagnum = -1 ;
  G__TwoPadDictLN_TGMainFrame.tagnum = -1 ;
  G__TwoPadDictLN_TGText.tagnum = -1 ;
  G__TwoPadDictLN_TGTextView.tagnum = -1 ;
  G__TwoPadDictLN_TGPopupMenu.tagnum = -1 ;
  G__TwoPadDictLN_TGTextEdit.tagnum = -1 ;
  G__TwoPadDictLN_TGToolBar.tagnum = -1 ;
  G__TwoPadDictLN_TGStatusBar.tagnum = -1 ;
  G__TwoPadDictLN_TGMenuBar.tagnum = -1 ;
  G__TwoPadDictLN_TMacro.tagnum = -1 ;
  G__TwoPadDictLN_TGTextEntry.tagnum = -1 ;
  G__TwoPadDictLN_TGComboBox.tagnum = -1 ;
  G__TwoPadDictLN_TGTextBuffer.tagnum = -1 ;
  G__TwoPadDictLN_TGTab.tagnum = -1 ;
  G__TwoPadDictLN_TGFileContainer.tagnum = -1 ;
  G__TwoPadDictLN_TGLVEntry.tagnum = -1 ;
  G__TwoPadDictLN_TGTabElement.tagnum = -1 ;
  G__TwoPadDictLN_TGPictureButton.tagnum = -1 ;
  G__TwoPadDictLN_THtml.tagnum = -1 ;
  G__TwoPadDictLN_TGLabel.tagnum = -1 ;
  G__TwoPadDictLN_TGHtml.tagnum = -1 ;
  G__TwoPadDictLN_TGDocument.tagnum = -1 ;
  G__TwoPadDictLN_TGRootIDE.tagnum = -1 ;
  G__TwoPadDictLN_TAuthor.tagnum = -1 ;
  G__TwoPadDictLN_TReference.tagnum = -1 ;
  G__TwoPadDictLN_TAttBBox2D.tagnum = -1 ;
  G__TwoPadDictLN_TLatex.tagnum = -1 ;
  G__TwoPadDictLN_TAttPad.tagnum = -1 ;
  G__TwoPadDictLN_TCanvas.tagnum = -1 ;
  G__TwoPadDictLN_TVirtualPad.tagnum = -1 ;
  G__TwoPadDictLN_TPad.tagnum = -1 ;
  G__TwoPadDictLN_TButton.tagnum = -1 ;
  G__TwoPadDictLN_StateOfPads.tagnum = -1 ;
  G__TwoPadDictLN_TwoPadDisplay.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTwoPadDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TString);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TTimer);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_Event_t);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGObject);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGText);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGTextView);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGTextEdit);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGToolBar);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGStatusBar);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGMenuBar);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TMacro);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGComboBox);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGTextBuffer);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGTab);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGFileContainer);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGLVEntry);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGTabElement);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGPictureButton);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_THtml);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGHtml);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGDocument),sizeof(TGDocument),-1,62720,"Simple class describing document used in TGRootIDE",G__setup_memvarTGDocument,G__setup_memfuncTGDocument);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TGRootIDE),sizeof(TGRootIDE),-1,62720,"Simple IDE using TGTextEdit and TGHtml widgets",G__setup_memvarTGRootIDE,G__setup_memfuncTGRootIDE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TAuthor),sizeof(TAuthor),-1,324864,"Class giving info on one author of program",G__setup_memvarTAuthor,G__setup_memfuncTAuthor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TReference),sizeof(TReference),-1,324864,"Class to specify references for a program",G__setup_memvarTReference,G__setup_memfuncTReference);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TAttBBox2D);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TLatex);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TAttPad);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TVirtualPad);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TPad);
   G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TButton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TwoPadDictLN_StateOfPads),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TwoPadDictLN_TwoPadDisplay),sizeof(TwoPadDisplay),-1,324864,"Useful to show drawings or histograms into 2 pads",G__setup_memvarTwoPadDisplay,G__setup_memfuncTwoPadDisplay);
}
extern "C" void G__cpp_setupTwoPadDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTwoPadDict()");
  G__set_cpp_environmentTwoPadDict();
  G__cpp_setup_tagtableTwoPadDict();

  G__cpp_setup_inheritanceTwoPadDict();

  G__cpp_setup_typetableTwoPadDict();

  G__cpp_setup_memvarTwoPadDict();

  G__cpp_setup_memfuncTwoPadDict();
  G__cpp_setup_globalTwoPadDict();
  G__cpp_setup_funcTwoPadDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTwoPadDict();
  return;
}
class G__cpp_setup_initTwoPadDict {
  public:
    G__cpp_setup_initTwoPadDict() { G__add_setup_func("TwoPadDict",(G__incsetup)(&G__cpp_setupTwoPadDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTwoPadDict() { G__remove_setup_func("TwoPadDict"); }
};
G__cpp_setup_initTwoPadDict G__cpp_setup_initializerTwoPadDict;

