//
// File generated by /home/gregor/root5/bin/rootcint at Sun Aug 12 11:15:04 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME SLitraniDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SLitraniDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TLitPol3_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitPol3(void *p = 0);
   static void *newArray_TLitPol3(Long_t size, void *p);
   static void delete_TLitPol3(void *p);
   static void deleteArray_TLitPol3(void *p);
   static void destruct_TLitPol3(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitPol3*)
   {
      ::TLitPol3 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitPol3 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitPol3", ::TLitPol3::Class_Version(), "./TLitPol3.h", 17,
                  typeid(::TLitPol3), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitPol3::Dictionary, isa_proxy, 4,
                  sizeof(::TLitPol3) );
      instance.SetNew(&new_TLitPol3);
      instance.SetNewArray(&newArray_TLitPol3);
      instance.SetDelete(&delete_TLitPol3);
      instance.SetDeleteArray(&deleteArray_TLitPol3);
      instance.SetDestructor(&destruct_TLitPol3);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitPol3*)
   {
      return GenerateInitInstanceLocal((::TLitPol3*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitPol3*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitPol4_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitPol4(void *p = 0);
   static void *newArray_TLitPol4(Long_t size, void *p);
   static void delete_TLitPol4(void *p);
   static void deleteArray_TLitPol4(void *p);
   static void destruct_TLitPol4(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitPol4*)
   {
      ::TLitPol4 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitPol4 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitPol4", ::TLitPol4::Class_Version(), "./TLitPol4.h", 26,
                  typeid(::TLitPol4), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitPol4::Dictionary, isa_proxy, 4,
                  sizeof(::TLitPol4) );
      instance.SetNew(&new_TLitPol4);
      instance.SetNewArray(&newArray_TLitPol4);
      instance.SetDelete(&delete_TLitPol4);
      instance.SetDeleteArray(&deleteArray_TLitPol4);
      instance.SetDestructor(&destruct_TLitPol4);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitPol4*)
   {
      return GenerateInitInstanceLocal((::TLitPol4*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitPol4*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitEqIndex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitEqIndex(void *p = 0);
   static void *newArray_TLitEqIndex(Long_t size, void *p);
   static void delete_TLitEqIndex(void *p);
   static void deleteArray_TLitEqIndex(void *p);
   static void destruct_TLitEqIndex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitEqIndex*)
   {
      ::TLitEqIndex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitEqIndex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitEqIndex", ::TLitEqIndex::Class_Version(), "./TLitEqIndex.h", 24,
                  typeid(::TLitEqIndex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitEqIndex::Dictionary, isa_proxy, 4,
                  sizeof(::TLitEqIndex) );
      instance.SetNew(&new_TLitEqIndex);
      instance.SetNewArray(&newArray_TLitEqIndex);
      instance.SetDelete(&delete_TLitEqIndex);
      instance.SetDeleteArray(&deleteArray_TLitEqIndex);
      instance.SetDestructor(&destruct_TLitEqIndex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitEqIndex*)
   {
      return GenerateInitInstanceLocal((::TLitEqIndex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitEqIndex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitWave_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitWave(void *p = 0);
   static void *newArray_TLitWave(Long_t size, void *p);
   static void delete_TLitWave(void *p);
   static void deleteArray_TLitWave(void *p);
   static void destruct_TLitWave(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitWave*)
   {
      ::TLitWave *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitWave >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitWave", ::TLitWave::Class_Version(), "./TLitWave.h", 22,
                  typeid(::TLitWave), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitWave::Dictionary, isa_proxy, 4,
                  sizeof(::TLitWave) );
      instance.SetNew(&new_TLitWave);
      instance.SetNewArray(&newArray_TLitWave);
      instance.SetDelete(&delete_TLitWave);
      instance.SetDeleteArray(&deleteArray_TLitWave);
      instance.SetDestructor(&destruct_TLitWave);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitWave*)
   {
      return GenerateInitInstanceLocal((::TLitWave*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitWave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitPhoton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitPhoton(void *p = 0);
   static void *newArray_TLitPhoton(Long_t size, void *p);
   static void delete_TLitPhoton(void *p);
   static void deleteArray_TLitPhoton(void *p);
   static void destruct_TLitPhoton(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitPhoton*)
   {
      ::TLitPhoton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitPhoton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitPhoton", ::TLitPhoton::Class_Version(), "./TLitPhoton.h", 29,
                  typeid(::TLitPhoton), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitPhoton::Dictionary, isa_proxy, 4,
                  sizeof(::TLitPhoton) );
      instance.SetNew(&new_TLitPhoton);
      instance.SetNewArray(&newArray_TLitPhoton);
      instance.SetDelete(&delete_TLitPhoton);
      instance.SetDeleteArray(&deleteArray_TLitPhoton);
      instance.SetDestructor(&destruct_TLitPhoton);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitPhoton*)
   {
      return GenerateInitInstanceLocal((::TLitPhoton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitPhoton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitHistParams_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitHistParams(void *p = 0);
   static void *newArray_TLitHistParams(Long_t size, void *p);
   static void delete_TLitHistParams(void *p);
   static void deleteArray_TLitHistParams(void *p);
   static void destruct_TLitHistParams(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitHistParams*)
   {
      ::TLitHistParams *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitHistParams >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitHistParams", ::TLitHistParams::Class_Version(), "./TLitHistParams.h", 20,
                  typeid(::TLitHistParams), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitHistParams::Dictionary, isa_proxy, 4,
                  sizeof(::TLitHistParams) );
      instance.SetNew(&new_TLitHistParams);
      instance.SetNewArray(&newArray_TLitHistParams);
      instance.SetDelete(&delete_TLitHistParams);
      instance.SetDeleteArray(&deleteArray_TLitHistParams);
      instance.SetDestructor(&destruct_TLitHistParams);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitHistParams*)
   {
      return GenerateInitInstanceLocal((::TLitHistParams*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitHistParams*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitPhys_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitPhys*)
   {
      ::TLitPhys *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitPhys >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitPhys", ::TLitPhys::Class_Version(), "./TLitPhys.h", 25,
                  typeid(::TLitPhys), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitPhys::Dictionary, isa_proxy, 4,
                  sizeof(::TLitPhys) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitPhys*)
   {
      return GenerateInitInstanceLocal((::TLitPhys*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitPhys*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitTrap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitTrap(void *p = 0);
   static void *newArray_TLitTrap(Long_t size, void *p);
   static void delete_TLitTrap(void *p);
   static void deleteArray_TLitTrap(void *p);
   static void destruct_TLitTrap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitTrap*)
   {
      ::TLitTrap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitTrap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitTrap", ::TLitTrap::Class_Version(), "./TLitTrap.h", 18,
                  typeid(::TLitTrap), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitTrap::Dictionary, isa_proxy, 4,
                  sizeof(::TLitTrap) );
      instance.SetNew(&new_TLitTrap);
      instance.SetNewArray(&newArray_TLitTrap);
      instance.SetDelete(&delete_TLitTrap);
      instance.SetDeleteArray(&deleteArray_TLitTrap);
      instance.SetDestructor(&destruct_TLitTrap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitTrap*)
   {
      return GenerateInitInstanceLocal((::TLitTrap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitTrap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitSpectrumCp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitSpectrumCp(void *p = 0);
   static void *newArray_TLitSpectrumCp(Long_t size, void *p);
   static void delete_TLitSpectrumCp(void *p);
   static void deleteArray_TLitSpectrumCp(void *p);
   static void destruct_TLitSpectrumCp(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitSpectrumCp*)
   {
      ::TLitSpectrumCp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitSpectrumCp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitSpectrumCp", ::TLitSpectrumCp::Class_Version(), "./TLitSpectrumCp.h", 17,
                  typeid(::TLitSpectrumCp), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitSpectrumCp::Dictionary, isa_proxy, 4,
                  sizeof(::TLitSpectrumCp) );
      instance.SetNew(&new_TLitSpectrumCp);
      instance.SetNewArray(&newArray_TLitSpectrumCp);
      instance.SetDelete(&delete_TLitSpectrumCp);
      instance.SetDeleteArray(&deleteArray_TLitSpectrumCp);
      instance.SetDestructor(&destruct_TLitSpectrumCp);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitSpectrumCp*)
   {
      return GenerateInitInstanceLocal((::TLitSpectrumCp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitSpectrumCp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitSpectrum_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitSpectrum(void *p = 0);
   static void *newArray_TLitSpectrum(Long_t size, void *p);
   static void delete_TLitSpectrum(void *p);
   static void deleteArray_TLitSpectrum(void *p);
   static void destruct_TLitSpectrum(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitSpectrum*)
   {
      ::TLitSpectrum *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitSpectrum >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitSpectrum", ::TLitSpectrum::Class_Version(), "./TLitSpectrum.h", 28,
                  typeid(::TLitSpectrum), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitSpectrum::Dictionary, isa_proxy, 4,
                  sizeof(::TLitSpectrum) );
      instance.SetNew(&new_TLitSpectrum);
      instance.SetNewArray(&newArray_TLitSpectrum);
      instance.SetDelete(&delete_TLitSpectrum);
      instance.SetDeleteArray(&deleteArray_TLitSpectrum);
      instance.SetDestructor(&destruct_TLitSpectrum);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitSpectrum*)
   {
      return GenerateInitInstanceLocal((::TLitSpectrum*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitSpectrum*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitDetector(void *p = 0);
   static void *newArray_TLitDetector(Long_t size, void *p);
   static void delete_TLitDetector(void *p);
   static void deleteArray_TLitDetector(void *p);
   static void destruct_TLitDetector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitDetector*)
   {
      ::TLitDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitDetector", ::TLitDetector::Class_Version(), "./TLitDetector.h", 21,
                  typeid(::TLitDetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitDetector::Dictionary, isa_proxy, 4,
                  sizeof(::TLitDetector) );
      instance.SetNew(&new_TLitDetector);
      instance.SetNewArray(&newArray_TLitDetector);
      instance.SetDelete(&delete_TLitDetector);
      instance.SetDeleteArray(&deleteArray_TLitDetector);
      instance.SetDestructor(&destruct_TLitDetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitDetector*)
   {
      return GenerateInitInstanceLocal((::TLitDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitSellmeier_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitSellmeier(void *p = 0);
   static void *newArray_TLitSellmeier(Long_t size, void *p);
   static void delete_TLitSellmeier(void *p);
   static void deleteArray_TLitSellmeier(void *p);
   static void destruct_TLitSellmeier(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitSellmeier*)
   {
      ::TLitSellmeier *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitSellmeier >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitSellmeier", ::TLitSellmeier::Class_Version(), "./TLitSellmeier.h", 19,
                  typeid(::TLitSellmeier), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitSellmeier::Dictionary, isa_proxy, 4,
                  sizeof(::TLitSellmeier) );
      instance.SetNew(&new_TLitSellmeier);
      instance.SetNewArray(&newArray_TLitSellmeier);
      instance.SetDelete(&delete_TLitSellmeier);
      instance.SetDeleteArray(&deleteArray_TLitSellmeier);
      instance.SetDestructor(&destruct_TLitSellmeier);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitSellmeier*)
   {
      return GenerateInitInstanceLocal((::TLitSellmeier*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitSellmeier*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitMedium_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitMedium(void *p = 0);
   static void *newArray_TLitMedium(Long_t size, void *p);
   static void delete_TLitMedium(void *p);
   static void deleteArray_TLitMedium(void *p);
   static void destruct_TLitMedium(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitMedium*)
   {
      ::TLitMedium *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitMedium >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitMedium", ::TLitMedium::Class_Version(), "./TLitMedium.h", 28,
                  typeid(::TLitMedium), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitMedium::Dictionary, isa_proxy, 4,
                  sizeof(::TLitMedium) );
      instance.SetNew(&new_TLitMedium);
      instance.SetNewArray(&newArray_TLitMedium);
      instance.SetDelete(&delete_TLitMedium);
      instance.SetDeleteArray(&deleteArray_TLitMedium);
      instance.SetDestructor(&destruct_TLitMedium);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitMedium*)
   {
      return GenerateInitInstanceLocal((::TLitMedium*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitMedium*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitVolume_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitVolume(void *p = 0);
   static void *newArray_TLitVolume(Long_t size, void *p);
   static void delete_TLitVolume(void *p);
   static void deleteArray_TLitVolume(void *p);
   static void destruct_TLitVolume(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitVolume*)
   {
      ::TLitVolume *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitVolume >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitVolume", ::TLitVolume::Class_Version(), "./TLitVolume.h", 26,
                  typeid(::TLitVolume), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitVolume::Dictionary, isa_proxy, 4,
                  sizeof(::TLitVolume) );
      instance.SetNew(&new_TLitVolume);
      instance.SetNewArray(&newArray_TLitVolume);
      instance.SetDelete(&delete_TLitVolume);
      instance.SetDeleteArray(&deleteArray_TLitVolume);
      instance.SetDestructor(&destruct_TLitVolume);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitVolume*)
   {
      return GenerateInitInstanceLocal((::TLitVolume*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitVolume*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLit_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLit*)
   {
      ::TLit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLit", ::TLit::Class_Version(), "./TLit.h", 23,
                  typeid(::TLit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLit::Dictionary, isa_proxy, 4,
                  sizeof(::TLit) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLit*)
   {
      return GenerateInitInstanceLocal((::TLit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitResults_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitResults(void *p = 0);
   static void *newArray_TLitResults(Long_t size, void *p);
   static void delete_TLitResults(void *p);
   static void deleteArray_TLitResults(void *p);
   static void destruct_TLitResults(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitResults*)
   {
      ::TLitResults *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitResults >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitResults", ::TLitResults::Class_Version(), "./TLitResults.h", 21,
                  typeid(::TLitResults), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitResults::Dictionary, isa_proxy, 4,
                  sizeof(::TLitResults) );
      instance.SetNew(&new_TLitResults);
      instance.SetNewArray(&newArray_TLitResults);
      instance.SetDelete(&delete_TLitResults);
      instance.SetDeleteArray(&deleteArray_TLitResults);
      instance.SetDestructor(&destruct_TLitResults);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitResults*)
   {
      return GenerateInitInstanceLocal((::TLitResults*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitResults*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitMarrow_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitMarrow(void *p = 0);
   static void *newArray_TLitMarrow(Long_t size, void *p);
   static void delete_TLitMarrow(void *p);
   static void deleteArray_TLitMarrow(void *p);
   static void destruct_TLitMarrow(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitMarrow*)
   {
      ::TLitMarrow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitMarrow >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitMarrow", ::TLitMarrow::Class_Version(), "./TLitMarrow.h", 20,
                  typeid(::TLitMarrow), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitMarrow::Dictionary, isa_proxy, 4,
                  sizeof(::TLitMarrow) );
      instance.SetNew(&new_TLitMarrow);
      instance.SetNewArray(&newArray_TLitMarrow);
      instance.SetDelete(&delete_TLitMarrow);
      instance.SetDeleteArray(&deleteArray_TLitMarrow);
      instance.SetDestructor(&destruct_TLitMarrow);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitMarrow*)
   {
      return GenerateInitInstanceLocal((::TLitMarrow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitMarrow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitSpontan_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitSpontan(void *p = 0);
   static void *newArray_TLitSpontan(Long_t size, void *p);
   static void delete_TLitSpontan(void *p);
   static void deleteArray_TLitSpontan(void *p);
   static void destruct_TLitSpontan(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitSpontan*)
   {
      ::TLitSpontan *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitSpontan >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitSpontan", ::TLitSpontan::Class_Version(), "./TLitSpontan.h", 23,
                  typeid(::TLitSpontan), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitSpontan::Dictionary, isa_proxy, 4,
                  sizeof(::TLitSpontan) );
      instance.SetNew(&new_TLitSpontan);
      instance.SetNewArray(&newArray_TLitSpontan);
      instance.SetDelete(&delete_TLitSpontan);
      instance.SetDeleteArray(&deleteArray_TLitSpontan);
      instance.SetDestructor(&destruct_TLitSpontan);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitSpontan*)
   {
      return GenerateInitInstanceLocal((::TLitSpontan*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitSpontan*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitranino_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitranino(void *p = 0);
   static void *newArray_TLitranino(Long_t size, void *p);
   static void delete_TLitranino(void *p);
   static void deleteArray_TLitranino(void *p);
   static void destruct_TLitranino(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitranino*)
   {
      ::TLitranino *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitranino >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitranino", ::TLitranino::Class_Version(), "./TLitranino.h", 24,
                  typeid(::TLitranino), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitranino::Dictionary, isa_proxy, 4,
                  sizeof(::TLitranino) );
      instance.SetNew(&new_TLitranino);
      instance.SetNewArray(&newArray_TLitranino);
      instance.SetDelete(&delete_TLitranino);
      instance.SetDeleteArray(&deleteArray_TLitranino);
      instance.SetDestructor(&destruct_TLitranino);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitranino*)
   {
      return GenerateInitInstanceLocal((::TLitranino*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitranino*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitParticle(void *p = 0);
   static void *newArray_TLitParticle(Long_t size, void *p);
   static void delete_TLitParticle(void *p);
   static void deleteArray_TLitParticle(void *p);
   static void destruct_TLitParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitParticle*)
   {
      ::TLitParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitParticle", ::TLitParticle::Class_Version(), "./TLitParticle.h", 20,
                  typeid(::TLitParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitParticle::Dictionary, isa_proxy, 4,
                  sizeof(::TLitParticle) );
      instance.SetNew(&new_TLitParticle);
      instance.SetNewArray(&newArray_TLitParticle);
      instance.SetDelete(&delete_TLitParticle);
      instance.SetDeleteArray(&deleteArray_TLitParticle);
      instance.SetDestructor(&destruct_TLitParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitParticle*)
   {
      return GenerateInitInstanceLocal((::TLitParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitBeam_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitBeam(void *p = 0);
   static void *newArray_TLitBeam(Long_t size, void *p);
   static void delete_TLitBeam(void *p);
   static void deleteArray_TLitBeam(void *p);
   static void destruct_TLitBeam(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitBeam*)
   {
      ::TLitBeam *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitBeam >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitBeam", ::TLitBeam::Class_Version(), "./TLitBeam.h", 26,
                  typeid(::TLitBeam), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitBeam::Dictionary, isa_proxy, 4,
                  sizeof(::TLitBeam) );
      instance.SetNew(&new_TLitBeam);
      instance.SetNewArray(&newArray_TLitBeam);
      instance.SetDelete(&delete_TLitBeam);
      instance.SetDeleteArray(&deleteArray_TLitBeam);
      instance.SetDestructor(&destruct_TLitBeam);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitBeam*)
   {
      return GenerateInitInstanceLocal((::TLitBeam*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitBeam*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitCascade_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitCascade(void *p = 0);
   static void *newArray_TLitCascade(Long_t size, void *p);
   static void delete_TLitCascade(void *p);
   static void deleteArray_TLitCascade(void *p);
   static void destruct_TLitCascade(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitCascade*)
   {
      ::TLitCascade *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitCascade >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitCascade", ::TLitCascade::Class_Version(), "./TLitCascade.h", 23,
                  typeid(::TLitCascade), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitCascade::Dictionary, isa_proxy, 4,
                  sizeof(::TLitCascade) );
      instance.SetNew(&new_TLitCascade);
      instance.SetNewArray(&newArray_TLitCascade);
      instance.SetDelete(&delete_TLitCascade);
      instance.SetDeleteArray(&deleteArray_TLitCascade);
      instance.SetDestructor(&destruct_TLitCascade);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitCascade*)
   {
      return GenerateInitInstanceLocal((::TLitCascade*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitCascade*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitGamma_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitGamma(void *p = 0);
   static void *newArray_TLitGamma(Long_t size, void *p);
   static void delete_TLitGamma(void *p);
   static void deleteArray_TLitGamma(void *p);
   static void destruct_TLitGamma(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitGamma*)
   {
      ::TLitGamma *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitGamma >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitGamma", ::TLitGamma::Class_Version(), "./TLitGamma.h", 24,
                  typeid(::TLitGamma), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitGamma::Dictionary, isa_proxy, 4,
                  sizeof(::TLitGamma) );
      instance.SetNew(&new_TLitGamma);
      instance.SetNewArray(&newArray_TLitGamma);
      instance.SetDelete(&delete_TLitGamma);
      instance.SetDeleteArray(&deleteArray_TLitGamma);
      instance.SetDestructor(&destruct_TLitGamma);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitGamma*)
   {
      return GenerateInitInstanceLocal((::TLitGamma*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitGamma*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TLitAlbedo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLitAlbedo(void *p = 0);
   static void *newArray_TLitAlbedo(Long_t size, void *p);
   static void delete_TLitAlbedo(void *p);
   static void deleteArray_TLitAlbedo(void *p);
   static void destruct_TLitAlbedo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TLitAlbedo*)
   {
      ::TLitAlbedo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLitAlbedo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLitAlbedo", ::TLitAlbedo::Class_Version(), "./TLitAlbedo.h", 26,
                  typeid(::TLitAlbedo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TLitAlbedo::Dictionary, isa_proxy, 4,
                  sizeof(::TLitAlbedo) );
      instance.SetNew(&new_TLitAlbedo);
      instance.SetNewArray(&newArray_TLitAlbedo);
      instance.SetDelete(&delete_TLitAlbedo);
      instance.SetDeleteArray(&deleteArray_TLitAlbedo);
      instance.SetDestructor(&destruct_TLitAlbedo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TLitAlbedo*)
   {
      return GenerateInitInstanceLocal((::TLitAlbedo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLitAlbedo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TLitPol3::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitPol3::Class_Name()
{
   return "TLitPol3";
}

//______________________________________________________________________________
const char *TLitPol3::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPol3*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitPol3::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPol3*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitPol3::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPol3*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitPol3::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPol3*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitPol4::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitPol4::Class_Name()
{
   return "TLitPol4";
}

//______________________________________________________________________________
const char *TLitPol4::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPol4*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitPol4::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPol4*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitPol4::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPol4*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitPol4::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPol4*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitEqIndex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitEqIndex::Class_Name()
{
   return "TLitEqIndex";
}

//______________________________________________________________________________
const char *TLitEqIndex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitEqIndex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitEqIndex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitEqIndex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitEqIndex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitEqIndex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitEqIndex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitEqIndex*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitWave::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitWave::Class_Name()
{
   return "TLitWave";
}

//______________________________________________________________________________
const char *TLitWave::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitWave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitWave::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitWave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitWave::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitWave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitWave::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitWave*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitPhoton::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitPhoton::Class_Name()
{
   return "TLitPhoton";
}

//______________________________________________________________________________
const char *TLitPhoton::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPhoton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitPhoton::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPhoton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitPhoton::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPhoton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitPhoton::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPhoton*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitHistParams::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitHistParams::Class_Name()
{
   return "TLitHistParams";
}

//______________________________________________________________________________
const char *TLitHistParams::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitHistParams*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitHistParams::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitHistParams*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitHistParams::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitHistParams*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitHistParams::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitHistParams*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitPhys::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitPhys::Class_Name()
{
   return "TLitPhys";
}

//______________________________________________________________________________
const char *TLitPhys::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPhys*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitPhys::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPhys*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitPhys::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPhys*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitPhys::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitPhys*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitTrap::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitTrap::Class_Name()
{
   return "TLitTrap";
}

//______________________________________________________________________________
const char *TLitTrap::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitTrap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitTrap::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitTrap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitTrap::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitTrap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitTrap::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitTrap*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitSpectrumCp::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitSpectrumCp::Class_Name()
{
   return "TLitSpectrumCp";
}

//______________________________________________________________________________
const char *TLitSpectrumCp::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpectrumCp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitSpectrumCp::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpectrumCp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitSpectrumCp::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpectrumCp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitSpectrumCp::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpectrumCp*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitSpectrum::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitSpectrum::Class_Name()
{
   return "TLitSpectrum";
}

//______________________________________________________________________________
const char *TLitSpectrum::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpectrum*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitSpectrum::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpectrum*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitSpectrum::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpectrum*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitSpectrum::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpectrum*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitDetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitDetector::Class_Name()
{
   return "TLitDetector";
}

//______________________________________________________________________________
const char *TLitDetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitDetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitDetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitDetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitDetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitSellmeier::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitSellmeier::Class_Name()
{
   return "TLitSellmeier";
}

//______________________________________________________________________________
const char *TLitSellmeier::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSellmeier*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitSellmeier::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSellmeier*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitSellmeier::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSellmeier*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitSellmeier::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSellmeier*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitMedium::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitMedium::Class_Name()
{
   return "TLitMedium";
}

//______________________________________________________________________________
const char *TLitMedium::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitMedium*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitMedium::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitMedium*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitMedium::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitMedium*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitMedium::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitMedium*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitVolume::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitVolume::Class_Name()
{
   return "TLitVolume";
}

//______________________________________________________________________________
const char *TLitVolume::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitVolume*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitVolume::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitVolume*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitVolume::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitVolume*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitVolume::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitVolume*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLit::Class_Name()
{
   return "TLit";
}

//______________________________________________________________________________
const char *TLit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitResults::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitResults::Class_Name()
{
   return "TLitResults";
}

//______________________________________________________________________________
const char *TLitResults::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitResults*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitResults::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitResults*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitResults::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitResults*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitResults::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitResults*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitMarrow::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitMarrow::Class_Name()
{
   return "TLitMarrow";
}

//______________________________________________________________________________
const char *TLitMarrow::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitMarrow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitMarrow::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitMarrow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitMarrow::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitMarrow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitMarrow::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitMarrow*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitSpontan::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitSpontan::Class_Name()
{
   return "TLitSpontan";
}

//______________________________________________________________________________
const char *TLitSpontan::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpontan*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitSpontan::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpontan*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitSpontan::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpontan*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitSpontan::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitSpontan*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitranino::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitranino::Class_Name()
{
   return "TLitranino";
}

//______________________________________________________________________________
const char *TLitranino::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitranino*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitranino::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitranino*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitranino::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitranino*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitranino::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitranino*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitParticle::Class_Name()
{
   return "TLitParticle";
}

//______________________________________________________________________________
const char *TLitParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitParticle*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitBeam::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitBeam::Class_Name()
{
   return "TLitBeam";
}

//______________________________________________________________________________
const char *TLitBeam::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitBeam*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitBeam::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitBeam*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitBeam::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitBeam*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitBeam::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitBeam*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitCascade::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitCascade::Class_Name()
{
   return "TLitCascade";
}

//______________________________________________________________________________
const char *TLitCascade::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitCascade*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitCascade::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitCascade*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitCascade::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitCascade*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitCascade::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitCascade*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitGamma::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitGamma::Class_Name()
{
   return "TLitGamma";
}

//______________________________________________________________________________
const char *TLitGamma::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitGamma*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitGamma::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitGamma*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitGamma::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitGamma*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitGamma::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitGamma*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TLitAlbedo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TLitAlbedo::Class_Name()
{
   return "TLitAlbedo";
}

//______________________________________________________________________________
const char *TLitAlbedo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitAlbedo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLitAlbedo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TLitAlbedo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLitAlbedo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitAlbedo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLitAlbedo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TLitAlbedo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TLitPol3::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitPol3.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitPol3::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitPol3::Class(),this);
   }
}

//______________________________________________________________________________
void TLitPol3::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitPol3.
      TClass *R__cl = ::TLitPol3::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNd", &fNd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAn", &fAn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXt", &fXt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQ", &fQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMag", &fMag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNr", &fNr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRoots[3]", fRoots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fERoots[3]", fERoots);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitPol3(void *p) {
      return  p ? new(p) ::TLitPol3 : new ::TLitPol3;
   }
   static void *newArray_TLitPol3(Long_t nElements, void *p) {
      return p ? new(p) ::TLitPol3[nElements] : new ::TLitPol3[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitPol3(void *p) {
      delete ((::TLitPol3*)p);
   }
   static void deleteArray_TLitPol3(void *p) {
      delete [] ((::TLitPol3*)p);
   }
   static void destruct_TLitPol3(void *p) {
      typedef ::TLitPol3 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitPol3

//______________________________________________________________________________
void TLitPol4::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitPol4.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitPol4::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitPol4::Class(),this);
   }
}

//______________________________________________________________________________
void TLitPol4::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitPol4.
      TClass *R__cl = ::TLitPol4::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAn", &fAn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXt", &fXt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQ", &fQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR", &fR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMag", &fMag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNr", &fNr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNe", &fNe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYextr[3]", fYextr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPol3", &fPol3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRoots[4]", fRoots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fERoots[4]", fERoots);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitPol4(void *p) {
      return  p ? new(p) ::TLitPol4 : new ::TLitPol4;
   }
   static void *newArray_TLitPol4(Long_t nElements, void *p) {
      return p ? new(p) ::TLitPol4[nElements] : new ::TLitPol4[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitPol4(void *p) {
      delete ((::TLitPol4*)p);
   }
   static void deleteArray_TLitPol4(void *p) {
      delete [] ((::TLitPol4*)p);
   }
   static void destruct_TLitPol4(void *p) {
      typedef ::TLitPol4 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitPol4

//______________________________________________________________________________
void TLitHistParams::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitHistParams.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitHistParams::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitHistParams::Class(),this);
   }
}

//______________________________________________________________________________
void TLitHistParams::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitHistParams.
      TClass *R__cl = ::TLitHistParams::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHKind", &fHKind);
      R__insp.InspectMember(fHKind, "fHKind.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHName", &fHName);
      R__insp.InspectMember(fHName, "fHName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHTitle", &fHTitle);
      R__insp.InspectMember(fHTitle, "fHTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHNbinsx", &fHNbinsx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHXlow", &fHXlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHXup", &fHXup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHNbinsy", &fHNbinsy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHYlow", &fHYlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHYup", &fHYup);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitHistParams(void *p) {
      return  p ? new(p) ::TLitHistParams : new ::TLitHistParams;
   }
   static void *newArray_TLitHistParams(Long_t nElements, void *p) {
      return p ? new(p) ::TLitHistParams[nElements] : new ::TLitHistParams[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitHistParams(void *p) {
      delete ((::TLitHistParams*)p);
   }
   static void deleteArray_TLitHistParams(void *p) {
      delete [] ((::TLitHistParams*)p);
   }
   static void destruct_TLitHistParams(void *p) {
      typedef ::TLitHistParams current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitHistParams

//______________________________________________________________________________
void TLitPhys::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitPhys.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitPhys::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitPhys::Class(),this);
   }
}

//______________________________________________________________________________
void TLitPhys::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitPhys.
      TClass *R__cl = ::TLitPhys::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC", &fC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCcmps", &fCcmps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCmks", &fCmks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMe", &fMe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeg", &fMeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR02", &fR02);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHbar", &fHbar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlpha", &fAlpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEps0", &fEps0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAvogadro", &fAvogadro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAvoDivE26", &fAvoDivE26);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVphot", &fVphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTooLate", &fTooLate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThreshe", &fThreshe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxAnomal", &fMaxAnomal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinWaveL", &fMinWaveL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxWaveL", &fMaxWaveL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBiggestStep", &fBiggestStep);
}

namespace ROOTDict {
} // end of namespace ROOTDict for class ::TLitPhys

//______________________________________________________________________________
void TLitWave::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitWave.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitWave::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitWave::Class(),this);
   }
}

//______________________________________________________________________________
void TLitWave::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitWave.
      TClass *R__cl = ::TLitWave::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEva", &fEva);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fShare", &fShare);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhases", &fPhases);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRfI", &fRfI);
      R__insp.InspectMember(fRfI, "fRfI.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiel", &fDiel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCtht", &fCtht);
      R__insp.InspectMember(fCtht, "fCtht.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStht", &fStht);
      R__insp.InspectMember(fStht, "fStht.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAk", &fAk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUk", &fUk);
      R__insp.InspectMember(fUk, "fUk.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVk", &fVk);
      R__insp.InspectMember(fVk, "fVk.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.InspectMember(fE, "fE.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAE", &fAE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPE", &fPE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSdel", &fSdel);
      R__insp.InspectMember(fSdel, "fSdel.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCdel", &fCdel);
      R__insp.InspectMember(fCdel, "fCdel.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlm1", &fAlm1);
      R__insp.InspectMember(fAlm1, "fAlm1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSalf", &fSalf);
      R__insp.InspectMember(fSalf, "fSalf.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWsaf", &fWsaf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPsaf", &fPsaf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalf", &fCalf);
      R__insp.InspectMember(fCalf, "fCalf.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWcaf", &fWcaf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPcaf", &fPcaf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEf", &fEf);
      R__insp.InspectMember(fEf, "fEf.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEfn", &fEfn);
      R__insp.InspectMember(fEfn, "fEfn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEfp", &fEfp);
      R__insp.InspectMember(fEfp, "fEfp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBf", &fBf);
      R__insp.InspectMember(fBf, "fBf.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBfn", &fBfn);
      R__insp.InspectMember(fBfn, "fBfn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBfp", &fBfp);
      R__insp.InspectMember(fBfp, "fBfp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPg", &fPg);
      R__insp.InspectMember(fPg, "fPg.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPgn", &fPgn);
      R__insp.InspectMember(fPgn, "fPgn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPgp", &fPgp);
      R__insp.InspectMember(fPgp, "fPgp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUp", &fUp);
      R__insp.InspectMember(fUp, "fUp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUpn", &fUpn);
      R__insp.InspectMember(fUpn, "fUpn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUpp", &fUpp);
      R__insp.InspectMember(fUpp, "fUpp.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitWave(void *p) {
      return  p ? new(p) ::TLitWave : new ::TLitWave;
   }
   static void *newArray_TLitWave(Long_t nElements, void *p) {
      return p ? new(p) ::TLitWave[nElements] : new ::TLitWave[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitWave(void *p) {
      delete ((::TLitWave*)p);
   }
   static void deleteArray_TLitWave(void *p) {
      delete [] ((::TLitWave*)p);
   }
   static void destruct_TLitWave(void *p) {
      typedef ::TLitWave current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitWave

//______________________________________________________________________________
void TLitEqIndex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitEqIndex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitEqIndex::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitEqIndex::Class(),this);
   }
}

//______________________________________________________________________________
void TLitEqIndex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitEqIndex.
      TClass *R__cl = ::TLitEqIndex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTypeEq", &fTypeEq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWithRMP", &fWithRMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c", &c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d", &d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g", &g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGd", &fGd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebug", &fDebug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNr", &fNr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNp", &fNp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZc[4]", fZc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBc[4]", fBc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRc[4]", fRc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQsc[4]", fQsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQs2[4]", fQs2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDc[4]", fDc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResidue", &fResidue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGraphP", &fGraphP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGraphM", &fGraphM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHRes", &fHRes);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitEqIndex(void *p) {
      return  p ? new(p) ::TLitEqIndex : new ::TLitEqIndex;
   }
   static void *newArray_TLitEqIndex(Long_t nElements, void *p) {
      return p ? new(p) ::TLitEqIndex[nElements] : new ::TLitEqIndex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitEqIndex(void *p) {
      delete ((::TLitEqIndex*)p);
   }
   static void deleteArray_TLitEqIndex(void *p) {
      delete [] ((::TLitEqIndex*)p);
   }
   static void destruct_TLitEqIndex(void *p) {
      typedef ::TLitEqIndex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitEqIndex

//______________________________________________________________________________
void TLitTrap::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitTrap.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitTrap::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitTrap::Class(),this);
   }
}

//______________________________________________________________________________
void TLitTrap::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitTrap.
      TClass *R__cl = ::TLitTrap::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDz", &fDz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fH1", &fH1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBl1", &fBl1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTl1", &fTl1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlpha1", &fAlpha1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fH2", &fH2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBl2", &fBl2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTl2", &fTl2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlpha2", &fAlpha2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGCenter", &fGCenter);
      R__insp.InspectMember(fGCenter, "fGCenter.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV0", &fV0);
      R__insp.InspectMember(fV0, "fV0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV1", &fV1);
      R__insp.InspectMember(fV1, "fV1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV2", &fV2);
      R__insp.InspectMember(fV2, "fV2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV3", &fV3);
      R__insp.InspectMember(fV3, "fV3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV4", &fV4);
      R__insp.InspectMember(fV4, "fV4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV5", &fV5);
      R__insp.InspectMember(fV5, "fV5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV6", &fV6);
      R__insp.InspectMember(fV6, "fV6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV7", &fV7);
      R__insp.InspectMember(fV7, "fV7.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitTrap(void *p) {
      return  p ? new(p) ::TLitTrap : new ::TLitTrap;
   }
   static void *newArray_TLitTrap(Long_t nElements, void *p) {
      return p ? new(p) ::TLitTrap[nElements] : new ::TLitTrap[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitTrap(void *p) {
      delete ((::TLitTrap*)p);
   }
   static void deleteArray_TLitTrap(void *p) {
      delete [] ((::TLitTrap*)p);
   }
   static void destruct_TLitTrap(void *p) {
      typedef ::TLitTrap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitTrap

//______________________________________________________________________________
void TLitSpectrumCp::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitSpectrumCp.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitSpectrumCp::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitSpectrumCp::Class(),this);
   }
}

//______________________________________________________________________________
void TLitSpectrumCp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitSpectrumCp.
      TClass *R__cl = ::TLitSpectrumCp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGaussAmpNN", &fGaussAmpNN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGaussAmp", &fGaussAmp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGaussMean", &fGaussMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGaussSigma", &fGaussSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormalized", &fNormalized);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbTimes", &fNbTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeWeightNN", &fTimeWeightNN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeWeight", &fTimeWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDecayTime", &fDecayTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRiseTime", &fRiseTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArea", &fArea);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitSpectrumCp(void *p) {
      return  p ? new(p) ::TLitSpectrumCp : new ::TLitSpectrumCp;
   }
   static void *newArray_TLitSpectrumCp(Long_t nElements, void *p) {
      return p ? new(p) ::TLitSpectrumCp[nElements] : new ::TLitSpectrumCp[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitSpectrumCp(void *p) {
      delete ((::TLitSpectrumCp*)p);
   }
   static void deleteArray_TLitSpectrumCp(void *p) {
      delete [] ((::TLitSpectrumCp*)p);
   }
   static void destruct_TLitSpectrumCp(void *p) {
      typedef ::TLitSpectrumCp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitSpectrumCp

//______________________________________________________________________________
void TLitSpectrum::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitSpectrum.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitSpectrum::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitSpectrum::Class(),this);
   }
}

//______________________________________________________________________________
void TLitSpectrum::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitSpectrum.
      TClass *R__cl = ::TLitSpectrum::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormalized", &fNormalized);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInSplineFitDB", &fInSplineFitDB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbComponents", &fNbComponents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArea", &fArea);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComponents", &fComponents);
      R__insp.InspectMember(fComponents, "fComponents.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDate", &fDate);
      R__insp.InspectMember(fDate, "fDate.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSource", &fSource);
      R__insp.InspectMember(fSource, "fSource.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMacro", &fMacro);
      R__insp.InspectMember(fMacro, "fMacro.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXLabel", &fXLabel);
      R__insp.InspectMember(fXLabel, "fXLabel.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVLabel", &fVLabel);
      R__insp.InspectMember(fVLabel, "fVLabel.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSplineFit", &fSplineFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComment[10]", fComment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitGraph", &fFitGraph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH", &fH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPM", &fPM);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitSpectrum(void *p) {
      return  p ? new(p) ::TLitSpectrum : new ::TLitSpectrum;
   }
   static void *newArray_TLitSpectrum(Long_t nElements, void *p) {
      return p ? new(p) ::TLitSpectrum[nElements] : new ::TLitSpectrum[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitSpectrum(void *p) {
      delete ((::TLitSpectrum*)p);
   }
   static void deleteArray_TLitSpectrum(void *p) {
      delete [] ((::TLitSpectrum*)p);
   }
   static void destruct_TLitSpectrum(void *p) {
      typedef ::TLitSpectrum current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitSpectrum

//______________________________________________________________________________
void TLitDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitDetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitDetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitDetector::Class(),this);
   }
}

//______________________________________________________________________________
void TLitDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitDetector.
      TClass *R__cl = ::TLitDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGlob", &fGlob);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbHistos", &fNbHistos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbSumHist", &fNbSumHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpSeen", &fNpSeen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpLossAny", &fNpLossAny);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpLossAng", &fNpLossAng);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpLossQE", &fNpLossQE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTimeSeen", &fHTimeSeen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHWvlgthSeen", &fHWvlgthSeen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHWvlgthNot", &fHWvlgthNot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHQEff", &fHQEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHInside", &fHInside);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHDepth", &fHDepth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHXYEntrance", &fHXYEntrance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHEfficiency", &fHEfficiency);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitDetector(void *p) {
      return  p ? new(p) ::TLitDetector : new ::TLitDetector;
   }
   static void *newArray_TLitDetector(Long_t nElements, void *p) {
      return p ? new(p) ::TLitDetector[nElements] : new ::TLitDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitDetector(void *p) {
      delete ((::TLitDetector*)p);
   }
   static void deleteArray_TLitDetector(void *p) {
      delete [] ((::TLitDetector*)p);
   }
   static void destruct_TLitDetector(void *p) {
      typedef ::TLitDetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitDetector

//______________________________________________________________________________
void TLitSellmeier::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitSellmeier.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitSellmeier::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitSellmeier::Class(),this);
   }
}

//______________________________________________________________________________
void TLitSellmeier::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitSellmeier.
      TClass *R__cl = ::TLitSellmeier::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN", &fN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNs0", &fNs0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNsi", &fNsi);
      R__insp.InspectMember(fNsi, "fNsi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLsi", &fLsi);
      R__insp.InspectMember(fLsi, "fLsi.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitSellmeier(void *p) {
      return  p ? new(p) ::TLitSellmeier : new ::TLitSellmeier;
   }
   static void *newArray_TLitSellmeier(Long_t nElements, void *p) {
      return p ? new(p) ::TLitSellmeier[nElements] : new ::TLitSellmeier[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitSellmeier(void *p) {
      delete ((::TLitSellmeier*)p);
   }
   static void deleteArray_TLitSellmeier(void *p) {
      delete [] ((::TLitSellmeier*)p);
   }
   static void destruct_TLitSellmeier(void *p) {
      typedef ::TLitSellmeier current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitSellmeier

//______________________________________________________________________________
void TLitMedium::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitMedium.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitMedium::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitMedium::Class(),this);
   }
}

//______________________________________________________________________________
void TLitMedium::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitMedium.
      TClass *R__cl = ::TLitMedium::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKind", &fKind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatCounter", &fMatCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRevCounter", &fRevCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChecked", &fChecked);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSensible", &fSensible);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAniAbsL", &fAniAbsL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFacAbsL", &fFacAbsL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbsLa", &fAbsLa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhimua", &fPhimua);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameAbsLa", &fNameAbsLa);
      R__insp.InspectMember(fNameAbsLa, "fNameAbsLa.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitAbsLa", &fFitAbsLa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbsLb", &fAbsLb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhimub", &fPhimub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameAbsLb", &fNameAbsLb);
      R__insp.InspectMember(fNameAbsLb, "fNameAbsLb.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitAbsLb", &fFitAbsLb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbsLc", &fAbsLc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhimuc", &fPhimuc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameAbsLc", &fNameAbsLc);
      R__insp.InspectMember(fNameAbsLc, "fNameAbsLc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitAbsLc", &fFitAbsLc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHasAbsorption", &fHasAbsorption);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHasDiffusion", &fHasDiffusion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHasRayleigh", &fHasRayleigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFacDiffus", &fFacDiffus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiffusLength", &fDiffusLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameDiffusL", &fNameDiffusL);
      R__insp.InspectMember(fNameDiffusL, "fNameDiffusL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitDiffusL", &fFitDiffusL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRayleighLength", &fRayleighLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameRayleighL", &fNameRayleighL);
      R__insp.InspectMember(fNameRayleighL, "fNameRayleighL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitRayleighL", &fFitRayleighL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnisotropic", &fAnisotropic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndexM", &fIndexM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIndexS", &fIndexS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameIndex", &fNameIndex);
      R__insp.InspectMember(fNameIndex, "fNameIndex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitIndex", &fFitIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMu", &fMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameMu", &fNameMu);
      R__insp.InspectMember(fNameMu, "fNameMu.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitMu", &fFitMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMuFound", &fMuFound);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEpsa", &fEpsa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEpsaM", &fEpsaM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEpsaS", &fEpsaS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameEpsa", &fNameEpsa);
      R__insp.InspectMember(fNameEpsa, "fNameEpsa.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitEpsa", &fFitEpsa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEpsb", &fEpsb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEpsbM", &fEpsbM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEpsbS", &fEpsbS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameEpsb", &fNameEpsb);
      R__insp.InspectMember(fNameEpsb, "fNameEpsb.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitEpsb", &fFitEpsb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEpsc", &fEpsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEpscM", &fEpscM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEpscS", &fEpscS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameEpsc", &fNameEpsc);
      R__insp.InspectMember(fNameEpsc, "fNameEpsc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitEpsc", &fFitEpsc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdEdxUsed", &fdEdxUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNamedEdx", &fNamedEdx);
      R__insp.InspectMember(fNamedEdx, "fNamedEdx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbdEdx", &fNbdEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeposit", &fDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotMev", &fPhotMev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResolutionScale", &fResolutionScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitSpectrum", &fLitSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHistFluo", &fHistFluo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRm", &fRm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEc", &fEc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitNPLY", &fFitNPLY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHasNPLY", &fHasNPLY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameNPLY", &fNameNPLY);
      R__insp.InspectMember(fNameNPLY, "fNameNPLY.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitPE", &fFitPE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPEOk", &fPEOk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNamePE", &fNamePE);
      R__insp.InspectMember(fNamePE, "fNamePE.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHasWLS", &fHasWLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWLSSpectrum", &fWLSSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWLSL", &fWLSL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameWLSL", &fNameWLSL);
      R__insp.InspectMember(fNameWLSL, "fNameWLSL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitWLSL", &fFitWLSL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCanStopElectron", &fCanStopElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEP[6]", fEP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapIsSlice", &fWrapIsSlice);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapDiffus", &fWrapDiffus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapNameDiffus", &fWrapNameDiffus);
      R__insp.InspectMember(fWrapNameDiffus, "fWrapNameDiffus.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWrapFitDiffus", &fWrapFitDiffus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapRindex", &fWrapRindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapNameRindex", &fWrapNameRindex);
      R__insp.InspectMember(fWrapNameRindex, "fWrapNameRindex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWrapFitRindex", &fWrapFitRindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapIindex", &fWrapIindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapNameIindex", &fWrapNameIindex);
      R__insp.InspectMember(fWrapNameIindex, "fWrapNameIindex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWrapFitIindex", &fWrapFitIindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapMu", &fWrapMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapNameMu", &fWrapNameMu);
      R__insp.InspectMember(fWrapNameMu, "fWrapNameMu.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWrapFitMu", &fWrapFitMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapAbsorbing", &fWrapAbsorbing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapSupplAbs", &fWrapSupplAbs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapSinThetaMax", &fWrapSinThetaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSThinSlice", &fTSThinSlice);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTSNextMed", &fTSNextMed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSWidth", &fTSWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSIndex", &fTSIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSNameIndex", &fTSNameIndex);
      R__insp.InspectMember(fTSNameIndex, "fTSNameIndex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTSFitIndex", &fTSFitIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSMu", &fTSMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSNameMu", &fTSNameMu);
      R__insp.InspectMember(fTSNameMu, "fTSNameMu.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTSFitMu", &fTSFitMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPLIsDepol", &fDPLIsDepol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDPLNextMed", &fDPLNextMed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPLTheta", &fDPLTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPLCosTheta", &fDPLCosTheta);
      TGeoMedium::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitMedium(void *p) {
      return  p ? new(p) ::TLitMedium : new ::TLitMedium;
   }
   static void *newArray_TLitMedium(Long_t nElements, void *p) {
      return p ? new(p) ::TLitMedium[nElements] : new ::TLitMedium[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitMedium(void *p) {
      delete ((::TLitMedium*)p);
   }
   static void deleteArray_TLitMedium(void *p) {
      delete [] ((::TLitMedium*)p);
   }
   static void destruct_TLitMedium(void *p) {
      typedef ::TLitMedium current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitMedium

//______________________________________________________________________________
void TLitVolume::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitVolume.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitVolume::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitVolume::Class(),this);
   }
}

//______________________________________________________________________________
void TLitVolume::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitVolume.
      TClass *R__cl = ::TLitVolume::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoVolume", &fGeoVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitMedium", &fLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSdone", &fWCSdone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStepping", &fStepping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStep", &fStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnisotropic", &fAnisotropic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAniAbsL", &fAniAbsL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDielChange", &fDielChange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAniOx", &fAniOx);
      R__insp.InspectMember(fAniOx, "fAniOx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAniOy", &fAniOy);
      R__insp.InspectMember(fAniOy, "fAniOy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAniOz", &fAniOz);
      R__insp.InspectMember(fAniOz, "fAniOz.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSAniOx", &fWCSAniOx);
      R__insp.InspectMember(fWCSAniOx, "fWCSAniOx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSAniOy", &fWCSAniOy);
      R__insp.InspectMember(fWCSAniOy, "fWCSAniOy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSAniOz", &fWCSAniOz);
      R__insp.InspectMember(fWCSAniOz, "fWCSAniOz.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetKind", &fDetKind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntrance", &fEntrance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEx", &fEx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEy", &fEy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEz", &fEz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStopAlways", &fStopAlways);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsQE", &fIsQE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameQE", &fNameQE);
      R__insp.InspectMember(fNameQE, "fNameQE.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQE", &fQE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitQE", &fFitQE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsAccept", &fIsAccept);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosAccept", &fCosAccept);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetAxis", &fDetAxis);
      R__insp.InspectMember(fDetAxis, "fDetAxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAPDThreshold", &fAPDThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVDrifte", &fVDrifte);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameGP", &fNameGP);
      R__insp.InspectMember(fNameGP, "fNameGP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGP", &fGP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXYZEntrance", &fXYZEntrance);
      R__insp.InspectMember(fXYZEntrance, "fXYZEntrance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSEntrance", &fWCSEntrance);
      R__insp.InspectMember(fWCSEntrance, "fWCSEntrance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistCatAn", &fDistCatAn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamage", &fDamage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamAxis", &fDamAxis);
      R__insp.InspectMember(fDamAxis, "fDamAxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamStart", &fDamStart);
      R__insp.InspectMember(fDamStart, "fDamStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSDamAxis", &fWCSDamAxis);
      R__insp.InspectMember(fWCSDamAxis, "fWCSDamAxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSDamStart", &fWCSDamStart);
      R__insp.InspectMember(fWCSDamStart, "fWCSDamStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamKimax", &fDamKimax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDamFitKimax", &fDamFitKimax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamFmax", &fDamFmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamStep", &fDamStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamSupFac", &fDamSupFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHDamage", &fHDamage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamZm", &fDamZm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamZs", &fDamZs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamRs", &fDamRs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamGz", &fDamGz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamGzMax", &fDamGzMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDamFitGz", &fDamFitGz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamByShower", &fDamByShower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamE0", &fDamE0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamGamma", &fDamGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamA", &fDamA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRk2", &fRk2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDamFac", &fDamFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmitPhoton", &fEmitPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKindOfEmission", &fKindOfEmission);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPath", &fPath);
      R__insp.InspectMember(fPath, "fPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceFixed", &fSourceFixed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePoint", &fSourcePoint);
      R__insp.InspectMember(fSourcePoint, "fSourcePoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSSourcePoint", &fWCSSourcePoint);
      R__insp.InspectMember(fWCSSourcePoint, "fWCSSourcePoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisDir", &fAxisDir);
      R__insp.InspectMember(fAxisDir, "fAxisDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceDir", &fSourceDir);
      R__insp.InspectMember(fSourceDir, "fSourceDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSSourceDir", &fWCSSourceDir);
      R__insp.InspectMember(fWCSSourceDir, "fWCSSourceDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMax", &fThetaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitDist", &fFitDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFromFace", &fFromFace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirFace", &fDirFace);
      R__insp.InspectMember(fDirFace, "fDirFace.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSDirFace", &fWCSDirFace);
      R__insp.InspectMember(fWCSDirFace, "fWCSDirFace.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChooseIndex", &fChooseIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.InspectMember(fE, "fE.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSE", &fWCSE);
      R__insp.InspectMember(fWCSE, "fWCSE.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPolarized", &fPolarized);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPolar", &fPolar);
      R__insp.InspectMember(fPolar, "fPolar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM", &fM);
      R__insp.InspectMember(fM, "fM.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMt", &fMt);
      R__insp.InspectMember(fMt, "fMt.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTmu", &fDTmu);
      R__insp.InspectMember(fDTmu, "fDTmu.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCDTmu", &fCDTmu);
      R__insp.InspectMember(fCDTmu, "fCDTmu.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitVolume(void *p) {
      return  p ? new(p) ::TLitVolume : new ::TLitVolume;
   }
   static void *newArray_TLitVolume(Long_t nElements, void *p) {
      return p ? new(p) ::TLitVolume[nElements] : new ::TLitVolume[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitVolume(void *p) {
      delete ((::TLitVolume*)p);
   }
   static void deleteArray_TLitVolume(void *p) {
      delete [] ((::TLitVolume*)p);
   }
   static void destruct_TLitVolume(void *p) {
      typedef ::TLitVolume current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitVolume

//______________________________________________________________________________
void TLit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLit::Class(),this);
   }
}

//______________________________________________________________________________
void TLit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLit.
      TClass *R__cl = ::TLit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTestCalc", &fTestCalc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRef", &fRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTRchanged", &fBTRchanged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRComment", &fTRComment);
      R__insp.InspectMember(fTRComment, "fTRComment.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBRComment", &fBRComment);
      R__insp.InspectMember(fBRComment, "fBRComment.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveFitSpec", &fSaveFitSpec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitFile", &fLitFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLitBufSize", &fLitBufSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLitNb", &fLitNb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitTree", &fLitTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitBranch", &fLitBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFits", &fNFits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKFit", &fKFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitColl", &fFitColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSpecs", &fNSpecs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKSpec", &fKSpec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSpecColl", &fSpecColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilesClosed", &fFilesClosed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatItems", &fStatItems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSShortDef[18]", fSShortDef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSLongDef[18]", fSLongDef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeen", &fSeen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX0", &fX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY0", &fY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ0", &fZ0);
}

namespace ROOTDict {
} // end of namespace ROOTDict for class ::TLit

//______________________________________________________________________________
void TLitPhoton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitPhoton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitPhoton::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitPhoton::Class(),this);
   }
}

//______________________________________________________________________________
void TLitPhoton::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitPhoton.
      TClass *R__cl = ::TLitPhoton::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKphot", &fKphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartGeoVol", &fStartGeoVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePath", &fSourcePath);
      R__insp.InspectMember(fSourcePath, "fSourcePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNode", &fNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoVolume", &fGeoVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPath", &fPath);
      R__insp.InspectMember(fPath, "fPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitVolume", &fLitVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitDet", &fLitDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitDetG", &fLitDetG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoMedium", &fGeoMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitMedium", &fLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextNode", &fNextNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextGeoVolume", &fNextGeoVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNextPath", &fNextPath);
      R__insp.InspectMember(fNextPath, "fNextPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextLitVolume", &fNextLitVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextLitDet", &fNextLitDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextLitDetG", &fNextLitDetG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextGeoMedium", &fNextGeoMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextLitMedium", &fNextLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX0", &fX0);
      R__insp.InspectMember(fX0, "fX0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUpg", &fUpg);
      R__insp.InspectMember(fUpg, "fUpg.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNextPoint", &fNextPoint);
      R__insp.InspectMember(fNextPoint, "fNextPoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNextDist", &fNextDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsOnBoundary", &fIsOnBoundary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStopPoint", &fStopPoint);
      R__insp.InspectMember(fStopPoint, "fStopPoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPtg", &fPtg);
      R__insp.InspectMember(fPtg, "fPtg.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCospk", &fCospk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUk0", &fUk0);
      R__insp.InspectMember(fUk0, "fUk0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLengthInDet", &fLengthInDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVk0", &fVk0);
      R__insp.InspectMember(fVk0, "fVk0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAk0", &fAk0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNc", &fNc);
      R__insp.InspectMember(fNc, "fNc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSl0", &fSl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStep", &fStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0", &fT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPoints", &fNPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhtLive", &fPhtLive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhtSeen", &fPhtSeen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBetween", &fBetween);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutPoly", &fOutPoly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhtOut", &fPhtOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhtAbs", &fPhtAbs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnomaly", &fAnomaly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFromani", &fFromani);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChooseIndex", &fChooseIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSkl0", &fSkl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWaveLength", &fWaveLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEphot", &fEphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBI", &fBI);
      R__insp.InspectMember(fBI, "fBI.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBR1", &fBR1);
      R__insp.InspectMember(fBR1, "fBR1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBR2", &fBR2);
      R__insp.InspectMember(fBR2, "fBR2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBT1", &fBT1);
      R__insp.InspectMember(fBT1, "fBT1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBT2", &fBT2);
      R__insp.InspectMember(fBT2, "fBT2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbsl0", &fAbsl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsDiffus", &fIsDiffus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiffusL", &fDiffusL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfDiffusion", &fNbOfDiffusion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfRayleigh", &fNbOfRayleigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfWLS", &fNbOfWLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRayleigh", &fIsRayleigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsWLS", &fIsWLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsAbsorb", &fIsAbsorb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRayleighL", &fRayleighL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWLSL", &fWLSL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAef0", &fAef0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEf0", &fEf0);
      R__insp.InspectMember(fEf0, "fEf0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeta", &fBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBf0", &fBf0);
      R__insp.InspectMember(fBf0, "fBf0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSinThetaMax", &fSinThetaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFN", &fFN);
      R__insp.InspectMember(fFN, "fFN.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFNd", &fFNd);
      R__insp.InspectMember(fFNd, "fFNd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnis0", &fAnis0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnia0", &fAnia0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPmu0", &fPmu0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRfIndex0", &fRfIndex0);
      R__insp.InspectMember(fRfIndex0, "fRfIndex0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiel0", &fDiel0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsDiag", &fIsDiag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDzt0", &fDzt0);
      R__insp.InspectMember(fDzt0, "fDzt0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCDzt0", &fCDzt0);
      R__insp.InspectMember(fCDzt0, "fCDzt0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnisi", &fAnisi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAniai", &fAniai);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPmui", &fPmui);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRfIndexi", &fRfIndexi);
      R__insp.InspectMember(fRfIndexi, "fRfIndexi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsDiagi", &fIsDiagi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDzti", &fDzti);
      R__insp.InspectMember(fDzti, "fDzti.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDztii", &fDztii);
      R__insp.InspectMember(fDztii, "fDztii.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnis1", &fAnis1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnia1", &fAnia1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPmu1", &fPmu1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRfIndex1", &fRfIndex1);
      R__insp.InspectMember(fRfIndex1, "fRfIndex1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiel1", &fDiel1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDzt1", &fDzt1);
      R__insp.InspectMember(fDzt1, "fDzt1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnist", &fAnist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAniat", &fAniat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPmut", &fPmut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRfIndext", &fRfIndext);
      R__insp.InspectMember(fRfIndext, "fRfIndext.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsDiagt", &fIsDiagt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDztt", &fDztt);
      R__insp.InspectMember(fDztt, "fDztt.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDztti", &fDztti);
      R__insp.InspectMember(fDztti, "fDztti.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOx", &fOx);
      R__insp.InspectMember(fOx, "fOx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOy", &fOy);
      R__insp.InspectMember(fOy, "fOy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOz", &fOz);
      R__insp.InspectMember(fOz, "fOz.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMn", &fMn);
      R__insp.InspectMember(fMn, "fMn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMt", &fMt);
      R__insp.InspectMember(fMt, "fMt.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fI", &fI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fR1", &fR1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fR2", &fR2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fT1", &fT1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fT2", &fT2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWeigth[8]", fWeigth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProcess", &fProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fToDraw", &fToDraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentTrack", &fCurrentTrack);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitPhoton(void *p) {
      return  p ? new(p) ::TLitPhoton : new ::TLitPhoton;
   }
   static void *newArray_TLitPhoton(Long_t nElements, void *p) {
      return p ? new(p) ::TLitPhoton[nElements] : new ::TLitPhoton[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitPhoton(void *p) {
      delete ((::TLitPhoton*)p);
   }
   static void deleteArray_TLitPhoton(void *p) {
      delete [] ((::TLitPhoton*)p);
   }
   static void destruct_TLitPhoton(void *p) {
      typedef ::TLitPhoton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitPhoton

//______________________________________________________________________________
void TLitSpontan::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitSpontan.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitSpontan::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitSpontan::Class(),this);
   }
}

//______________________________________________________________________________
void TLitSpontan::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitSpontan.
      TClass *R__cl = ::TLitSpontan::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullName", &fFullName);
      R__insp.InspectMember(fFullName, "fFullName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullTitle", &fFullTitle);
      R__insp.InspectMember(fFullTitle, "fFullTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMoving", &fMoving);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCheckMove", &fCheckMove);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoPhysNode", &fGeoPhysNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartGeoVol", &fStartGeoVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartLitVol", &fStartLitVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitMedium", &fLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePath", &fSourcePath);
      R__insp.InspectMember(fSourcePath, "fSourcePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWvlgthFixed", &fWvlgthFixed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWvlgth", &fWvlgth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunStat", &fRunStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForgetLast", &fForgetLast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhot", &fPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0", &fT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFillDeath", &fFillDeath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHX0", &fHX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHY0", &fHY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHZ0", &fHZ0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrawCode", &fDrawCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackColor", &fTrackColor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecordedTracks", &fRecordedTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackIndex", &fTrackIndex);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitSpontan(void *p) {
      return  p ? new(p) ::TLitSpontan : new ::TLitSpontan;
   }
   static void *newArray_TLitSpontan(Long_t nElements, void *p) {
      return p ? new(p) ::TLitSpontan[nElements] : new ::TLitSpontan[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitSpontan(void *p) {
      delete ((::TLitSpontan*)p);
   }
   static void deleteArray_TLitSpontan(void *p) {
      delete [] ((::TLitSpontan*)p);
   }
   static void destruct_TLitSpontan(void *p) {
      typedef ::TLitSpontan current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitSpontan

//______________________________________________________________________________
void TLitranino::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitranino.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitranino::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitranino::Class(),this);
   }
}

//______________________________________________________________________________
void TLitranino::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitranino.
      TClass *R__cl = ::TLitranino::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullName", &fFullName);
      R__insp.InspectMember(fFullName, "fFullName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullTitle", &fFullTitle);
      R__insp.InspectMember(fFullTitle, "fFullTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunStat", &fRunStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForgetLast", &fForgetLast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartLitVol", &fStartLitVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePath", &fSourcePath);
      R__insp.InspectMember(fSourcePath, "fSourcePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxLength", &fMaxLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPoints", &fNPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWaveLength", &fWaveLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbsLength", &fAbsLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLengthInDet", &fLengthInDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLengthMax", &fLengthMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0", &fT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsOnBoundary", &fIsOnBoundary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentPoint", &fCurrentPoint);
      R__insp.InspectMember(fCurrentPoint, "fCurrentPoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentDir", &fCurrentDir);
      R__insp.InspectMember(fCurrentDir, "fCurrentDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStopPoint", &fStopPoint);
      R__insp.InspectMember(fStopPoint, "fStopPoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFN", &fFN);
      R__insp.InspectMember(fFN, "fFN.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStep", &fStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSafety", &fSafety);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntering", &fEntering);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhtLive", &fPhtLive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnomaly", &fAnomaly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNode", &fNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoVolume", &fGeoVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPath", &fPath);
      R__insp.InspectMember(fPath, "fPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitVolume", &fLitVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitDet", &fLitDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitDetG", &fLitDetG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoMedium", &fGeoMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitMedium", &fLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextNode", &fNextNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextGeoVolume", &fNextGeoVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNextPath", &fNextPath);
      R__insp.InspectMember(fNextPath, "fNextPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextLitVolume", &fNextLitVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextLitDet", &fNextLitDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextLitDetG", &fNextLitDetG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextGeoMedium", &fNextGeoMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextLitMedium", &fNextLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackNb", &fTrackNb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecordedTracks", &fRecordedTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fToDraw", &fToDraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackIndex", &fTrackIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentTrack", &fCurrentTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnimateTracks", &fAnimateTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNframes", &fNframes);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitranino(void *p) {
      return  p ? new(p) ::TLitranino : new ::TLitranino;
   }
   static void *newArray_TLitranino(Long_t nElements, void *p) {
      return p ? new(p) ::TLitranino[nElements] : new ::TLitranino[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitranino(void *p) {
      delete ((::TLitranino*)p);
   }
   static void deleteArray_TLitranino(void *p) {
      delete [] ((::TLitranino*)p);
   }
   static void destruct_TLitranino(void *p) {
      typedef ::TLitranino current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitranino

//______________________________________________________________________________
void TLitParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitParticle::Class(),this);
   }
}

//______________________________________________________________________________
void TLitParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitParticle.
      TClass *R__cl = ::TLitParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPdist", &fPdist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPmean", &fPmean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPmin", &fPmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPmax", &fPmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSig", &fSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSlope", &fSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExp1", &fExp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fD", &fD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeta", &fBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpeed", &fSpeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmitCerenkov", &fEmitCerenkov);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCerCos", &fCerCos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCerSin", &fCerSin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCerNphot", &fCerNphot);
      TParticle::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitParticle(void *p) {
      return  p ? new(p) ::TLitParticle : new ::TLitParticle;
   }
   static void *newArray_TLitParticle(Long_t nElements, void *p) {
      return p ? new(p) ::TLitParticle[nElements] : new ::TLitParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitParticle(void *p) {
      delete ((::TLitParticle*)p);
   }
   static void deleteArray_TLitParticle(void *p) {
      delete [] ((::TLitParticle*)p);
   }
   static void destruct_TLitParticle(void *p) {
      typedef ::TLitParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitParticle

//______________________________________________________________________________
void TLitBeam::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitBeam.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitBeam::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitBeam::Class(),this);
   }
}

//______________________________________________________________________________
void TLitBeam::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitBeam.
      TClass *R__cl = ::TLitBeam::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullName", &fFullName);
      R__insp.InspectMember(fFullName, "fFullName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullTitle", &fFullTitle);
      R__insp.InspectMember(fFullTitle, "fFullTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunStat", &fRunStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForgetLast", &fForgetLast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticle", &fParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMoving", &fMoving);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCheckMove", &fCheckMove);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePath", &fSourcePath);
      R__insp.InspectMember(fSourcePath, "fSourcePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoPhysNode", &fGeoPhysNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartGeoVol", &fStartGeoVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartLitVol", &fStartLitVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.InspectMember(fX, "fX.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDir", &fDir);
      R__insp.InspectMember(fDir, "fDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRoad", &fRoad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStep", &fStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNode", &fNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoVolume", &fGeoVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPath", &fPath);
      R__insp.InspectMember(fPath, "fPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitVolume", &fLitVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoMedium", &fGeoMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitMedium", &fLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsdEdx", &fIsdEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextNode", &fNextNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKindOfEmission", &fKindOfEmission);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMax", &fThetaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fApercos", &fApercos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fApersin", &fApersin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisDirx", &fAxisDirx);
      R__insp.InspectMember(fAxisDirx, "fAxisDirx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisDiry", &fAxisDiry);
      R__insp.InspectMember(fAxisDiry, "fAxisDiry.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisDirz", &fAxisDirz);
      R__insp.InspectMember(fAxisDirz, "fAxisDirz.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistName", &fDistName);
      R__insp.InspectMember(fDistName, "fDistName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitDist", &fFitDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceFixed", &fSourceFixed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFromFace", &fFromFace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirFace", &fDirFace);
      R__insp.InspectMember(fDirFace, "fDirFace.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSDirFace", &fWCSDirFace);
      R__insp.InspectMember(fWCSDirFace, "fWCSDirFace.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePoint", &fSourcePoint);
      R__insp.InspectMember(fSourcePoint, "fSourcePoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSSourcePoint", &fWCSSourcePoint);
      R__insp.InspectMember(fWCSSourcePoint, "fWCSSourcePoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceDir", &fSourceDir);
      R__insp.InspectMember(fSourceDir, "fSourceDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisb1", &fAxisb1);
      R__insp.InspectMember(fAxisb1, "fAxisb1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisb2", &fAxisb2);
      R__insp.InspectMember(fAxisb2, "fAxisb2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSSourceDir", &fWCSSourceDir);
      R__insp.InspectMember(fWCSSourceDir, "fWCSSourceDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnCerenkov", &fnCerenkov);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhot", &fPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWvlgth", &fWvlgth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX0", &fX0);
      R__insp.InspectMember(fX0, "fX0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0", &fT0);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitBeam(void *p) {
      return  p ? new(p) ::TLitBeam : new ::TLitBeam;
   }
   static void *newArray_TLitBeam(Long_t nElements, void *p) {
      return p ? new(p) ::TLitBeam[nElements] : new ::TLitBeam[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitBeam(void *p) {
      delete ((::TLitBeam*)p);
   }
   static void deleteArray_TLitBeam(void *p) {
      delete [] ((::TLitBeam*)p);
   }
   static void destruct_TLitBeam(void *p) {
      typedef ::TLitBeam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitBeam

//______________________________________________________________________________
void TLitResults::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitResults.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitResults::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitResults::Class(),this);
   }
}

//______________________________________________________________________________
void TLitResults::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitResults.
      TClass *R__cl = ::TLitResults::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConclusion", &fConclusion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXparam", &fXparam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNfluo", &fNfluo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbHistos", &fNbHistos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fListOfDet", &fListOfDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPavel", &fPavel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPavet", &fPavet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKN1", &fKN1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKD1", &fKD1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKDet", &fKDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNdet", &fNdet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNh", &fNh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpGener", &fNpGener);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHPoints", &fHPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpSeen", &fNpSeen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhweigth", &fPhweigth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTimeSeen", &fHTimeSeen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHDistSeen", &fHDistSeen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHWvlgthSeen", &fHWvlgthSeen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpLossAny", &fNpLossAny);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpAbsMat", &fNpAbsMat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpAbsBef", &fNpAbsBef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpAbsRvt", &fNpAbsRvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpOutSide", &fNpOutSide);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpAbnorm", &fNpAbnorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpTooLate", &fNpTooLate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpTooFew", &fNpTooFew);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpLossAng", &fNpLossAng);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpLossQE", &fNpLossQE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpAbsL0", &fNpAbsL0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHAbsAny", &fHAbsAny);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHAbsMat", &fHAbsMat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHAbsBef", &fHAbsBef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHAbsRvt", &fHAbsRvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHOutSide", &fHOutSide);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHAbnLost", &fHAbnLost);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTooLate", &fHTooLate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHDiffusion", &fHDiffusion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTimeAll", &fHTimeAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHWvlgthAll", &fHWvlgthAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTimeCer", &fHTimeCer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHWvlgthCer", &fHWvlgthCer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTimeEach", &fHTimeEach);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHWvlgthEach", &fHWvlgthEach);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbPart", &fNbPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHPMomentum", &fHPMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHPTheta", &fHPTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHEnergyInShape", &fHEnergyInShape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHMatMat", &fHMatMat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHMatNot", &fHMatNot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHMatRev", &fHMatRev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHRevMat", &fHRevMat);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitResults(void *p) {
      return  p ? new(p) ::TLitResults : new ::TLitResults;
   }
   static void *newArray_TLitResults(Long_t nElements, void *p) {
      return p ? new(p) ::TLitResults[nElements] : new ::TLitResults[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitResults(void *p) {
      delete ((::TLitResults*)p);
   }
   static void deleteArray_TLitResults(void *p) {
      delete [] ((::TLitResults*)p);
   }
   static void destruct_TLitResults(void *p) {
      typedef ::TLitResults current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitResults

//______________________________________________________________________________
void TLitMarrow::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitMarrow.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitMarrow::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitMarrow::Class(),this);
   }
}

//______________________________________________________________________________
void TLitMarrow::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitMarrow.
      TClass *R__cl = ::TLitMarrow::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInMem", &fInMem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fK", &fK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDet", &fNDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNHperDet", &fNHperDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbins", &fNbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHEfficiency", &fHEfficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHAbsMat", &fHAbsMat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHAbsBef", &fHAbsBef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHAbsRvt", &fHAbsRvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHOutSide", &fHOutSide);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHAbnorm", &fHAbnorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTooLate", &fHTooLate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTooFew", &fHTooFew);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHLossAng", &fHLossAng);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHLossQE", &fHLossQE);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitMarrow(void *p) {
      return  p ? new(p) ::TLitMarrow : new ::TLitMarrow;
   }
   static void *newArray_TLitMarrow(Long_t nElements, void *p) {
      return p ? new(p) ::TLitMarrow[nElements] : new ::TLitMarrow[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitMarrow(void *p) {
      delete ((::TLitMarrow*)p);
   }
   static void deleteArray_TLitMarrow(void *p) {
      delete [] ((::TLitMarrow*)p);
   }
   static void destruct_TLitMarrow(void *p) {
      typedef ::TLitMarrow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitMarrow

//______________________________________________________________________________
void TLitCascade::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitCascade.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitCascade::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitCascade::Class(),this);
   }
}

//______________________________________________________________________________
void TLitCascade::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitCascade.
      TClass *R__cl = ::TLitCascade::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunStat", &fRunStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForgetLast", &fForgetLast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullName", &fFullName);
      R__insp.InspectMember(fFullName, "fFullName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle", &fTitle);
      R__insp.InspectMember(fTitle, "fTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullTitle", &fFullTitle);
      R__insp.InspectMember(fFullTitle, "fFullTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePath", &fSourcePath);
      R__insp.InspectMember(fSourcePath, "fSourcePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartGeoNode", &fStartGeoNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartGeoVol", &fStartGeoVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefLitMedium", &fRefLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart", &fStart);
      R__insp.InspectMember(fStart, "fStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSStart", &fWCSStart);
      R__insp.InspectMember(fWCSStart, "fWCSStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZaxis", &fZaxis);
      R__insp.InspectMember(fZaxis, "fZaxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSXaxis", &fWCSXaxis);
      R__insp.InspectMember(fWCSXaxis, "fWCSXaxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSYaxis", &fWCSYaxis);
      R__insp.InspectMember(fWCSYaxis, "fWCSYaxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSZaxis", &fWCSZaxis);
      R__insp.InspectMember(fWCSZaxis, "fWCSZaxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE0", &fE0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCj", &fCj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA", &fA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fB", &fB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFacdEdz", &fFacdEdz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFacdEdr", &fFacdEdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fK", &fK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRmax", &fRmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX0", &fX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRm", &fRm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEc", &fEc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotFac", &fPhotFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXdV", &fXdV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYdV", &fYdV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZdV", &fZdV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNode", &fNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoVolume", &fGeoVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoMedium", &fGeoMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitMedium", &fLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRcasc", &fRcasc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFcasc", &fFcasc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZcasc", &fZcasc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDStepL", &fDStepL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDStepR", &fDStepR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDStepF", &fDStepF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNStepL", &fNStepL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNStepR", &fNStepR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNStepF", &fNStepF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIStepL", &fIStepL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIStepR", &fIStepR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIStepF", &fIStepF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhot", &fPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphot", &fNphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphotOut", &fNphotOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWvlgth", &fWvlgth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0", &fT0);
      TParticle::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitCascade(void *p) {
      return  p ? new(p) ::TLitCascade : new ::TLitCascade;
   }
   static void *newArray_TLitCascade(Long_t nElements, void *p) {
      return p ? new(p) ::TLitCascade[nElements] : new ::TLitCascade[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitCascade(void *p) {
      delete ((::TLitCascade*)p);
   }
   static void deleteArray_TLitCascade(void *p) {
      delete [] ((::TLitCascade*)p);
   }
   static void destruct_TLitCascade(void *p) {
      typedef ::TLitCascade current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitCascade

//______________________________________________________________________________
void TLitGamma::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitGamma.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitGamma::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitGamma::Class(),this);
   }
}

//______________________________________________________________________________
void TLitGamma::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitGamma.
      TClass *R__cl = ::TLitGamma::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullName", &fFullName);
      R__insp.InspectMember(fFullName, "fFullName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle", &fTitle);
      R__insp.InspectMember(fTitle, "fTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullTitle", &fFullTitle);
      R__insp.InspectMember(fFullTitle, "fFullTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunStat", &fRunStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForgetLast", &fForgetLast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMoving", &fMoving);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCheckMove", &fCheckMove);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePath", &fSourcePath);
      R__insp.InspectMember(fSourcePath, "fSourcePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoPhysNode", &fGeoPhysNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartGeoVol", &fStartGeoVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartLitVol", &fStartLitVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKindOfEmission", &fKindOfEmission);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMax", &fThetaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fApercos", &fApercos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fApersin", &fApersin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisDirx", &fAxisDirx);
      R__insp.InspectMember(fAxisDirx, "fAxisDirx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisDiry", &fAxisDiry);
      R__insp.InspectMember(fAxisDiry, "fAxisDiry.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisDirz", &fAxisDirz);
      R__insp.InspectMember(fAxisDirz, "fAxisDirz.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistName", &fDistName);
      R__insp.InspectMember(fDistName, "fDistName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitDist", &fFitDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceFixed", &fSourceFixed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFromFace", &fFromFace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirFace", &fDirFace);
      R__insp.InspectMember(fDirFace, "fDirFace.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSDirFace", &fWCSDirFace);
      R__insp.InspectMember(fWCSDirFace, "fWCSDirFace.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePoint", &fSourcePoint);
      R__insp.InspectMember(fSourcePoint, "fSourcePoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSSourcePoint", &fWCSSourcePoint);
      R__insp.InspectMember(fWCSSourcePoint, "fWCSSourcePoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceDir", &fSourceDir);
      R__insp.InspectMember(fSourceDir, "fSourceDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisb1", &fAxisb1);
      R__insp.InspectMember(fAxisb1, "fAxisb1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxisb2", &fAxisb2);
      R__insp.InspectMember(fAxisb2, "fAxisb2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCSSourceDir", &fWCSSourceDir);
      R__insp.InspectMember(fWCSSourceDir, "fWCSSourceDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.InspectMember(fX, "fX.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDir", &fDir);
      R__insp.InspectMember(fDir, "fDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirElec", &fDirElec);
      R__insp.InspectMember(fDirElec, "fDirElec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRoad", &fRoad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNode", &fNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoVolume", &fGeoVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKGeoVolume", &fKGeoVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPath", &fPath);
      R__insp.InspectMember(fPath, "fPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitVolume", &fLitVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoMedium", &fGeoMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitMedium", &fLitMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA", &fA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDensity", &fDensity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextNode", &fNextNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStepMax", &fStepMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComptonOk", &fComptonOk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotoElecOk", &fPhotoElecOk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComptonCut", &fComptonCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGammaDead", &fGammaDead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProcess", &fProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEIncident", &fEIncident);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEScattered", &fEScattered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEDeposit", &fEDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotEdeposit", &fTotEdeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCompton", &fNCompton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXsecCompton", &fXsecCompton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXsecPhotoEl", &fXsecPhotoEl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphot", &fNphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhot", &fPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWvlgth", &fWvlgth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX0", &fX0);
      R__insp.InspectMember(fX0, "fX0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0", &fT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFillDeath", &fFillDeath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHX0", &fHX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHY0", &fHY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHZ0", &fHZ0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fToDraw", &fToDraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrawCode", &fDrawCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackColor", &fTrackColor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecordedTracks", &fRecordedTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackIndex", &fTrackIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentTrack", &fCurrentTrack);
      TLitParticle::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitGamma(void *p) {
      return  p ? new(p) ::TLitGamma : new ::TLitGamma;
   }
   static void *newArray_TLitGamma(Long_t nElements, void *p) {
      return p ? new(p) ::TLitGamma[nElements] : new ::TLitGamma[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitGamma(void *p) {
      delete ((::TLitGamma*)p);
   }
   static void deleteArray_TLitGamma(void *p) {
      delete [] ((::TLitGamma*)p);
   }
   static void destruct_TLitGamma(void *p) {
      typedef ::TLitGamma current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitGamma

//______________________________________________________________________________
void TLitAlbedo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLitAlbedo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLitAlbedo::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLitAlbedo::Class(),this);
   }
}

//______________________________________________________________________________
void TLitAlbedo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLitAlbedo.
      TClass *R__cl = ::TLitAlbedo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAlbedo", &fAlbedo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fImPart", &fImPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWrapDiffus", &fWrapDiffus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSrcMat", &fSrcMat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSrcMed", &fSrcMed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetMat", &fDetMat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetMed", &fDetMed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWrapMat", &fWrapMat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWrapMed", &fWrapMed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVacuumMat", &fVacuumMat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVacuum", &fVacuum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL", &fL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fD", &fD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fT1", &fT1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fT2", &fT2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTop", &fTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWrapping", &fWrapping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetector", &fDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitDet", &fLitDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSource", &fSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitSource", &fLitSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistPoint", &fDistPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartAngle", &fStartAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastAngle", &fLastAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStepAngle", &fStepAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNAngles", &fNAngles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAperture", &fAperture);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmitAngle", &fEmitAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourcePoint", &fSourcePoint);
      R__insp.InspectMember(fSourcePoint, "fSourcePoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceDir", &fSourceDir);
      R__insp.InspectMember(fSourceDir, "fSourceDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNWaveLength", &fNWaveLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWaveLength", &fWaveLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxReal", &fMaxReal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbStepsReal", &fNbStepsReal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize", &fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbButtons", &fNbButtons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXminC", &fXminC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYminC", &fYminC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWithDate", &fWithDate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameFile", &fNameFile);
      R__insp.InspectMember(fNameFile, "fNameFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fListFile", &fListFile);
      R__insp.InspectMember(fListFile, "fListFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUpcom", &fUpcom);
      R__insp.InspectMember(fUpcom, "fUpcom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDowncom", &fDowncom);
      R__insp.InspectMember(fDowncom, "fDowncom.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TLitAlbedo(void *p) {
      return  p ? new(p) ::TLitAlbedo : new ::TLitAlbedo;
   }
   static void *newArray_TLitAlbedo(Long_t nElements, void *p) {
      return p ? new(p) ::TLitAlbedo[nElements] : new ::TLitAlbedo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLitAlbedo(void *p) {
      delete ((::TLitAlbedo*)p);
   }
   static void deleteArray_TLitAlbedo(void *p) {
      delete [] ((::TLitAlbedo*)p);
   }
   static void destruct_TLitAlbedo(void *p) {
      typedef ::TLitAlbedo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TLitAlbedo

/********************************************************
* SLitraniDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSLitraniDict();

extern "C" void G__set_cpp_environmentSLitraniDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TLitPol3.h");
  G__add_compiledheader("TLitPol4.h");
  G__add_compiledheader("TLitEqIndex.h");
  G__add_compiledheader("TLitWave.h");
  G__add_compiledheader("TLitHistParams.h");
  G__add_compiledheader("TLitPhys.h");
  G__add_compiledheader("TLitTrap.h");
  G__add_compiledheader("TLitSpectrumCp.h");
  G__add_compiledheader("TLitSpectrum.h");
  G__add_compiledheader("TLitDetector.h");
  G__add_compiledheader("TLitSellmeier.h");
  G__add_compiledheader("TLitMedium.h");
  G__add_compiledheader("TLitVolume.h");
  G__add_compiledheader("TLit.h");
  G__add_compiledheader("TLitPhoton.h");
  G__add_compiledheader("TLitSpontan.h");
  G__add_compiledheader("TLitranino.h");
  G__add_compiledheader("TLitResults.h");
  G__add_compiledheader("TLitMarrow.h");
  G__add_compiledheader("TLitParticle.h");
  G__add_compiledheader("TLitBeam.h");
  G__add_compiledheader("TLitCascade.h");
  G__add_compiledheader("TLitGamma.h");
  G__add_compiledheader("TLitAlbedo.h");
  G__cpp_reset_tagtableSLitraniDict();
}
#include <new>
extern "C" int G__cpp_dllrevSLitraniDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TLitPol3 */
static int G__SLitraniDict_114_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPol3* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPol3[n];
     } else {
       p = new((void*) gvp) TLitPol3[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPol3;
     } else {
       p = new((void*) gvp) TLitPol3;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPol3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitPol3(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TLitPol3(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPol3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitPol3(*(TLitPol3*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TLitPol3(*(TLitPol3*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((TLitPol3*) G__getstructoffset())->FindRoots((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((TLitPol3*) G__getstructoffset())->FindRoots());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitPol3*) G__getstructoffset())->Getabcd(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->GetAn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->GetERoot((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->GetMag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitPol3*) G__getstructoffset())->GetNc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitPol3*) G__getstructoffset())->GetNd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitPol3*) G__getstructoffset())->GetNr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->GetQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol3*) G__getstructoffset())->GetRoot((Short_t) G__int(libp->para[0]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->GetXt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitPol3*) G__getstructoffset())->IsComplex((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitPol3*) G__getstructoffset())->IsComplex((Short_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitPol3*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitPol3*) G__getstructoffset())->PrintRoots();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPol3*) G__getstructoffset())->Set((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->Y((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol3*) G__getstructoffset())->Y(*((TComplex*) G__int(libp->para[0])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->Y((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol3*) G__getstructoffset())->Y((Int_t) G__int(libp->para[0]), *((TComplex*) G__int(libp->para[1])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->operator()((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol3*) G__getstructoffset())->operator()(*((TComplex*) G__int(libp->para[0])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol3*) G__getstructoffset())->operator()((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol3*) G__getstructoffset())->operator()((Int_t) G__int(libp->para[0]), *((TComplex*) G__int(libp->para[1])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLitPol3& obj = ((TLitPol3*) G__getstructoffset())->operator=(*(TLitPol3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitPol3*) G__getstructoffset())->operator==(*(TLitPol3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitPol3::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPol3::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitPol3::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitPol3::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPol3*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPol3::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitPol3::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPol3::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_114_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitPol3::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitPol3 G__TTLitPol3;
static int G__SLitraniDict_114_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitPol3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitPol3*) (soff+(sizeof(TLitPol3)*i)))->~G__TTLitPol3();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitPol3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitPol3*) (soff))->~G__TTLitPol3();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitPol4 */
static int G__SLitraniDict_116_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPol4* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPol4[n];
     } else {
       p = new((void*) gvp) TLitPol4[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPol4;
     } else {
       p = new((void*) gvp) TLitPol4;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPol4* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitPol4(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) TLitPol4(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPol4* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitPol4(*(TLitPol4*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TLitPol4(*(TLitPol4*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TLitPol4*) G__getstructoffset())->FindRoots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TLitPol4*) G__getstructoffset())->FindRootsRMP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitPol4*) G__getstructoffset())->Getabcde(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetAn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetERoot((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetMag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitPol4*) G__getstructoffset())->GetNc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitPol4*) G__getstructoffset())->GetNe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetOrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitPol4*) G__getstructoffset())->GetNr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol4*) G__getstructoffset())->GetRoot((Short_t) G__int(libp->para[0]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetXextr((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetXt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->GetYextr((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitPol4*) G__getstructoffset())->IsComplex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitPol4*) G__getstructoffset())->IsComplex((Short_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitPol4*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitPol4*) G__getstructoffset())->PrintRoots();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPol4*) G__getstructoffset())->Set((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->Y((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol4*) G__getstructoffset())->Y(*((TComplex*) G__int(libp->para[0])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->Y((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol4*) G__getstructoffset())->Y((Int_t) G__int(libp->para[0]), *((TComplex*) G__int(libp->para[1])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->operator()((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol4*) G__getstructoffset())->operator()(*((TComplex*) G__int(libp->para[0])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPol4*) G__getstructoffset())->operator()((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitPol4*) G__getstructoffset())->operator()((Int_t) G__int(libp->para[0]), *((TComplex*) G__int(libp->para[1])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLitPol4& obj = ((TLitPol4*) G__getstructoffset())->operator=(*(TLitPol4*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitPol4*) G__getstructoffset())->operator==(*(TLitPol4*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitPol4::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPol4::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitPol4::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitPol4::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPol4*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPol4::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitPol4::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPol4::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_116_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitPol4::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitPol4 G__TTLitPol4;
static int G__SLitraniDict_116_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitPol4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitPol4*) (soff+(sizeof(TLitPol4)*i)))->~G__TTLitPol4();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitPol4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitPol4*) (soff))->~G__TTLitPol4();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitEqIndex */
static int G__SLitraniDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitEqIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitEqIndex((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TLitEqIndex((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitEqIndex((Bool_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TLitEqIndex((Bool_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TLitEqIndex[n];
       } else {
         p = new((void*) gvp) TLitEqIndex[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TLitEqIndex;
       } else {
         p = new((void*) gvp) TLitEqIndex;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitEqIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitEqIndex((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TLitEqIndex((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitEqIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitEqIndex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Bool_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitEqIndex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Bool_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitEqIndex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitEqIndex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitEqIndex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitEqIndex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TLitEqIndex::BetterConj(*(TComplex*) libp->para[0].ref, *(TComplex*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitEqIndex*) G__getstructoffset())->BookHRes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((TLitEqIndex*) G__getstructoffset())->ClosestFrom((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitEqIndex*) G__getstructoffset())->GetCoefficients(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitEqIndex*) G__getstructoffset())->GetCoefficients(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitEqIndex*) G__getstructoffset())->GetfB(*(Bool_t*) G__Boolref(&libp->para[0]), *(Bool_t*) G__Boolref(&libp->para[1])
, *(Bool_t*) G__Boolref(&libp->para[2]), *(Bool_t*) G__Boolref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitEqIndex*) G__getstructoffset())->GetfB((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitEqIndex*) G__getstructoffset())->GetfD(*(TComplex*) libp->para[0].ref, *(TComplex*) libp->para[1].ref
, *(TComplex*) libp->para[2].ref, *(TComplex*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->GetfD((Short_t) G__int(libp->para[0]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitEqIndex*) G__getstructoffset())->GetfR(*(Bool_t*) G__Boolref(&libp->para[0]), *(Bool_t*) G__Boolref(&libp->para[1])
, *(Bool_t*) G__Boolref(&libp->para[2]), *(Bool_t*) G__Boolref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitEqIndex*) G__getstructoffset())->GetfR((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitEqIndex*) G__getstructoffset())->GetfZ(*(TComplex*) libp->para[0].ref, *(TComplex*) libp->para[1].ref
, *(TComplex*) libp->para[2].ref, *(TComplex*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->GetfZ((Short_t) G__int(libp->para[0]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitEqIndex*) G__getstructoffset())->GetGd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitEqIndex*) G__getstructoffset())->GetNr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitEqIndex*) G__getstructoffset())->GetQs2(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitEqIndex*) G__getstructoffset())->GetQs2((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitEqIndex*) G__getstructoffset())->GetQsc(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitEqIndex*) G__getstructoffset())->GetQsc((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitEqIndex*) G__getstructoffset())->GetResidue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitEqIndex*) G__getstructoffset())->GetTypeEq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitEqIndex*) G__getstructoffset())->GetWithRMP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const TLitEqIndex*) G__getstructoffset())->PrintEquation((KindOfMessage) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const TLitEqIndex*) G__getstructoffset())->PrintEquation((KindOfMessage) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TLitEqIndex*) G__getstructoffset())->PrintEquation();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TLitEqIndex*) G__getstructoffset())->PrintResult((KindOfMessage) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TLitEqIndex*) G__getstructoffset())->PrintResult();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitEqIndex*) G__getstructoffset())->Set((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitEqIndex*) G__getstructoffset())->Set((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLitEqIndex*) G__getstructoffset())->SetDebug((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitEqIndex*) G__getstructoffset())->SetDebug();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitEqIndex*) G__getstructoffset())->SetWithRMP((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((TLitEqIndex*) G__getstructoffset())->ShowEqu((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitEqIndex*) G__getstructoffset())->ShowEqu((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitEqIndex*) G__getstructoffset())->ShowEqu((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitEqIndex*) G__getstructoffset())->ShowEqu((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitEqIndex*) G__getstructoffset())->ShowEqu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitEqIndex*) G__getstructoffset())->ShowEqu();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitEqIndex*) G__getstructoffset())->ShowResidue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((TLitEqIndex*) G__getstructoffset())->Solve((Short_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((TLitEqIndex*) G__getstructoffset())->Solve());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->Y(*((TComplex*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->Y(*((TComplex*) G__int(libp->para[0])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->Y((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->Y((Double_t) G__double(libp->para[0]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->Y((Short_t) G__int(libp->para[0]), *((TComplex*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->Y((Short_t) G__int(libp->para[0]), *((TComplex*) G__int(libp->para[1])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->Y((Short_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->Y((Short_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const TLitEqIndex*) G__getstructoffset())->YAbs(*((TComplex*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const TLitEqIndex*) G__getstructoffset())->YAbs(*((TComplex*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const TLitEqIndex*) G__getstructoffset())->YAbs((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const TLitEqIndex*) G__getstructoffset())->YAbs((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->operator()(*((TComplex*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->operator()(*((TComplex*) G__int(libp->para[0])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->operator()((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitEqIndex*) G__getstructoffset())->operator()((Double_t) G__double(libp->para[0]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitEqIndex*) G__getstructoffset())->operator==(*(TLitEqIndex*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitEqIndex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitEqIndex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitEqIndex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitEqIndex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitEqIndex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitEqIndex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitEqIndex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitEqIndex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_169_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitEqIndex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_169_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitEqIndex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitEqIndex(*(TLitEqIndex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitEqIndex G__TTLitEqIndex;
static int G__SLitraniDict_169_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitEqIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitEqIndex*) (soff+(sizeof(TLitEqIndex)*i)))->~G__TTLitEqIndex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitEqIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitEqIndex*) (soff))->~G__TTLitEqIndex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_169_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitEqIndex* dest = (TLitEqIndex*) G__getstructoffset();
   *dest = *(TLitEqIndex*) libp->para[0].ref;
   const TLitEqIndex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitWave */
static int G__SLitraniDict_208_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitWave* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitWave[n];
     } else {
       p = new((void*) gvp) TLitWave[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitWave;
     } else {
       p = new((void*) gvp) TLitWave;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitWave* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitWave((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TLitWave((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitWave*) G__getstructoffset())->Split((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitWave*) G__getstructoffset())->VerifySplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitWave*) G__getstructoffset())->VerifyStart((Double_t) G__double(libp->para[0]), *(TMat33*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitWave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitWave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitWave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitWave::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitWave*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitWave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitWave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitWave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_208_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitWave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_208_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitWave* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitWave(*(TLitWave*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitWave G__TTLitWave;
static int G__SLitraniDict_208_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitWave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitWave*) (soff+(sizeof(TLitWave)*i)))->~G__TTLitWave();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitWave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitWave*) (soff))->~G__TTLitWave();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_208_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitWave* dest = (TLitWave*) G__getstructoffset();
   *dest = *(TLitWave*) libp->para[0].ref;
   const TLitWave& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitPhoton */
static int G__SLitraniDict_209_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPhoton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPhoton[n];
     } else {
       p = new((void*) gvp) TLitPhoton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPhoton;
     } else {
       p = new((void*) gvp) TLitPhoton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPhoton* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPhoton(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (TGeoVolume*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(TVector3*) libp->para[7].ref
, *(TVector3*) libp->para[8].ref, (Short_t) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) TLitPhoton(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (TGeoVolume*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(TVector3*) libp->para[7].ref
, *(TVector3*) libp->para[8].ref, (Short_t) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPhoton(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (TGeoVolume*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(TVector3*) libp->para[7].ref
, *(TVector3*) libp->para[8].ref);
     } else {
       p = new((void*) gvp) TLitPhoton(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (TGeoVolume*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(TVector3*) libp->para[7].ref
, *(TVector3*) libp->para[8].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPhoton* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPhoton(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (TLitVolume*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(TVector3*) libp->para[7].ref
, *(TVector3*) libp->para[8].ref, (Short_t) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) TLitPhoton(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (TLitVolume*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(TVector3*) libp->para[7].ref
, *(TVector3*) libp->para[8].ref, (Short_t) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitPhoton(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (TLitVolume*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(TVector3*) libp->para[7].ref
, *(TVector3*) libp->para[8].ref);
     } else {
       p = new((void*) gvp) TLitPhoton(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (TLitVolume*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(TVector3*) libp->para[7].ref
, *(TVector3*) libp->para[8].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitPhoton*) G__getstructoffset())->Detector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitPhoton*) G__getstructoffset())->DetectorN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhoton*) G__getstructoffset())->ExitFace();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitPhoton*) G__getstructoffset())->GetAnomaly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitPhoton*) G__getstructoffset())->GetCurrentTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitPhoton*) G__getstructoffset())->GetToDraw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhoton*) G__getstructoffset())->Jump();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhoton*) G__getstructoffset())->Move();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhoton*) G__getstructoffset())->OnFace();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhoton*) G__getstructoffset())->SetCurrentTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhoton*) G__getstructoffset())->SetToDraw((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhoton*) G__getstructoffset())->Transition();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitPhoton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPhoton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitPhoton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitPhoton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhoton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPhoton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitPhoton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPhoton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_209_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitPhoton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_209_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitPhoton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitPhoton(*(TLitPhoton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitPhoton G__TTLitPhoton;
static int G__SLitraniDict_209_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitPhoton*) (soff+(sizeof(TLitPhoton)*i)))->~G__TTLitPhoton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitPhoton*) (soff))->~G__TTLitPhoton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_209_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPhoton* dest = (TLitPhoton*) G__getstructoffset();
   *dest = *(TLitPhoton*) libp->para[0].ref;
   const TLitPhoton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitHistParams */
static int G__SLitraniDict_211_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitHistParams* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitHistParams[n];
     } else {
       p = new((void*) gvp) TLitHistParams[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitHistParams;
     } else {
       p = new((void*) gvp) TLitHistParams;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitHistParams* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitHistParams(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) TLitHistParams(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitHistParams(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitHistParams(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitHistParams(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitHistParams(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitHistParams(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitHistParams(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitHistParams::Add((TLitHistParams*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      TLitHistParams::Add(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      TLitHistParams::Add(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      TLitHistParams::Add(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      TLitHistParams::Add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitHistParams::CloseXmlFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitHistParams::CreateHistParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitHistParams::Get((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitHistParams::OpenXmlFileR();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitHistParams::Purge();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitHistParams::PurgeStatic();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitHistParams::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitHistParams::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitHistParams::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitHistParams::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitHistParams*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitHistParams::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitHistParams::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitHistParams::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_211_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitHistParams::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_211_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitHistParams* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitHistParams(*(TLitHistParams*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitHistParams G__TTLitHistParams;
static int G__SLitraniDict_211_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitHistParams*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitHistParams*) (soff+(sizeof(TLitHistParams)*i)))->~G__TTLitHistParams();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitHistParams*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitHistParams*) (soff))->~G__TTLitHistParams();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_211_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitHistParams* dest = (TLitHistParams*) G__getstructoffset();
   *dest = *(TLitHistParams*) libp->para[0].ref;
   const TLitHistParams& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitPhys */
static int G__SLitraniDict_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Alpha());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitPhys*) G__getstructoffset())->Anomalies());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->AvoDivE26());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Avogadro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->BiggestStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->C());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Ccmps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Cmks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Eps0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->GetA((TGeoMedium*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->GetZ((TGeoMedium*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Hbar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->MaxWaveL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Me());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Meg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->MinWaveL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->R02());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->SetAnomal((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->SetBiggestStep((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->SetLate((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->SetMaxWaveL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->SetMinMaxWL((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->SetMinWaveL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->SetThreshe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Threshe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->TooLate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitPhys*) G__getstructoffset())->Vphot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TLitPhys::ASin((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TLitPhys::ACos((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitPhys::Book();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitPhys::Get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitPhys::Kill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitPhys::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPhys::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitPhys::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitPhys::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitPhys*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitPhys*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPhys::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitPhys::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitPhys::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_219_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitPhys::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_219_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitPhys* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitPhys(*(TLitPhys*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhys));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_219_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitPhys* dest = (TLitPhys*) G__getstructoffset();
   *dest = *(TLitPhys*) libp->para[0].ref;
   const TLitPhys& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitTrap */
static int G__SLitraniDict_232_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitTrap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitTrap[n];
     } else {
       p = new((void*) gvp) TLitTrap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitTrap;
     } else {
       p = new((void*) gvp) TLitTrap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitTrap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 11
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitTrap(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
   } else {
     p = new((void*) gvp) TLitTrap(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitTrap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 15
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitTrap(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), *(Double_t*) G__Doubleref(&libp->para[13])
, *(Double_t*) G__Doubleref(&libp->para[14]));
   } else {
     p = new((void*) gvp) TLitTrap(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), *(Double_t*) G__Doubleref(&libp->para[13])
, *(Double_t*) G__Doubleref(&libp->para[14]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitTrap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitTrap(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TLitTrap(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitTrap* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitTrap((Short_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TLitTrap((Short_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitTrap((Short_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TLitTrap((Short_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitTrap*) G__getstructoffset())->AllParams(
*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitTrap*) G__getstructoffset())->GeoTrap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Getalpha1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Getalpha2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Getbl1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Getbl2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      ((const TLitTrap*) G__getstructoffset())->GetCMSdim(
(Short_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, (Double_t) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((const TLitTrap*) G__getstructoffset())->GetCMSdim(
(Short_t) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Getdz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TLitTrap*) G__getstructoffset())->GetfV((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Geth1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Geth2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Getphi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitTrap*) G__getstructoffset())->GetPoints(
*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]), *(Double_t*) G__Doubleref(&libp->para[11])
, *(Double_t*) G__Doubleref(&libp->para[12]), *(Double_t*) G__Doubleref(&libp->para[13])
, *(Double_t*) G__Doubleref(&libp->para[14]), *(Double_t*) G__Doubleref(&libp->para[15])
, *(Double_t*) G__Doubleref(&libp->para[16]), *(Double_t*) G__Doubleref(&libp->para[17])
, *(Double_t*) G__Doubleref(&libp->para[18]), *(Double_t*) G__Doubleref(&libp->para[19])
, *(Double_t*) G__Doubleref(&libp->para[20]), *(Double_t*) G__Doubleref(&libp->para[21])
, *(Double_t*) G__Doubleref(&libp->para[22]), *(Double_t*) G__Doubleref(&libp->para[23]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Gettl1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Gettl2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitTrap*) G__getstructoffset())->Gettheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitTrap*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitTrap*) G__getstructoffset())->PrintPts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitTrap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitTrap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitTrap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitTrap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitTrap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitTrap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitTrap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitTrap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_232_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitTrap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_232_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitTrap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitTrap(*(TLitTrap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitTrap G__TTLitTrap;
static int G__SLitraniDict_232_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitTrap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitTrap*) (soff+(sizeof(TLitTrap)*i)))->~G__TTLitTrap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitTrap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitTrap*) (soff))->~G__TTLitTrap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_232_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitTrap* dest = (TLitTrap*) G__getstructoffset();
   *dest = *(TLitTrap*) libp->para[0].ref;
   const TLitTrap& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitSpectrumCp */
static int G__SLitraniDict_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrumCp* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpectrumCp[n];
     } else {
       p = new((void*) gvp) TLitSpectrumCp[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpectrumCp;
     } else {
       p = new((void*) gvp) TLitSpectrumCp;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrumCp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrumCp* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrumCp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrumCp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 12
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
   } else {
     p = new((void*) gvp) TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrumCp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) TLitSpectrumCp(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrumCp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitSpectrumCp(*(TLitSpectrumCp*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TLitSpectrumCp(*(TLitSpectrumCp*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrumCp*) G__getstructoffset())->AddTimeComponent((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrumCp*) G__getstructoffset())->AddToGaussAmpNN((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrumCp*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TLitSpectrumCp*) G__getstructoffset())->GenDecayTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GenWaveLength(*(Bool_t*) G__Boolref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GetArea((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GetDecayTime((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GetGaussAmp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GetGaussAmpNN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GetGaussMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GetGaussSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitSpectrumCp*) G__getstructoffset())->GetNbTimes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitSpectrumCp*) G__getstructoffset())->GetNormalized());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GetRiseTime((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GetTimeWeight((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSpectrumCp*) G__getstructoffset())->GetTimeWeightNN((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrumCp*) G__getstructoffset())->Normalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitSpectrumCp*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrumCp*) G__getstructoffset())->SetGaussAmp((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrumCp*) G__getstructoffset())->SetGaussAmpNN((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitSpectrumCp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSpectrumCp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitSpectrumCp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrumCp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrumCp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSpectrumCp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitSpectrumCp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSpectrumCp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_233_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitSpectrumCp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitSpectrumCp G__TTLitSpectrumCp;
static int G__SLitraniDict_233_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitSpectrumCp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitSpectrumCp*) (soff+(sizeof(TLitSpectrumCp)*i)))->~G__TTLitSpectrumCp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitSpectrumCp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitSpectrumCp*) (soff))->~G__TTLitSpectrumCp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_233_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrumCp* dest = (TLitSpectrumCp*) G__getstructoffset();
   *dest = *(TLitSpectrumCp*) libp->para[0].ref;
   const TLitSpectrumCp& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitSpectrum */
static int G__SLitraniDict_279_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrum* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpectrum[n];
     } else {
       p = new((void*) gvp) TLitSpectrum[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpectrum;
     } else {
       p = new((void*) gvp) TLitSpectrum;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrum* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpectrum(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TLitSpectrum(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpectrum((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TLitSpectrum((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpectrum* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitSpectrum(*(TLitSpectrum*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TLitSpectrum(*(TLitSpectrum*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->AddOneComponent((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitSpectrum*) G__getstructoffset())->AddOneComponent((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitSpectrum*) G__getstructoffset())->AddOneComponent((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitSpectrum*) G__getstructoffset())->AddOneComponent((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->AddOneComponent(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->AddOneComponent(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->AddOneComponent(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrum::AddSpectrum((TLitSpectrum*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->AddThisSpectrum();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->AddTimeComponent((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->AddTimeComponent((TLitSpectrumCp*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->BetterPeaks((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Short_t*) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->BetterPeaks((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Short_t*) G__int(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->ClearGraphs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLitSpectrum*) G__getstructoffset())->DrawDecayTimes((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitSpectrum*) G__getstructoffset())->DrawDecayTimes();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrum::DrawNextInCollection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrum::DrawSpectraInCollection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrum::DrawSpectraInFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLitSpectrum*) G__getstructoffset())->DrawSpectrum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitSpectrum*) G__getstructoffset())->DrawSpectrum();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitSpectrum*) G__getstructoffset())->FindComponent((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLitSpectrum*) G__getstructoffset())->FindFit((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitSpectrum*) G__getstructoffset())->FindFit();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->FindPeaks((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->FindPeaks((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->FindPeaks((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->FindPeaks((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->FindPeaks((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->FindPeaks((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->FindPeaks());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) TLitSpectrum::FindSpectrum((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TLitSpectrum::FindSpectrum((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TLitSpectrum*) G__getstructoffset())->GenWaveLAndDecayT(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitSpectrum*) G__getstructoffset())->GetInSplineFitDB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitSpectrum*) G__getstructoffset())->GetMacro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitSpectrum*) G__getstructoffset())->GetNbOfComponents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitSpectrum*) G__getstructoffset())->GetNormalized());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitSpectrum*) G__getstructoffset())->GetSplineFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrum::InitStatic();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitSpectrum*) G__getstructoffset())->IsInCollection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TLitSpectrum::IsInCollection((TLitSpectrum*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TLitSpectrum::NameFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TLitSpectrum::NameFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->Normalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) TLitSpectrum::OrderFile((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) TLitSpectrum::OrderFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitSpectrum*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitSpectrum*) G__getstructoffset())->PrintComment();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const TLitSpectrum*) G__getstructoffset())->PrintSpectrum2File((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const TLitSpectrum*) G__getstructoffset())->PrintSpectrum2File((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const TLitSpectrum*) G__getstructoffset())->PrintSpectrum2File((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrum::Purge();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrum::PurgeStatic();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) TLitSpectrum::RemoveSpectrumFromFile((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) TLitSpectrum::RemoveSpectrumFromFile((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->SetDefaultLabels();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->SetMacro((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->SetSource((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->SetVLabel((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->SetXLabel((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrum::ShowSpectraInFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->UpdateFile((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TLitSpectrum*) G__getstructoffset())->UpdateFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitSpectrum*) G__getstructoffset())->VerifyNotInFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitSpectrum::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSpectrum::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitSpectrum::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpectrum::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpectrum*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSpectrum::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitSpectrum::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSpectrum::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_279_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitSpectrum::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitSpectrum G__TTLitSpectrum;
static int G__SLitraniDict_279_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitSpectrum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitSpectrum*) (soff+(sizeof(TLitSpectrum)*i)))->~G__TTLitSpectrum();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitSpectrum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitSpectrum*) (soff))->~G__TTLitSpectrum();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitDetector */
static int G__SLitraniDict_288_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitDetector[n];
     } else {
       p = new((void*) gvp) TLitDetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitDetector;
     } else {
       p = new((void*) gvp) TLitDetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitDetector(
(const char*) G__int(libp->para[0]), (KindOfDet) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitDetector*) G__getstructoffset())->ClearHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitDetector*) G__getstructoffset())->Conclusion();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitDetector*) G__getstructoffset())->FillDepth((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitDetector*) G__getstructoffset())->FillInside((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitDetector*) G__getstructoffset())->FillQEff((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitDetector*) G__getstructoffset())->FillTimeSeen((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitDetector*) G__getstructoffset())->FillWvlgthNot((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitDetector*) G__getstructoffset())->FillWvlgthSeen((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitDetector*) G__getstructoffset())->FillXYEntrance((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitDetector::FindDetector(*((TString*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitDetector*) G__getstructoffset())->GetGlob());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitDetector*) G__getstructoffset())->GetNbHistos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitDetector*) G__getstructoffset())->GetNbSumHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitDetector*) G__getstructoffset())->IsAPD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitDetector*) G__getstructoffset())->IsEntrance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitDetector*) G__getstructoffset())->IsGendet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitDetector*) G__getstructoffset())->IsGlob());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitDetector*) G__getstructoffset())->IsMe(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitDetector*) G__getstructoffset())->IsPhototube());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitDetector*) G__getstructoffset())->IsStopAlways());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitDetector*) G__getstructoffset())->IsVolEnt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitDetector*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_288_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_288_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitDetector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitDetector(*(TLitDetector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitDetector G__TTLitDetector;
static int G__SLitraniDict_288_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitDetector*) (soff+(sizeof(TLitDetector)*i)))->~G__TTLitDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitDetector*) (soff))->~G__TTLitDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_288_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitDetector* dest = (TLitDetector*) G__getstructoffset();
   *dest = *(TLitDetector*) libp->para[0].ref;
   const TLitDetector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitSellmeier */
static int G__SLitraniDict_289_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSellmeier* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSellmeier[n];
     } else {
       p = new((void*) gvp) TLitSellmeier[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSellmeier;
     } else {
       p = new((void*) gvp) TLitSellmeier;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSellmeier* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitSellmeier(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSellmeier*) G__getstructoffset())->AddComponent((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitSellmeier*) G__getstructoffset())->GetDiel((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const TLitSellmeier*) G__getstructoffset())->GetIndex((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const TLitSellmeier*) G__getstructoffset())->GetIndex((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitSellmeier::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSellmeier::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitSellmeier::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSellmeier::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSellmeier*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSellmeier::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitSellmeier::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSellmeier::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_289_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitSellmeier::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_289_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitSellmeier* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitSellmeier(*(TLitSellmeier*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitSellmeier G__TTLitSellmeier;
static int G__SLitraniDict_289_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitSellmeier*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitSellmeier*) (soff+(sizeof(TLitSellmeier)*i)))->~G__TTLitSellmeier();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitSellmeier*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitSellmeier*) (soff))->~G__TTLitSellmeier();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_289_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSellmeier* dest = (TLitSellmeier*) G__getstructoffset();
   *dest = *(TLitSellmeier*) libp->para[0].ref;
   const TLitSellmeier& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitMedium */
static int G__SLitraniDict_319_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium[n];
     } else {
       p = new((void*) gvp) TLitMedium[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium;
     } else {
       p = new((void*) gvp) TLitMedium;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (Double_t*) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (Double_t*) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t*) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t*) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (Double_t*) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (Double_t*) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t*) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t*) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 16
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   } else {
     p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 16
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   } else {
     p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 16
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   } else {
     p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 16
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   } else {
     p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMedium* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitMedium(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoMaterial*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitMedium*) G__getstructoffset())->CheckIt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TLitMedium*) G__getstructoffset())->dEdx((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitMedium*) G__getstructoffset())->dEdx((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitMedium*) G__getstructoffset())->dEdxActiv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->Diffus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->DoWLS(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitMedium::FindLitMedium((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->FindSpectrum((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->FluoComponent((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetAbsL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetAbsLb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetAbsLc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitMedium*) G__getstructoffset())->GetAniAbsL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitMedium*) G__getstructoffset())->GetAnisotropy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetCanStopElectron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetdEdx((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetDiffLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetDPLCosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetDPLIsDepol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitMedium*) G__getstructoffset())->GetDPLNextMed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetDPLTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetEc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TLitMedium*) G__getstructoffset())->GetElectronProperties());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetEpsa());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetEpsb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetEpsc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitMedium*) G__getstructoffset())->GetFluorescent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetHasAbsorption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetHasDiffusion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetHasRayleigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetHasWLS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetHistFluo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetIChangeWithWvl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitMedium*) G__getstructoffset())->GetKind());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitMedium*) G__getstructoffset())->GetLitSpectrum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitMedium*) G__getstructoffset())->GetMatCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetMatCounterD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetnCerenkov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitMedium*) G__getstructoffset())->GetNPhot((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetPEOk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetPhimua());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetPhimub());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetPhimuc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetPhotMev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetRayleighLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitMedium*) G__getstructoffset())->GetRevCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetRevCounterD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetRm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetSinThetaMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetSupplAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitMedium*) G__getstructoffset())->GetTSFitIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitMedium*) G__getstructoffset())->GetTSFitMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetTSIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetTSMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((TLitMedium*) G__getstructoffset())->GetTSNameIndex();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((TLitMedium*) G__getstructoffset())->GetTSNameMu();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitMedium*) G__getstructoffset())->GetTSNextMed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GetTSThinSlice());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetTSWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetWLSL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TComplex* pobj;
         const TComplex xobj = ((const TLitMedium*) G__getstructoffset())->GetWrapIndex();
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetWrapMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetX0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitMedium*) G__getstructoffset())->GetXSectnPE((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->GoodForCPE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsBirefr((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsBirefr((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsBirefr(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsBirefr((TLitSellmeier*) G__int(libp->para[0]), (TLitSellmeier*) G__int(libp->para[1])
, (TLitSellmeier*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->IsDepolish((TLitMedium*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->IsFluorescent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsIsotropic((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsIsotropic((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((TLitMedium*) G__getstructoffset())->IsIsotropic(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((TLitMedium*) G__getstructoffset())->IsIsotropic(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((TLitMedium*) G__getstructoffset())->IsIsotropic((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitMedium*) G__getstructoffset())->IsIsotropic((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitMedium*) G__getstructoffset())->IsIsotropic((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsIsotropic((TLitSellmeier*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->IsNonProportional());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->IsSensible());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->IsSlice());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitMedium*) G__getstructoffset())->IsSupplAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->IsThinSlice((TLitMedium*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsUniAxialNegBirefr((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsUniAxialNegBirefr((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsUniAxialNegBirefr((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsUniAxialNegBirefr((TLitSellmeier*) G__int(libp->para[0]), (TLitSellmeier*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsUniAxialPosBirefr((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsUniAxialPosBirefr((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsUniAxialPosBirefr((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->IsUniAxialPosBirefr((TLitSellmeier*) G__int(libp->para[0]), (TLitSellmeier*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitMedium*) G__getstructoffset())->IsThinSlice((TLitMedium*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitMedium*) G__getstructoffset())->IsWrapping());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->NewWavelength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      TLitMedium::NewWavelengthAll((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TLitMedium::NewWavelengthAll((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetAbsLa((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetAbsLa((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetAbsLa((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetAbsLa((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetAbsLb((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetAbsLb((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetAbsLb((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetAbsLb((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetAbsLc((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetAbsLc((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetAbsLc((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetAbsLc((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitMedium*) G__getstructoffset())->SetAsWrapping((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetCanStopElectron((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetCascades((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetCascades((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetCascades((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetDepolished((TLitMedium*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetDepolished((TLitMedium*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetDiffusionLength((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetDiffusionLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetDiffusionLength((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitMedium*) G__getstructoffset())->SetDiffusionLength();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetEc((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetFactorOnAbsL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetHistFluo((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetLitSpectrum((TLitSpectrum*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetKind((KindOfMedium) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetNonPropLightYield((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitMedium*) G__getstructoffset())->SetNonPropLightYield();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetPhotMev((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetPhotMev((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitMedium*) G__getstructoffset())->SetRayleighLength((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitMedium*) G__getstructoffset())->SetRayleighLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetRayleighLength((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetRm((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetWLS((TLitSpectrum*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetWLS((TLitSpectrum*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetWrapIndex((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetX0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetXSectnPE((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->SetXSectnPE((TSplineFit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->WaveAndLife(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->WithThinSlice((TLitMedium*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TLitMedium*) G__getstructoffset())->WithThinSlice((TLitMedium*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitMedium*) G__getstructoffset())->WithThinSlice((TLitMedium*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->WithThinSlice((TLitMedium*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TLitMedium*) G__getstructoffset())->WithThinSlice((TLitMedium*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitMedium*) G__getstructoffset())->WithThinSlice((TLitMedium*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitMedium::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitMedium::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitMedium::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitMedium::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_167(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMedium*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_168(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitMedium::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitMedium::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitMedium::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_319_0_171(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitMedium::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_319_0_172(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitMedium* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitMedium(*(TLitMedium*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitMedium G__TTLitMedium;
static int G__SLitraniDict_319_0_173(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitMedium*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitMedium*) (soff+(sizeof(TLitMedium)*i)))->~G__TTLitMedium();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitMedium*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitMedium*) (soff))->~G__TTLitMedium();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitVolume */
static int G__SLitraniDict_322_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitVolume* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitVolume[n];
     } else {
       p = new((void*) gvp) TLitVolume[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitVolume;
     } else {
       p = new((void*) gvp) TLitVolume;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitVolume* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitVolume((TGeoVolume*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TLitVolume((TGeoVolume*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitVolume* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLitVolume(
(TGeoVolume*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) TLitVolume(
(TGeoVolume*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->ClearEmission();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->ClearWCSdone();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->EmissionToWCS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->Gen((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->GenEField();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->GenSourceDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->GenSourcePoint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitVolume*) G__getstructoffset())->GetAniAbsL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetAniOx();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetAniOy();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetAniOz();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitVolume*) G__getstructoffset())->GetAnisotropic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitVolume*) G__getstructoffset())->GetChooseIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetCosAccept());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TLitVolume*) G__getstructoffset())->GetDamage((TVector3*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetDamAxis();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->GetDamByShower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamE0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamFac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitVolume*) G__getstructoffset())->GetDamFitGz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitVolume*) G__getstructoffset())->GetDamFitKimax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamFmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->GetDamGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamGz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamGzMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamKimax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetDamStart();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamSupFac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamZm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDamZs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetDetAxis();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitVolume*) G__getstructoffset())->GetDetKind());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->GetDielChange());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetDistCatAn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitVolume*) G__getstructoffset())->GetEmission(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->GetEmitPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitVolume*) G__getstructoffset())->GetEntrance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetEx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetEy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetEz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitVolume*) G__getstructoffset())->GetFitQE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->GetFromFace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitVolume*) G__getstructoffset())->GetGainProfile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitVolume*) G__getstructoffset())->GetGeoVolume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->GetIsQE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitVolume*) G__getstructoffset())->GetKindOfEmission());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitVolume*) G__getstructoffset())->GetLitMedium());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TLitVolume*) G__getstructoffset())->GetNameGP();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TLitVolume*) G__getstructoffset())->GetNameQE();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TLitVolume*) G__getstructoffset())->GetPath();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetQE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetRk2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetSourceDir();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetSourcePoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->GetStopAlways());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetThetaMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitVolume*) G__getstructoffset())->GetVDrifte());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->GetWCSdone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetWCSE();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetWCSEntrance();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetWCSSourceDir();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetWCSSourcePoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitVolume*) G__getstructoffset())->GetXYZEntrance();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->IsAccept());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->IsDamage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitVolume*) G__getstructoffset())->IsStepping());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->NewWavelength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      TLitVolume::NewWavelengthAll((Double_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TLitVolume::NewWavelengthAll((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage(
(TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage(
(TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage(
(TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage(
(TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage(
(TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage(
(TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->RadiationDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->RecordDamages((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TLitVolume*) G__getstructoffset())->SetAPD((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitVolume*) G__getstructoffset())->SetAPD((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitVolume*) G__getstructoffset())->SetAPD((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TLitVolume*) G__getstructoffset())->SetAxisDir((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitVolume*) G__getstructoffset())->SetAxisDir((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitVolume*) G__getstructoffset())->SetAxisDir((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitVolume*) G__getstructoffset())->SetAxisDir();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitVolume*) G__getstructoffset())->SetDetector((Bool_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitVolume*) G__getstructoffset())->SetDetector((Bool_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitVolume*) G__getstructoffset())->SetDetector((Bool_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitVolume*) G__getstructoffset())->SetDetector((Bool_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->SetDielTensor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEField((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (ChoiceOfn) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEField((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEField((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEField((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEField());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEmission(
(KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (Bool_t) G__int(libp->para[6]), *((TVector3*) G__int(libp->para[7]))));
      break;
   case 7:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEmission(
(KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (Bool_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetEmission());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->SetGeoVolume((TGeoVolume*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->SetKindOfEmission((KindOfDist) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->SetM();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->SetPath((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLitVolume*) G__getstructoffset())->SetNoDamage((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitVolume*) G__getstructoffset())->SetNoDamage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->SetOpticalAxis((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TLitVolume*) G__getstructoffset())->SetPhotoTube((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitVolume*) G__getstructoffset())->SetPhotoTube((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetSourcePoint((Bool_t) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->SetSourcePoint((Bool_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TLitVolume*) G__getstructoffset())->SetStep((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->SetWCS();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitVolume*) G__getstructoffset())->ShowDamage();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->ShowerDamage(
(TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->ShowerDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->ShowerDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->ShowerDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->ShowerDamage(
(TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->ShowerDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->ShowerDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((TLitVolume*) G__getstructoffset())->ShowerDamage((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitVolume::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitVolume::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitVolume::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitVolume::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitVolume*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitVolume::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitVolume::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitVolume::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_322_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitVolume::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_322_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitVolume* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitVolume(*(TLitVolume*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitVolume G__TTLitVolume;
static int G__SLitraniDict_322_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitVolume*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitVolume*) (soff+(sizeof(TLitVolume)*i)))->~G__TTLitVolume();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitVolume*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitVolume*) (soff))->~G__TTLitVolume();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_322_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitVolume* dest = (TLitVolume*) G__getstructoffset();
   *dest = *(TLitVolume*) libp->para[0].ref;
   const TLitVolume& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLit */
static int G__SLitraniDict_385_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLit::Book();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->BookCanvas();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->BookCanvas((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->BookCanvas((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLit*) G__getstructoffset())->CheckPath(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->CloseFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->CloseFilesR();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLit::Get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLit::GetLineSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLit::GetListFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLit::GetNbButtons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLit::GetRootFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLit::GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLit*) G__getstructoffset())->GetTestCalc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLit::GetTopXGen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLit::GetTopYGen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLit*) G__getstructoffset())->GetWCSofNode((const char*) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TLit::GetWithDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLit::Kill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->OpenFilesR();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->OpenFilesR((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLit*) G__getstructoffset())->OpenFilesW((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLit*) G__getstructoffset())->OpenFilesW();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLit*) G__getstructoffset())->PrintPeriod((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLit*) G__getstructoffset())->PrintPeriod();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLit*) G__getstructoffset())->PublishVersion();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->RestoreComments();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLit*) G__getstructoffset())->SelectRun((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLit*) G__getstructoffset())->SelectRun(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TLit::SetLineSize((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TLit::SetLineSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TLit::SetListFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TLit::SetListFileName();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TLit::SetNbButtons((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TLit::SetNbButtons();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      TLit::SetParameters(
(Short_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (Short_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      TLit::SetParameters(
(Short_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      TLit::SetParameters((Short_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TLit::SetParameters((Short_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TLit::SetParameters((Short_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TLit::SetParameters((Short_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TLit::SetParameters((Short_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TLit::SetParameters((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TLit::SetParameters();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TLit::SetRootFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TLit::SetRootFileName();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLit::SetSize((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->SetTestCalc((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TLit::SetTopXGen((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TLit::SetTopXGen();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TLit::SetTopYGen((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TLit::SetTopYGen();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TLit::SetWithDate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TLit::SetWithDate();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_385_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_385_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLit(*(TLit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_385_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLit* dest = (TLit*) G__getstructoffset();
   *dest = *(TLit*) libp->para[0].ref;
   const TLit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitResults */
static int G__SLitraniDict_407_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitResults* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitResults[n];
     } else {
       p = new((void*) gvp) TLitResults[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitResults;
     } else {
       p = new((void*) gvp) TLitResults;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitResults* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitResults(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitResults(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitResults(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TLitResults(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitResults*) G__getstructoffset())->AddToList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->CInit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->Conclusion();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->D();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TLitResults*) G__getstructoffset())->D1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->DelHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->DelPaveT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->DoStat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TLitResults*) G__getstructoffset())->GetListOfDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitResults*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitResults*) G__getstructoffset())->GetXparam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->GInit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitResults*) G__getstructoffset())->HasFluo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->N();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TLitResults*) G__getstructoffset())->N1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->ResetCounters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitResults::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitResults::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitResults::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitResults::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitResults*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitResults::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitResults::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitResults::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_407_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitResults::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_407_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitResults* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitResults(*(TLitResults*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitResults G__TTLitResults;
static int G__SLitraniDict_407_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitResults*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitResults*) (soff+(sizeof(TLitResults)*i)))->~G__TTLitResults();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitResults*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitResults*) (soff))->~G__TTLitResults();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_407_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitResults* dest = (TLitResults*) G__getstructoffset();
   *dest = *(TLitResults*) libp->para[0].ref;
   const TLitResults& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitMarrow */
static int G__SLitraniDict_408_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMarrow* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMarrow[n];
     } else {
       p = new((void*) gvp) TLitMarrow[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMarrow;
     } else {
       p = new((void*) gvp) TLitMarrow;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMarrow* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMarrow(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TLitMarrow(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitMarrow((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TLitMarrow((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMarrow*) G__getstructoffset())->ClearHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->D((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawAbnorm();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawAbsBef();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawAbsMat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawAbsRvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawAllLosses();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawEfficiency();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawLossAng();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawLossQE();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawOutSide();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawTooFew();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitMarrow*) G__getstructoffset())->DrawTooLate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitMarrow*) G__getstructoffset())->GetfH());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMarrow*) G__getstructoffset())->InitP();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMarrow*) G__getstructoffset())->N();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMarrow*) G__getstructoffset())->N1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMarrow*) G__getstructoffset())->ResetCounter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMarrow*) G__getstructoffset())->Summary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitMarrow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitMarrow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitMarrow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitMarrow::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitMarrow*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitMarrow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitMarrow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitMarrow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_408_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitMarrow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_408_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitMarrow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitMarrow(*(TLitMarrow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitMarrow G__TTLitMarrow;
static int G__SLitraniDict_408_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitMarrow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitMarrow*) (soff+(sizeof(TLitMarrow)*i)))->~G__TTLitMarrow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitMarrow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitMarrow*) (soff))->~G__TTLitMarrow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_408_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitMarrow* dest = (TLitMarrow*) G__getstructoffset();
   *dest = *(TLitMarrow*) libp->para[0].ref;
   const TLitMarrow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitSpontan */
static int G__SLitraniDict_409_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpontan* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpontan[n];
     } else {
       p = new((void*) gvp) TLitSpontan[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpontan;
     } else {
       p = new((void*) gvp) TLitSpontan;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpontan* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpontan* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitSpontan(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpontan*) G__getstructoffset())->AllTracksToDraw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((TLitSpontan*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitSpontan*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitSpontan*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitSpontan*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitSpontan*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitSpontan*) G__getstructoffset())->GetRecordedTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitSpontan*) G__getstructoffset())->MoveCradle((TGeoMatrix*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitSpontan*) G__getstructoffset())->MoveCradle((TGeoMatrix*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitSpontan*) G__getstructoffset())->NameFromPath(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TLitSpontan*) G__getstructoffset())->Periodicity((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TLitSpontan*) G__getstructoffset())->Periodicity();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitSpontan*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 103, (long) ((TLitSpontan*) G__getstructoffset())->SetEmission(
(KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (Bool_t) G__int(libp->para[6]), *((TVector3*) G__int(libp->para[7]))));
      break;
   case 7:
      G__letint(result7, 103, (long) ((TLitSpontan*) G__getstructoffset())->SetEmission(
(KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (Bool_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitSpontan*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitSpontan*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((TLitSpontan*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TLitSpontan*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TLitSpontan*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TLitSpontan*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TLitSpontan*) G__getstructoffset())->SetEmission());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpontan*) G__getstructoffset())->SetFillDeath((TH1F*) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])
, (TH1F*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpontan*) G__getstructoffset())->SetRecordedTracks((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpontan*) G__getstructoffset())->SetWvlgth((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpontan*) G__getstructoffset())->TrackToDraw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitSpontan::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSpontan::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitSpontan::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitSpontan::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitSpontan*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSpontan::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitSpontan::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitSpontan::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_409_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitSpontan::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_409_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitSpontan* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitSpontan(*(TLitSpontan*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitSpontan G__TTLitSpontan;
static int G__SLitraniDict_409_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitSpontan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitSpontan*) (soff+(sizeof(TLitSpontan)*i)))->~G__TTLitSpontan();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitSpontan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitSpontan*) (soff))->~G__TTLitSpontan();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_409_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitSpontan* dest = (TLitSpontan*) G__getstructoffset();
   *dest = *(TLitSpontan*) libp->para[0].ref;
   const TLitSpontan& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitranino */
static int G__SLitraniDict_410_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitranino* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitranino[n];
     } else {
       p = new((void*) gvp) TLitranino[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitranino;
     } else {
       p = new((void*) gvp) TLitranino;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitranino* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitranino(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitVolume*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitranino(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitVolume*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitranino(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitVolume*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitranino(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitVolume*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->AgainstRev();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->AgainstShape();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->AllTracksToDraw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitranino*) G__getstructoffset())->Detector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TLitranino*) G__getstructoffset())->DetectorN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((TLitranino*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitranino*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitranino*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitranino*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitranino*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitranino*) G__getstructoffset())->GetAbsLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->InDetRecord();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->InMatRecord();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->InRevRecord();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->Jump();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->Move();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->OnFace();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitranino*) G__getstructoffset())->RestartPrinting((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitranino*) G__getstructoffset())->RestartPrinting((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->SetAbsLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->SetAnimateTracks((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->SetNframes((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->TrackToDraw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitranino::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitranino::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitranino::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitranino::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitranino*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitranino::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitranino::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitranino::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_410_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitranino::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_410_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitranino* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitranino(*(TLitranino*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitranino G__TTLitranino;
static int G__SLitraniDict_410_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitranino*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitranino*) (soff+(sizeof(TLitranino)*i)))->~G__TTLitranino();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitranino*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitranino*) (soff))->~G__TTLitranino();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_410_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitranino* dest = (TLitranino*) G__getstructoffset();
   *dest = *(TLitranino*) libp->para[0].ref;
   const TLitranino& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitParticle */
static int G__SLitraniDict_450_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitParticle[n];
     } else {
       p = new((void*) gvp) TLitParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitParticle;
     } else {
       p = new((void*) gvp) TLitParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TLitParticle(
(Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitParticle((Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TLitParticle((Int_t) G__int(libp->para[0]), (PDistribution) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitParticle((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TLitParticle((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->CerCos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitParticle*) G__getstructoffset())->Cerenkov((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitParticle*) G__getstructoffset())->Cerenkov((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->CerSin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitParticle*) G__getstructoffset())->EmitCerenkov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitParticle*) G__getstructoffset())->GenP();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetBeta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetEnergyMev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetExp1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitParticle*) G__getstructoffset())->GetPdist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetPmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetPmean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetPmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetSig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->GetSpeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitParticle*) G__getstructoffset())->Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitParticle*) G__getstructoffset())->NbCerPhot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitParticle*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitParticle*) G__getstructoffset())->SetEmitCerenkov((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitParticle*) G__getstructoffset())->SetLorentzE((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_450_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_450_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitParticle(*(TLitParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitParticle G__TTLitParticle;
static int G__SLitraniDict_450_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitParticle*) (soff+(sizeof(TLitParticle)*i)))->~G__TTLitParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitParticle*) (soff))->~G__TTLitParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_450_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitParticle* dest = (TLitParticle*) G__getstructoffset();
   *dest = *(TLitParticle*) libp->para[0].ref;
   const TLitParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitBeam */
static int G__SLitraniDict_452_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitBeam* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitBeam[n];
     } else {
       p = new((void*) gvp) TLitBeam[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitBeam;
     } else {
       p = new((void*) gvp) TLitBeam;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitBeam* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitBeam(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitParticle*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitBeam(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitParticle*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitBeam(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitParticle*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitBeam(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitParticle*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitBeam(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitParticle*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitBeam(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitParticle*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitBeam(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TLitBeam(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TLitBeam*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TLitBeam*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitBeam*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitBeam*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitBeam*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitBeam*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitBeam*) G__getstructoffset())->FullName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitBeam*) G__getstructoffset())->FullTitle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitBeam*) G__getstructoffset())->GetAxisDirx();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitBeam*) G__getstructoffset())->GetAxisDiry();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitBeam*) G__getstructoffset())->GetAxisDirz();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitBeam*) G__getstructoffset())->GetDirFace();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitBeam*) G__getstructoffset())->GetDistName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitBeam*) G__getstructoffset())->GetFromFace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitBeam*) G__getstructoffset())->GetKindOfEmission());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TLitBeam*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitBeam*) G__getstructoffset())->GetSourceFixed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitBeam*) G__getstructoffset())->GetSourcePath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitBeam*) G__getstructoffset())->GetSourcePoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitBeam*) G__getstructoffset())->GetThetaMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitBeam*) G__getstructoffset())->MoveCradle((TGeoMatrix*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitBeam*) G__getstructoffset())->MoveCradle((TGeoMatrix*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitBeam*) G__getstructoffset())->NameFromPath(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitBeam*) G__getstructoffset())->SetCerenkov((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 103, (long) ((TLitBeam*) G__getstructoffset())->SetEmission(
(KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (Bool_t) G__int(libp->para[6]), *((TVector3*) G__int(libp->para[7]))));
      break;
   case 7:
      G__letint(result7, 103, (long) ((TLitBeam*) G__getstructoffset())->SetEmission(
(KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (Bool_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitBeam*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitBeam*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((TLitBeam*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TLitBeam*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TLitBeam*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TLitBeam*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TLitBeam*) G__getstructoffset())->SetEmission());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitBeam*) G__getstructoffset())->SetParticle((TLitParticle*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitBeam*) G__getstructoffset())->SetParticle((TLitParticle*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitBeam::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitBeam::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitBeam::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitBeam::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitBeam*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitBeam::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitBeam::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitBeam::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_452_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitBeam::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_452_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitBeam* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitBeam(*(TLitBeam*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitBeam G__TTLitBeam;
static int G__SLitraniDict_452_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitBeam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitBeam*) (soff+(sizeof(TLitBeam)*i)))->~G__TTLitBeam();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitBeam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitBeam*) (soff))->~G__TTLitBeam();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_452_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitBeam* dest = (TLitBeam*) G__getstructoffset();
   *dest = *(TLitBeam*) libp->para[0].ref;
   const TLitBeam& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitCascade */
static int G__SLitraniDict_453_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitCascade* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade[n];
     } else {
       p = new((void*) gvp) TLitCascade[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade;
     } else {
       p = new((void*) gvp) TLitCascade;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitCascade* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7]))
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7]))
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7])));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7])));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitCascade* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7]))
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7]))
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7])));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])), *((TVector3*) G__int(libp->para[7])));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, *((TVector3*) G__int(libp->para[6])));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TLitMedium*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitCascade* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitCascade* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TVector3*) G__int(libp->para[4])));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) TLitCascade(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TLitMedium*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TLitCascade*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitCascade*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitCascade*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitCascade*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitCascade*) G__getstructoffset())->GetPhotFac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitCascade*) G__getstructoffset())->NewEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TLitCascade*) G__getstructoffset())->NewPosition((const char*) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((TLitCascade*) G__getstructoffset())->NewPosition((const char*) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((TLitCascade*) G__getstructoffset())->NewPosition((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitCascade*) G__getstructoffset())->NewPosition(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((TLitCascade*) G__getstructoffset())->NewPosition(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitCascade*) G__getstructoffset())->SetName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitCascade*) G__getstructoffset())->SetPhotFac((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TLitCascade*) G__getstructoffset())->SetSteps((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitCascade*) G__getstructoffset())->SetSteps((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitCascade*) G__getstructoffset())->SetSteps((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitCascade*) G__getstructoffset())->SetTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitCascade::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitCascade::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitCascade::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitCascade::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitCascade*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitCascade::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitCascade::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitCascade::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_453_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitCascade::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_453_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitCascade* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitCascade(*(TLitCascade*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitCascade G__TTLitCascade;
static int G__SLitraniDict_453_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitCascade*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitCascade*) (soff+(sizeof(TLitCascade)*i)))->~G__TTLitCascade();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitCascade*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitCascade*) (soff))->~G__TTLitCascade();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_453_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitCascade* dest = (TLitCascade*) G__getstructoffset();
   *dest = *(TLitCascade*) libp->para[0].ref;
   const TLitCascade& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitGamma */
static int G__SLitraniDict_542_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitGamma* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma[n];
     } else {
       p = new((void*) gvp) TLitGamma[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma;
     } else {
       p = new((void*) gvp) TLitGamma;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitGamma* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (PDistribution) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TLitGamma(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitGamma*) G__getstructoffset())->CheckDead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitGamma*) G__getstructoffset())->ComptonCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitGamma*) G__getstructoffset())->ComptonCut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitGamma*) G__getstructoffset())->ComptonOk();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((TLitGamma*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TLitGamma*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TLitGamma*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TLitGamma*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitGamma*) G__getstructoffset())->Gen((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitGamma*) G__getstructoffset())->GetAxisDirx();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitGamma*) G__getstructoffset())->GetAxisDiry();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitGamma*) G__getstructoffset())->GetAxisDirz();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitGamma*) G__getstructoffset())->GetCompton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitGamma*) G__getstructoffset())->GetDirFace();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitGamma*) G__getstructoffset())->GetForgetLast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitGamma*) G__getstructoffset())->GetFromFace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitGamma*) G__getstructoffset())->GetMoving());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitGamma*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitGamma*) G__getstructoffset())->GetRunStat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitGamma*) G__getstructoffset())->GetSourceFixed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitGamma*) G__getstructoffset())->GetSourcePath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLitGamma*) G__getstructoffset())->GetSourcePoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitGamma*) G__getstructoffset())->GetThetaMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitGamma*) G__getstructoffset())->IsToDraw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitGamma*) G__getstructoffset())->KindOfEmission());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TLitGamma*) G__getstructoffset())->MoveCradle((TGeoMatrix*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TLitGamma*) G__getstructoffset())->MoveCradle((TGeoMatrix*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitGamma*) G__getstructoffset())->NameFromPath(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 103, (long) ((TLitGamma*) G__getstructoffset())->SetEmission(
(KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (Bool_t) G__int(libp->para[6]), *((TVector3*) G__int(libp->para[7]))));
      break;
   case 7:
      G__letint(result7, 103, (long) ((TLitGamma*) G__getstructoffset())->SetEmission(
(KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (Bool_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TLitGamma*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), *((TVector3*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TLitGamma*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((TLitGamma*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TLitGamma*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TLitGamma*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TLitGamma*) G__getstructoffset())->SetEmission((KindOfDist) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TLitGamma*) G__getstructoffset())->SetEmission());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitGamma*) G__getstructoffset())->SetFillDeath((TH1F*) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])
, (TH1F*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TLitGamma*) G__getstructoffset())->WhichToDraw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TLitGamma*) G__getstructoffset())->WhichToDraw();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitGamma::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitGamma::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitGamma::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitGamma::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitGamma*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitGamma::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitGamma::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitGamma::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_542_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitGamma::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_542_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitGamma* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitGamma(*(TLitGamma*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitGamma G__TTLitGamma;
static int G__SLitraniDict_542_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitGamma*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitGamma*) (soff+(sizeof(TLitGamma)*i)))->~G__TTLitGamma();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitGamma*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitGamma*) (soff))->~G__TTLitGamma();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_542_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitGamma* dest = (TLitGamma*) G__getstructoffset();
   *dest = *(TLitGamma*) libp->para[0].ref;
   const TLitGamma& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLitAlbedo */
static int G__SLitraniDict_544_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitAlbedo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitAlbedo[n];
     } else {
       p = new((void*) gvp) TLitAlbedo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitAlbedo;
     } else {
       p = new((void*) gvp) TLitAlbedo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitAlbedo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitAlbedo(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TLitAlbedo(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLitAlbedo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TLitAlbedo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->BuildGeometry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->Gen();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitAlbedo*) G__getstructoffset())->GetAperture());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitAlbedo*) G__getstructoffset())->GetD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitAlbedo*) G__getstructoffset())->GetDistPoint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitAlbedo*) G__getstructoffset())->GetDowncom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitAlbedo*) G__getstructoffset())->GetL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitAlbedo*) G__getstructoffset())->GetListFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitAlbedo*) G__getstructoffset())->GetMaxReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitAlbedo*) G__getstructoffset())->GetNameFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitAlbedo*) G__getstructoffset())->GetNAngles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitAlbedo*) G__getstructoffset())->GetNbButtons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitAlbedo*) G__getstructoffset())->GetNbStepsReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitAlbedo*) G__getstructoffset())->GetNWaveLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TLitAlbedo*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitAlbedo*) G__getstructoffset())->GetStartAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitAlbedo*) G__getstructoffset())->GetStepAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TLitAlbedo*) G__getstructoffset())->GetUpcom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitAlbedo*) G__getstructoffset())->GetWavelength((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLitAlbedo*) G__getstructoffset())->GetWithDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLitAlbedo*) G__getstructoffset())->GetWrapDiffus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitAlbedo*) G__getstructoffset())->GetXminC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TLitAlbedo*) G__getstructoffset())->GetYminC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->Go();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLitAlbedo*) G__getstructoffset())->PrintAngles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetAperture((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetD((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetDefWaveL();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetDistPoint((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetDowncom((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetListFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetMaxReal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetNameFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetNAngles((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetNbButtons((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetNbStepsReal((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetSize((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetStartAngle((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetUpcom((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetWaveL((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetWithDate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetWrapDiffus((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetXminC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->SetYminC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLitAlbedo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitAlbedo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLitAlbedo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLitAlbedo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLitAlbedo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitAlbedo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitAlbedo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLitAlbedo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SLitraniDict_544_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLitAlbedo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SLitraniDict_544_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLitAlbedo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLitAlbedo(*(TLitAlbedo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLitAlbedo G__TTLitAlbedo;
static int G__SLitraniDict_544_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLitAlbedo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLitAlbedo*) (soff+(sizeof(TLitAlbedo)*i)))->~G__TTLitAlbedo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLitAlbedo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLitAlbedo*) (soff))->~G__TTLitAlbedo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SLitraniDict_544_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLitAlbedo* dest = (TLitAlbedo*) G__getstructoffset();
   *dest = *(TLitAlbedo*) libp->para[0].ref;
   const TLitAlbedo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TLitPol3 */

/* TLitPol4 */

/* TLitEqIndex */

/* TLitWave */

/* TLitPhoton */

/* TLitHistParams */

/* TLitPhys */

/* TLitTrap */

/* TLitSpectrumCp */

/* TLitSpectrum */

/* TLitDetector */

/* TLitSellmeier */

/* TLitMedium */

/* TLitVolume */

/* TLit */

/* TLitResults */

/* TLitMarrow */

/* TLitSpontan */

/* TLitranino */

/* TLitParticle */

/* TLitBeam */

/* TLitCascade */

/* TLitGamma */

/* TLitAlbedo */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSLitraniDict {
 public:
  G__Sizep2memfuncSLitraniDict(): p(&G__Sizep2memfuncSLitraniDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSLitraniDict::*p)();
};

size_t G__get_sizep2memfuncSLitraniDict()
{
  G__Sizep2memfuncSLitraniDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSLitraniDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3))) {
     TLitPol3 *G__Lderived;
     G__Lderived=(TLitPol3*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4))) {
     TLitPol4 *G__Lderived;
     G__Lderived=(TLitPol4*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex))) {
     TLitEqIndex *G__Lderived;
     G__Lderived=(TLitEqIndex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave))) {
     TLitWave *G__Lderived;
     G__Lderived=(TLitWave*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton))) {
     TLitPhoton *G__Lderived;
     G__Lderived=(TLitPhoton*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams))) {
     TLitHistParams *G__Lderived;
     G__Lderived=(TLitHistParams*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap))) {
     TLitTrap *G__Lderived;
     G__Lderived=(TLitTrap*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp))) {
     TLitSpectrumCp *G__Lderived;
     G__Lderived=(TLitSpectrumCp*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum))) {
     TLitSpectrum *G__Lderived;
     G__Lderived=(TLitSpectrum*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector))) {
     TLitDetector *G__Lderived;
     G__Lderived=(TLitDetector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier))) {
     TLitSellmeier *G__Lderived;
     G__Lderived=(TLitSellmeier*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium))) {
     TLitMedium *G__Lderived;
     G__Lderived=(TLitMedium*)0x1000;
     {
       TGeoMedium *G__Lpbase=(TGeoMedium*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMedium),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume))) {
     TLitVolume *G__Lderived;
     G__Lderived=(TLitVolume*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults))) {
     TLitResults *G__Lderived;
     G__Lderived=(TLitResults*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow))) {
     TLitMarrow *G__Lderived;
     G__Lderived=(TLitMarrow*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan))) {
     TLitSpontan *G__Lderived;
     G__Lderived=(TLitSpontan*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino))) {
     TLitranino *G__Lderived;
     G__Lderived=(TLitranino*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle))) {
     TLitParticle *G__Lderived;
     G__Lderived=(TLitParticle*)0x1000;
     {
       TParticle *G__Lpbase=(TParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle),G__get_linked_tagnum(&G__SLitraniDictLN_TParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle),G__get_linked_tagnum(&G__SLitraniDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle),G__get_linked_tagnum(&G__SLitraniDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam))) {
     TLitBeam *G__Lderived;
     G__Lderived=(TLitBeam*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade))) {
     TLitCascade *G__Lderived;
     G__Lderived=(TLitCascade*)0x1000;
     {
       TParticle *G__Lpbase=(TParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade),G__get_linked_tagnum(&G__SLitraniDictLN_TParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade),G__get_linked_tagnum(&G__SLitraniDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade),G__get_linked_tagnum(&G__SLitraniDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma))) {
     TLitGamma *G__Lderived;
     G__Lderived=(TLitGamma*)0x1000;
     {
       TLitParticle *G__Lpbase=(TLitParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma),G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TParticle *G__Lpbase=(TParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma),G__get_linked_tagnum(&G__SLitraniDictLN_TParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma),G__get_linked_tagnum(&G__SLitraniDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma),G__get_linked_tagnum(&G__SLitraniDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo))) {
     TLitAlbedo *G__Lderived;
     G__Lderived=(TLitAlbedo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo),G__get_linked_tagnum(&G__SLitraniDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo),G__get_linked_tagnum(&G__SLitraniDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSLitraniDict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SLitraniDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SLitraniDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SLitraniDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SLitraniDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SLitraniDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SLitraniDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__SLitraniDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__SLitraniDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__SLitraniDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__SLitraniDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__SLitraniDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__SLitraniDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__SLitraniDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__SLitraniDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__SLitraniDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__SLitraniDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SLitraniDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SLitraniDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__SLitraniDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SLitraniDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SLitraniDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__SLitraniDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TLitPol3 */
static void G__setup_memvarTLitPol3(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3));
   { TLitPol3 *p; p=(TLitPol3*)0x1000; if (p) { }
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNd=",0,"Degree of polynomial [3,2,1,0]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAn=",0,"Coefficient of x^N, N degree of polynomial");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXt=",0,"Translation x' = x - fXt, such that term in x'^2 disappear");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP=",0,"p of equation f(x') = x'^3 + px' + q");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fQ=",0,"q of equation f(x') = x'^3 + px' + q");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMag=",0,"! Magnitude of coefficients = |a|+|b|+|c|+|d|, then magnitude of roots");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNr=",0,"! Number of real roots.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fRoots[3]=",0,"! Array of real or complex roots of polynomial");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fERoots[3]=",0,"! Absolute value of the normalized polynomial at fRoots[k]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitPol4 */
static void G__setup_memvarTLitPol4(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4));
   { TLitPol4 *p; p=(TLitPol4*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAn=",0,"Coefficient of x^4");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXt=",0,"Translation x' = x - fXt, such that term in x'^2 disappear");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP=",0,"p of equation f(x') = x'^4 + px'^2 + qx + r");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fQ=",0,"q of equation f(x') = x'^4 + px'^2 + qx + r");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fR=",0,"r of equation f(x') = x'^4 + px'^2 + qx + r");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMag=",0,"! Magnitude of coefficients = |a|+|b|+|c|+|d|, then magnitude of roots");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNr=",0,"! Number of real roots");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNe=",0,"! Number of extrema");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYextr[3]=",0,"! Y value at the extrema");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3),-1,-1,2,"fPol3=",0,"! Derivative of normalized polynomial of 4th degree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fRoots[4]=",0,"! Array of real or complex roots of polynomial");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fERoots[4]=",0,"! Absolute value of the normalized polynomial at fRoots[k]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitEqIndex */
static void G__setup_memvarTLitEqIndex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex));
   { TLitEqIndex *p; p=(TLitEqIndex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TypeOfEquation),-1,-1,2,"fTypeEq=",0,"{bczero,degenerate,general}");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fWithRMP=",0,"If true, uses ROOT::Math::Polynomial for 4th degree polynomial");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"c=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"d=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"g=",0,"Coefficients of the equation (E1)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGd=",0,"Determinant for SolveSimple");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDebug=",0,"! True if debugging: many prints. Default false");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNr=",0,"! Number of solutions which are real");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNp=",0,"! Number of solutions with +Sqrt(z-g)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fZc[4]=",0,"! The 4 solutions");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBc[4]=",0,"! The sign of Sqrt(z-g) for each solution");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRc[4]=",0,"! Whether solution is complex or real. True if complex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fQsc[4]=",0,"! The quality of the solution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fQs2[4]=",0,"! The quality of the solution with the other sign of Sqrt(z-g)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fDc[4]=",0,"! The 4 associated cosines");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fResidue=",0,"! Negativ if Solve() not yet called. Total error of solution if Solve() called");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGraph),-1,-1,2,"fGraphP=",0,"! Graph of eq. (E1) with + sign for Sqrt(z-g)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGraph),-1,-1,2,"fGraphM=",0,"! Graph of eq. (E1) with - sign for Sqrt(z-g)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,2,"fHRes=",0,"! Histogram of total error fResidue");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitWave */
static void G__setup_memvarTLitWave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave));
   { TLitWave *p; p=(TLitWave*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEva=",0,"True if wave evanescent");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_Sharing),-1,-1,2,"fShare=",0,"How this wave participates to process");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fPhases=",0,"Number of phases for this wave");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fRfI=",0,"Refraction index associated with this wave");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiel=",0,"Dielectric constant epsilon");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fCtht=",0,"cos of angle between k vector and normal to surface separating the 2 media. tht is the angle of incidence, reflection or transmission according to the kind of wave.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fStht=",0,"sin of angle between k vector and normal to surface separating the 2 media. tht is the angle of incidence, reflection or transmission according to the kind of wave.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAk=",0,"module of k vector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fUk=",0,"unit k vector in ICS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fVk=",0,"k vector in ICS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fE=",0,"module of electric field");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAE=",0,"absolute value of fE");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPE=",0,"phase of fE");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fSdel=",0,"sin of delta angle of electric field");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fCdel=",0,"cos of delta angle of electric field");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fAlm1=",0,"= Stht*Sdel + Ctht*Cdel");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fSalf=",0,"sin of alpha angle of electric field");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWsaf=",0,"absolute value of fSalf");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPsaf=",0,"phase of fSalf");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fCalf=",0,"cos of alpha angle of electric field");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWcaf=",0,"absolute value of fCalf");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPcaf=",0,"phase of fCalf");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fEf=",0,"electric field E in ICS [MKSA]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fEfn=",0,"E field normal to incident plane");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fEfp=",0,"E field inside the incident plane");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fBf=",0,"magnetic field B in ICS [MKSA]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fBfn=",0,"magnetic field associated with fEfn");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fBfp=",0,"magnetic field associated with fEfp");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fPg=",0,"Poyinting vector P in ICS [MKSA]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fPgn=",0,"Poyinting vector P in ICS [MKSA] associated with fEfn");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fPgp=",0,"Poyinting vector P in ICS [MKSA] associated with fEfp");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fUp=",0,"Unit Poyinting vector in ICS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fUpn=",0,"Unit Poyinting vector in ICS associated with fEfn");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fUpp=",0,"Unit Poyinting vector in ICS associated with fEfp");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitPhoton */
static void G__setup_memvarTLitPhoton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton));
   { TLitPhoton *p; p=(TLitPhoton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRun=",0,"run number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fKphot=",0,"photon number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fStartGeoVol=",0,"! TLitVolume from which photon starts");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fSourcePath=",0,"Path of the source of photon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fNode=",0,"! Current node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fGeoVolume=",0,"! TGeoVolume in which photon is");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fPath=",0,"! Current path");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fLitVolume=",0,"! TLitVolume in which photon is");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-1,2,"fLitDet=",0,"! Current instance of run specific detector if fLitVolume is a detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-1,2,"fLitDetG=",0,"! Current instance of global detector if fLitVolume is a detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMedium),-1,-1,2,"fGeoMedium=",0,"! Current TGeoMedium, TGeoMedium of fGeoVolume");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fLitMedium=",0,"! If fGeoMedium is a TLitMedium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fNextNode=",0,"! Possible next node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fNextGeoVolume=",0,"! Next TGeoVolume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNextPath=",0,"! Next path");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fNextLitVolume=",0,"! TLitVolume associated with fNextGeoVolume, if any");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-1,2,"fNextLitDet=",0,"! Next instance of run specific detector if fLitVolume is a detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-1,2,"fNextLitDetG=",0,"! Next instance of global detector if fLitVolume is a detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMedium),-1,-1,2,"fNextGeoMedium=",0,"! Next medium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fNextLitMedium=",0,"! Next medium if it is a TLitMedium, not a TGeoMedium");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fX0=",0,"! Location of photon in World Coordinates = current point");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fUpg=",0,"! Unit Poyinting vector in WCS = current direction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fNextPoint=",0,"! Possible next point of trajectory of photon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNextDist=",0,"! Distance to possible next point fNextPoint");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsOnBoundary=",0,"! True if on boundary and OnFace() has to be called");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fStopPoint=",0,"! Last point of trajectory of photon");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fPtg=",0,"! Poyinting vector [MKSA] in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCospk=",0,"! cosine of angle between Poyinting and k vector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fUk0=",0,"! unit k vector in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLengthInDet=",0,"! Length of path travelled in detector before stopping");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fVk0=",0,"! k vector in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAk0=",0,"! absolute value (module) of vector k in [cm-1]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fNc=",0,"! complex index of refraction, including absorption");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSl0=",0,"! space travelled by photon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStep=",0,"! Step to be done in tracking");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fT0=",0,"time elapsed since birth of photon or excitation in [ps]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPoints=",0,"Number of points on the trajectory of the photon");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPhtLive=",0,"true if photon not yet absorbed or detected");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPhtSeen=",0,"true if photon seen by detector");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBetween=",0,"true if photon between 2 TGeoVolume, none of which being a wrapping");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fOutPoly=",0,"VERIFIER QUE PAS INUTILE !true if photon out of shape");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPhtOut=",0,"true if photon is transmitted or absorbed, false if reflected.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPhtAbs=",0,"true if photon absorbed during transition process for instance on reflection on metal.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAnomaly=",0,"photon to be killed for abnormal reasons. Should never happen");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFromani=",0,"true if incident wave in anisotropic medium");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fChooseIndex=",0,"choice between n1 and n2 {0->random,1->biggest,2->smallest}");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSkl0=",0,"Sum over all k*l");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWaveLength=",0,"wavelength of photon in nanometers");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fW=",0,"frequency in ps-1");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEphot=",0,"energy of photon in joule [mksa]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fBI=",0,"(ni*mut)/(nt*mui)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fBR1=",0,"(nr1*mut)/(nt*mui)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fBR2=",0,"(nr2*mut)/(nt*mui)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fBT1=",0,"(nt1*mui)/(ni*mut)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fBT2=",0,"(nt2*mui)/(ni*mut)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsl0=",0,"abs. length for this photon.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsDiffus=",0,"true if there is diffusion inside this material");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiffusL=",0,"diffusion length");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbOfDiffusion=",0,"number of diffusions that occured for this photon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbOfRayleigh=",0,"number of diffusions that occured for this photon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbOfWLS=",0,"number of wavelength shifts that occured for this photon");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsRayleigh=",0,"true if there is Rayleigh scattering inside this material");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsWLS=",0,"true if the material is wavelength shifting");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsAbsorb=",0,"true if there is absorption inside this material");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRayleighL=",0,"Rayleigh Scattering length");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWLSL=",0,"Wavelength shifting length");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAef0=",0,"absolute value (module) of electric field E");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fEf0=",0,"electric field [MKSA] in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBeta=",0,"phase of linearly polarized photon (irrelevant)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fBf0=",0,"magnetic field [MKSA] in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSinThetaMax=",0,"Max. value for angle theta in diffusion");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fFN=",0,"normal to the face at the point fX0");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fFNd=",0,"normal to the face, tilted by depolish");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAnis0=",0,"anisotropic optical characteristics of material in which photon is");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAnia0=",0,"anisotropic absorption characteristics of material in which photon is");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmu0=",0,"magnetic permeability of material in which photon is");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fRfIndex0=",0,"refraction index, complex for convenience. Im always 0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiel0=",0,"diel. constant eps in case of isotropic material");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsDiag=",0,"the dielectric tensor in use is diagonal in ICS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,2,"fDzt0=",0,"dielectric tensor epsilon multiplied by mu in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33C),-1,-1,2,"fCDzt0=",0,"complex fDzt0, including absorption");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAnisi=",0,"anisotropic characteristics of material associated with the incident wave");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAniai=",0,"anisotropic absorption characteristics of material associated with the incident wave");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmui=",0,"magnetic permeability mu of material associated with the incident wave");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fRfIndexi=",0,"refraction index of material associated with the incident wave");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsDiagi=",0,"the dielectric tensor of the shape containing the incident wave is diagonal in ICS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,2,"fDzti=",0,"dielectric tensor epsilon multiplied by mu in WCS, ass. with the incident wave");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,2,"fDztii=",0,"idem fDzti in coordinate system of incidence (ICS)");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAnis1=",0,"anisotropic optical characteristics of destination material");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAnia1=",0,"anisotropic absorption characteristics of destination material");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmu1=",0,"magnetic permeability of destination material");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fRfIndex1=",0,"complex refraction index  of destination material");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiel1=",0,"diel. constant eps in case of isotropic destination material");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,2,"fDzt1=",0,"dielectric tensor epsilon multiplied by mu in WCS");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAnist=",0,"anisotropic characteristics of material associated with the transmitted wave");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAniat=",0,"anisotropic absorption characteristics of material associated with the transmitted wave");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmut=",0,"magnetic permeability of  of material associated with the transmitted wave");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TComplex),-1,-1,2,"fRfIndext=",0,"refraction index of material associated with the transmitted wave");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsDiagt=",0,"the dielectric tensor of the shape containing the transmitted wave is diagonal in ICS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,2,"fDztt=",0,"dielectric tensor epsilon multiplied by mu in WCS, ass. with the transmitted wave");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,2,"fDztti=",0,"idem fDztt in coordinate system of incidence (ICS)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fOx=",0,"Ox axis of the coordinate system of incidence in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fOy=",0,"Oy axis of the coordinate system of incidence in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fOz=",0,"Oz axis of the coordinate system of incidence in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,2,"fMn=",0,"matrix transforms a vector vi in ICS into a vector v in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,2,"fMt=",0,"matrix transforms a vector v in WCS into a vector vi in ICS. fMt is the transposed of fMn");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave),-1,-1,2,"fI=",0,"incident wave");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave),-1,-1,2,"fR1=",0,"1st reflected wave");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave),-1,-1,2,"fR2=",0,"2nd reflected wave. Does not exist in isotropic material.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave),-1,-1,2,"fT1=",0,"1st transmitted wave");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave),-1,-1,2,"fT2=",0,"2nd transmitted wave. Does not exist in isotropic material.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWeigth[8]=",0,"8 possible weigths");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_OpticalProcess),-1,-1,2,"fProcess=",0,"Optical process the photon will undergo next");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fToDraw=",0,"! True if current track is to be drawn");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVirtualGeoTrack),-1,-1,2,"fCurrentTrack=",0,"! Track to be drawn");
   G__memvar_setup((void*)(&TLitPhoton::fgNPointsMax),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"fgNPointsMax=",0,"Max nb. of interaction on photon trajectory");
   G__memvar_setup((void*)(&TLitPhoton::fgNphot),110,0,0,-1,G__defined_typename("Long64_t"),-2,1,"fgNphot=",0,"Total number of photons for all runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitHistParams */
static void G__setup_memvarTLitHistParams(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams));
   { TLitHistParams *p; p=(TLitHistParams*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TFile),-1,-2,2,"fgHistParams=",0,"Xml file containing histogram parameters");
   G__memvar_setup((void*)((long)(&p->fHKind)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,1,"fHKind=",0,"TH1C, TH1F, TH1D, TH2C, TH2F, TH2D, ... TGraphErrors");
   G__memvar_setup((void*)((long)(&p->fHName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,1,"fHName=",0,"Name of histogram or TGraph");
   G__memvar_setup((void*)((long)(&p->fHTitle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,1,"fHTitle=",0,"Title of histogram or TGraph");
   G__memvar_setup((void*)((long)(&p->fHNbinsx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fHNbinsx=",0,"Number of bins in x");
   G__memvar_setup((void*)((long)(&p->fHXlow)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fHXlow=",0,"Left of 1st bin in x");
   G__memvar_setup((void*)((long)(&p->fHXup)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fHXup=",0,"Right of last bin in x");
   G__memvar_setup((void*)((long)(&p->fHNbinsy)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fHNbinsy=",0,"Number of bins in y");
   G__memvar_setup((void*)((long)(&p->fHYlow)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fHYlow=",0,"Left of 1st bin in y");
   G__memvar_setup((void*)((long)(&p->fHYup)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fHYup=",0,"Right of last bin in y");
   G__memvar_setup((void*)(&TLitHistParams::fgHistParamsOk),103,0,0,-1,G__defined_typename("Bool_t"),-2,1,"fgHistParamsOk=",0,"True if xml file has been found");
   G__memvar_setup((void*)(&TLitHistParams::fgListHParams),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-2,1,"fgListHParams=",0,"Collection of histogram parameters to be saved into xml file");
   G__memvar_setup((void*)(&TLitHistParams::fgFileName),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-2,1,"fgFileName=",0,"Name or TreeName of xml file containing histogram parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitPhys */
static void G__setup_memvarTLitPhys(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhys));
   { TLitPhys *p; p=(TLitPhys*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fC=",0,"speed of light in cm/picoseconds");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCcmps=",0,"speed of light in cm/seconds");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCmks=",0,"speed of light in m/s");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fE=",0,"electron charge in esu");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMe=",0,"Mass of electron in Mev/c2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeg=",0,"Mass of electron in gram");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR02=",0,"= 1.0e+24*((fE*fE)/(fMeg*fCcmps*fCcmps))^2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHbar=",0,"Planck hbar in Joule*s");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAlpha=",0,"fine structure constant");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEps0=",0,"epsilon0 \"influence constant\" [ A s ] / [ V M ]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAvogadro=",0,"Avogadro's number in molecules/kmole");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAvoDivE26=",0,"Avogadro's number in molecules/kmole divided by 1.0e+26");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVphot=",0,"arbitrary volume [m3 ] in which we choose that the energy of the photon is hbar*w. We take 1mm3");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTooLate=",0,"Time (ps) after which photon is considered too late");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fThreshe=",0,"minimal number of e- emitted by APD to accept photon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxAnomal=",0,"maximal number of abnormal photons accepted");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinWaveL=",0,"Minimum possible value for wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxWaveL=",0,"Maximum possible value for wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBiggestStep=",0,"Biggest possible step in tracking. Set it to the biggest distance in your geometry.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhys),-1,-2,4,"fgLitPhys=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitTrap */
static void G__setup_memvarTLitTrap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap));
   { TLitTrap *p; p=(TLitTrap*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDz=",0,"half length in z but in double precision.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"half length in x but in double precision. DEGREE");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"half length in y but in double precision. DEGREE");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fH1=",0,"half length in y at low z");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBl1=",0,"half length in x at low z and y low edge");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTl1=",0,"half length in x at low z and y high edge");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAlpha1=",0,"angle w.r.t. the y axis.  DEGREE");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fH2=",0,"half length in y at high z");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBl2=",0,"half length in x at high z and y low edge");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTl2=",0,"half length in x at high z and y high edge");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAlpha2=",0,"angle w.r.t. the y axis.  DEGREE");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fGCenter=",0,"Center of shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fV0=",0,"point 0 of the TLitTrap");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fV1=",0,"point 1 of the TLitTrap");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fV2=",0,"point 2 of the TLitTrap");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fV3=",0,"point 3 of the TLitTrap");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fV4=",0,"point 4 of the TLitTrap");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fV5=",0,"point 5 of the TLitTrap");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fV6=",0,"point 6 of the TLitTrap");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fV7=",0,"point 7 of the TLitTrap");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitSpectrumCp */
static void G__setup_memvarTLitSpectrumCp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp));
   { TLitSpectrumCp *p; p=(TLitSpectrumCp*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGaussAmpNN=",0,"Un-normalized amplitude of this gaussian component as issued by fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGaussAmp=",0,"Normalized amplitude of this gaussian component [Sum of all fGaussAmp of all components is 1]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGaussMean=",0,"Mean value of this gaussian component");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGaussSigma=",0,"Sigma value of this gaussian component");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fNormalized=",0,"True if time components are normalized [fTimeWeight and fArea defined]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbTimes=",0,"Number of time components associated with this gaussian component");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeWeightNN=",0,"[fNbTimes] not normalized weight of this time component");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeWeight=",0,"[fNbTimes] normalized weight of this time component");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDecayTime=",0,"[fNbTimes] Decay time of this component in nanosecond");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRiseTime=",0,"[fNbTimes] Rise time of this component in nanosecond, if any. If no rise time == -1.0");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fArea=",0,"[fNbTimes] Area from 0 to 1 to help to select randomly which time component");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitSpectrum */
static void G__setup_memvarTLitSpectrum(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum));
   { TLitSpectrum *p; p=(TLitSpectrum*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fNormalized=",0,"True if sum of amplitudes of components, TLitSpectrumCp::fGaussAmp, is 1");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fInSplineFitDB=",0,"The spectrum to be decomposed into gaussians exists in SplineFitDB.rdb");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbComponents=",0,"Nb. of TLitSpectrumCp components in fComponents");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fArea=",0,"[fNbComponents] Area of values of normalized amplitudes of components, helping in the random choice of which component will emit photon");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-1,2,"fComponents=",0,"Collection of gaussian components");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fDate=",0,"Date of creation of this spectrum");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fSource=",0,"Source of the measurements");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fMacro=",0,"Name of CINT macro producing this spectrum");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fXLabel=",0,"Label of the x axis");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fVLabel=",0,"Label of the value axis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fSplineFit=",0,"! Pointer to the SplineFit showing the spectrum if it exists");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fgNextDraw=",0,"Next fit to be drawn");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TFile),-1,-2,2,"fgSpectrumFile=",0,"\"Database\" file containing optical emission spectra");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TTree),-1,-2,2,"fgSpectrumTree=",0,"Tree of spectra");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TBranch),-1,-2,2,"fgSpectrumBranch=",0,"Branch of spectra");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-2,2,"fgFileName=",0,"Name or TreeName of \"database\" file containing spectra");
   G__memvar_setup((void*)((long)(&p->fComment)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,1,"fComment[10]=",0,"A comment of maximum 10 lines can be stored with this spectrum");
   G__memvar_setup((void*)((long)(&p->fFitGraph)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGraph),-1,-1,1,"fFitGraph=",0,"! Graph of the fitted spectrum");
   G__memvar_setup((void*)((long)(&p->fH)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fH=",0,"! Histo to show spectrum and gaussian fit on spectrum");
   G__memvar_setup((void*)((long)(&p->fPM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TPolyMarker),-1,-1,1,"fPM=",0,"! Polymarker to show where the peaks are");
   G__memvar_setup((void*)(&TLitSpectrum::fgSpectra),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-2,1,"fgSpectra=",0,"Collection of all TLitSpectrum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitDetector */
static void G__setup_memvarTLitDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector));
   { TLitDetector *p; p=(TLitDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fName=",0,"Name of detector == path in geometry");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fGlob=",0,"Bit infos. See class description");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNbHistos=",0,"Number of histograms or graphs to be plotted");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNbSumHist=",0,"Number of summary (abscissa depending upon run) histograms to be plotted");
   G__memvar_setup((void*)(&TLitDetector::fgMemForDet),105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_LitMemForDet),-1,-2,1,"fgMemForDet=",0,"To control memory used by histograms");
   G__memvar_setup((void*)(&TLitDetector::fgMaxCatAn),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fgMaxCatAn=",0,"Maximum possible distance from cathode to anode for an APD in cm");
   G__memvar_setup((void*)(&TLitDetector::fgLitDetGlob),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-2,1,"fgLitDetGlob=",0,"List of all TLitDetector with fGlob = true");
   G__memvar_setup((void*)(&TLitDetector::fgLitDetRun),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-2,1,"fgLitDetRun=",0,"List of all TLitDetector with fGlob = false");
   G__memvar_setup((void*)(&TLitDetector::fgLastUsedDet),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-2,1,"fgLastUsedDet=",0,"Last used run specific detector");
   G__memvar_setup((void*)(&TLitDetector::fgLastUsedDetG),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-2,1,"fgLastUsedDetG=",0,"Last used global detector");
   G__memvar_setup((void*)(&TLitDetector::fgMaxHist),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"fgMaxHist=",0,"Maximum number of possible histos");
   G__memvar_setup((void*)((long)(&p->fNpSeen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpSeen=",0,"Nb. of photons seen by this volume detector");
   G__memvar_setup((void*)((long)(&p->fNpLossAny)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpLossAny=",0,"Nb. of photons lost by this detector for ANY reason");
   G__memvar_setup((void*)((long)(&p->fNpLossAng)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpLossAng=",0,"Lost by this detector because of acceptance angle");
   G__memvar_setup((void*)((long)(&p->fNpLossQE)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpLossQE=",0,"Lost by this detector because of quantum efficiency");
   G__memvar_setup((void*)((long)(&p->fHTimeSeen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1),-1,-1,1,"fHTimeSeen=",0,"(1) - time of arrival of photons accepted by this detector");
   G__memvar_setup((void*)((long)(&p->fHWvlgthSeen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1),-1,-1,1,"fHWvlgthSeen=",0,"(2) - wave length of all photons seen by this detector");
   G__memvar_setup((void*)((long)(&p->fHWvlgthNot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1),-1,-1,1,"fHWvlgthNot=",0,"(3) - wave length of all photons lost by this detector");
   G__memvar_setup((void*)((long)(&p->fHQEff)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1),-1,-1,1,"fHQEff=",0,"(4) - Quantum efficiency of detector (+1 if inside and ok in test of QE). At the end, divided by FHInside");
   G__memvar_setup((void*)((long)(&p->fHInside)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1),-1,-1,1,"fHInside=",0,"(5) - Nb. of photons inside detector (detected or not) versus wavelength");
   G__memvar_setup((void*)((long)(&p->fHDepth)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1),-1,-1,1,"fHDepth=",0,"(6) - Depth of end point of photon inside volume detector");
   G__memvar_setup((void*)((long)(&p->fHXYEntrance)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH2),-1,-1,1,"fHXYEntrance=",0,"(7) - Projection on entrance face of end point of photon");
   G__memvar_setup((void*)((long)(&p->fHEfficiency)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1),-1,-1,1,"fHEfficiency=",0,"(1) - Efficiency as a function of run. Only if fGlob.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitSellmeier */
static void G__setup_memvarTLitSellmeier(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier));
   { TLitSellmeier *p; p=(TLitSellmeier*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"Number of resonant frequencies in the LitSellmeier law");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNs0=",0,"1st numerator term, associated with wavelength 0.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TArrayD),-1,-1,2,"fNsi=",0,"All numerator terms, associated with wavelength fLsi.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TArrayD),-1,-1,2,"fLsi=",0,"The resonant wavelengths");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitMedium */
static void G__setup_memvarTLitMedium(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   { TLitMedium *p; p=(TLitMedium*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,2,"fgMinimalGap=",0,"minimal difference between epsa,epsb,epsc");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_KindOfMedium),-1,-1,2,"fKind=",0,"medium is for normal tracking medium, or for wrapping or for thin slice.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMatCounter=",0,"counter of materials");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRevCounter=",0,"counter of wrappings");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fChecked=",0,"medium is correctly defined (method CheckIt has been called)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSensible=",0,"true if the medium is able to detect photons");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAniAbsL=",0,"0 ==> abs. L. isotropic   1 ==> La != Lb  = Lc   2 ==> La  = Lb != Lc   3 ==> la != Lb != Lc");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFacAbsL=",0,"Factor by which all absorption length are multiplied after having been obtained from fit (default=1.0)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsLa=",0,"value of absorption length associated with fEpsa or isotropic absorption length when fAniAbsL = 0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhimua=",0,"imaginary part of fEpsa multiplied by fMu");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameAbsLa=",0,"name of the fit giving fAbsLa as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitAbsLa=",0,"pointer to the fit for fAbsLa. Not used in case OpticWrapping");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsLb=",0,"value of absorption length associated with fEpsb");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhimub=",0,"imaginary part of fEpsb multiplied by fMu");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameAbsLb=",0,"name of the fit giving fAbsLb as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitAbsLb=",0,"pointer to the fit for fAbsLb");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsLc=",0,"value of absorption length associated with fEpsc");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhimuc=",0,"imaginary part of fEpsc multiplied by fMu");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameAbsLc=",0,"name of the fit giving fAbsLc as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitAbsLc=",0,"pointer to the fit for fAbsLc");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHasAbsorption=",0,"True if material has absorption");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHasDiffusion=",0,"True if material has istropic scattering defined");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHasRayleigh=",0,"True if material has Rayleigh scattering defined");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFacDiffus=",0,"if >0, factor which gives Diffusion length when multiplied by absorption length");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiffusLength=",0,"Actual value of diffusion length");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameDiffusL=",0,"name of the fit giving fDiffusLength as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitDiffusL=",0,"pointer to the fit giving fDiffusLength as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRayleighLength=",0,"Actual value of Rayleigh scattering length");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameRayleighL=",0,"name of the fit giving fRayleighLength as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitRayleighL=",0,"pointer to the fit giving fRayleighLength as a function of wavelength");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAnisotropic=",0,"0 isotrop 1 neg bir 2 pos bir 3 birefringent");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fIndex=",0,"OpticMedium ==> Index of refraction of medium.  OpticWrapping ==> Index of refraction of slice of material between wrapping and wrapped,  OpticThinSlice ==> index of refraction of thin slice");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_MethodUsed),-1,-1,2,"fIndexM=",0,"method used for calculating the index of refraction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier),-1,-1,2,"fIndexS=",0,"pointer to Sellmeier formula for index");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameIndex=",0,"name of the fit giving the index of refraction as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitIndex=",0,"pointer to the fit for index of refraction as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMu=",0,"Magnetic permeability mu of medium if not wrapping, of slice if wrapping");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameMu=",0,"name of the fit giving the magnetic permeability mu as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitMu=",0,"pointer to the fit for magnetic permeability mu as a function of wavelength");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMuFound=",0,"Fit for Mu or value for mu found;");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEpsa=",0,"Epsa : 1st diagonal element of dielectric tensor in the system where it is diagonal. Epsa <= Epsb <= Epsc");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_MethodUsed),-1,-1,2,"fEpsaM=",0,"method used for calculating fEpsa");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier),-1,-1,2,"fEpsaS=",0,"pointer to Sellmeier formula for Epsa");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameEpsa=",0,"name of the fit giving the 1st diagonal element Epsa as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitEpsa=",0,"Fit for fEpsa as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEpsb=",0,"Epsb : 2nd diagonal element of dielectric tensor in the system where it is diagonal. Epsa <= Epsb <= Epsc");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_MethodUsed),-1,-1,2,"fEpsbM=",0,"method used for calculating fEpsb");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier),-1,-1,2,"fEpsbS=",0,"pointer to Sellmeier formula for Epsb");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameEpsb=",0,"name of the fit giving the 2nd diagonal element Epsb as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitEpsb=",0,"Fit for fEpsb as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEpsc=",0,"Epsc : 3rd diagonal element of dielectric tensor in the system where it is diagonal. Epsa <= Epsb <= Epsc");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_MethodUsed),-1,-1,2,"fEpscM=",0,"method used for calculating fEpsc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier),-1,-1,2,"fEpscS=",0,"pointer to Sellmeier formula for Epsc");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameEpsc=",0,"name of the fit giving the 3rd diagonal element Epsc as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitEpsc=",0,"Fit for fEpsc as a function of wavelength");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_dEdxMethod),-1,-1,2,"fdEdxUsed=",0,"this medium is optically activ when crossed by particle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNamedEdx=",0,"name of the family of fits containing all distributions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbdEdx=",0,"Nb. of elements in the family fDeposi, if fDeposit is a family");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fDeposit=",0,"Fit giving deposited energy in 1 cm versus energy of particle when no Landau fluctuations");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotMev=",0,"Number of photons emitted per deposited Mev of energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fResolutionScale=",0,"Scaling of resolution on fPhotMev to allow for effects due to the Fano factor and intrinsic broadening of resolution due to non-homogeneity.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum),-1,-1,2,"fLitSpectrum=",0,"Emission spectrum [wavelength and times] of this material");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHistFluo=",0,"histogrammation required for fluorescence of this medium");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRm=",0,"Moliere's radius in cm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEc=",0,"Critical energy  in Mev");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitNPLY=",0,"SplineFit for the data on the non-proportionality of the light yield. Nb. of photons as a function of deposited energy");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHasNPLY=",0,"Is the material defined as being non-proportional");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameNPLY=",0,"Name of the fit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitPE=",0,"Fit giving photo-electric cross section for a photon of energy MeV");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPEOk=",0,"Has the PE been initialised");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNamePE=",0,"Name of the PE fit");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHasWLS=",0,"True if material is wavelength shifting");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum),-1,-1,2,"fWLSSpectrum=",0,"Wavelength shifted spectrum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWLSL=",0,"WLS Absorption length");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameWLSL=",0,"name of the fit fFitWLSL");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitWLSL=",0,"Fit for absorption length for wavelength shifting as a function of wavelength");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCanStopElectron=",0,"Compton electron properties");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEP[6]=",0,"Material properties necessary to calculate electron ionisation dE/dX");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fWrapIsSlice=",0,"True if there is a slice of material between the face of the shape and the wrapping");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWrapDiffus=",0,"Proportion of diffusion when fixed (not varying with wavelength)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fWrapNameDiffus=",0,"Name of the fit giving the proportion of light diffused as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fWrapFitDiffus=",0,"Fit giving the proportion of light diffused for wrapping as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWrapRindex=",0,"Real part of index of refraction when fixed (not varying with wavelength)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fWrapNameRindex=",0,"Name of the fit giving the real part of the index of refraction of the wrapping as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fWrapFitRindex=",0,"Fit giving the real part of index of refraction of wrapping as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWrapIindex=",0,"Imaginary part of index of refraction when fixed (not varying with wavelength)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fWrapNameIindex=",0,"Name of the fit giving the imaginary part of the index of refraction of the wrapping as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fWrapFitIindex=",0,"Fit giving the imaginary part of index of refraction of wrapping as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWrapMu=",0,"Magnetic permeability mu when fixed (not varying with wavelength)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fWrapNameMu=",0,"Name of the fit giving the magnetic permeability mu of the wrapping as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fWrapFitMu=",0,"Fit giving the magnetic permeability mu of wrapping as a function of wavelength");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fWrapAbsorbing=",0,"o : no supplementary absorption.  1 : some suppl. abs.   2 : wrapping 100% absorbing");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWrapSupplAbs=",0,"[0..1] supplementary absorption, (f.e. : dust). Default 0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWrapSinThetaMax=",0,"sinus of the 9th argument of the constructors.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTSThinSlice=",0,"True if possible thin slice");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fTSNextMed=",0,"TLitMedium after the thin slice. If an other one, no thin slice!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTSWidth=",0,"True width of thin slice in cm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTSIndex=",0,"Fixed index of refraction of thin slice if fTSFitIndex == 0");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fTSNameIndex=",0,"Name of fit of type TSplineFit giving index of refraction of thin slice as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fTSFitIndex=",0,"Fit giving index of refraction of thin slice as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTSMu=",0,"Fixed magnetic permeability of thin slice if fTSFitMu == 0");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fTSNameMu=",0,"Name of fit of type TSplineFit giving magnetic permeability mu of thin slice as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fTSFitMu=",0,"Fit giving magnetic permeability mu of thin slice as a function of wavelength");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDPLIsDepol=",0,"True if possible depolish with fDPLNextMed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fDPLNextMed=",0,"In contact with fDPLNextMed, this generates depolish");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDPLTheta=",0,"Angle of depolish [0-90](roughness of surface)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDPLCosTheta=",0,"Cos(fDPLTheta)");
   G__memvar_setup((void*)(&TLitMedium::fgOldWavelength),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fgOldWavelength=",0,"old value of wavelength");
   G__memvar_setup((void*)(&TLitMedium::fgMinWaveL),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fgMinWaveL=",0,"minimal value for a wavelength");
   G__memvar_setup((void*)(&TLitMedium::fgMaxWaveL),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fgMaxWaveL=",0,"maximal value for a wavelength");
   G__memvar_setup((void*)(&TLitMedium::fgCerWaveL),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fgCerWaveL=",0,"wavelength to use for n used in Cerenkov formulae");
   G__memvar_setup((void*)(&TLitMedium::fgLitMedium),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-2,1,"fgLitMedium=",0,"list of all TLitMedium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitVolume */
static void G__setup_memvarTLitVolume(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume));
   { TLitVolume *p; p=(TLitVolume*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fGeoVolume=",0,"! TGeoVolume associated with this TLitVolume at creation");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fLitMedium=",0,"! TLitMedium assiciated with fGeoVolume");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fWCSdone=",0,"! True if calculation of points and vectors in WCS done");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStepping=",0,"If true, stepping required in this medium, else jump to next volume");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStep=",0,"Step required in this medium. If <=0 jump to next volume");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAnisotropic=",0,"0 isotrop 1 neg bir 2 pos bir 3 birefringent");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fAniAbsL=",0,"0 ==> abs. L. isotropic 1 ==> La != Lb = Lc  2 ==> La = Lb != Lc  3 ==> la != Lb != Lc");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDielChange=",0,"true if dielectric tensor depends upon wavelength.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAniOx=",0,"Fixed x axis of dielectric tensor in LOCAL coordinates of associated TGeoVolume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAniOy=",0,"Fixed y axis of dielectric tensor in LOCAL coordinates of associated TGeoVolume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAniOz=",0,"Fixed z axis of dielectric tensor in LOCAL coordinates of associated TGeoVolume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSAniOx=",0,"! Transient value in WCS of fAniOx, valid for the instance of this TGeoVolume where the current track is.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSAniOy=",0,"! Transient value in WCS of fAniOy, valid for the instance of this TGeoVolume where the current track is.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSAniOz=",0,"! Transient value in WCS of fAniOz, valid for the instance of this TGeoVolume where the current track is.");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDet),-1,-1,2,"fDetKind=",0,"{none,gendet,phototube,apd}");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fEntrance=",0,"If (0,1,2,3,4,5) entrance face and fXYZEntrance is a point on this entrance face. If -1, no entrance face");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEx=",0,"1st semi-dimension of entrance window, if any");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEy=",0,"2nd semi-dimension of entrance window, if any");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEz=",0,"Semidepth behind entrance window, if any");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStopAlways=",0,"false: photon only stops inside the TGeoVolume because of its finite absorption length.  true: photon reaching this TGeoVolume always stops in the TGeoVolume");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsQE=",0,"true if there is a quantum efficiency");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameQE=",0,"name of the fit (TSplineFit) giving quantum efficiency as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fQE=",0,"Value of fFitQE for a given wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitQE=",0,"! pointer to this fit for volume detectors and APD only");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsAccept=",0,"true if there is a condition on entrance angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCosAccept=",0,"cosine of max acceptance angle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fDetAxis=",0,"axis with respect to which entrance angle of photon has to be calculated");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAPDThreshold=",0,"If nb. of e- emitted by APD > fAPDThreshold, photon considered as detected");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVDrifte=",0,"drift velocity of electrons inside APD in cm/s");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameGP=",0,"name of the fit giving gain profile of the APD");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fGP=",0,"! pointer to this fit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fXYZEntrance=",0,"Point on the entrance face if there is one. For an APD, the cathode");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSEntrance=",0,"! Transient value in WCS of fXYZEntrance");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDistCatAn=",0,"distance from cathode to anode in cm.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDamage=",0,"true if depth dependent damage");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fDamAxis=",0,"axis of damage");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fDamStart=",0,"starting point of damage");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSDamAxis=",0,"! Transient value in WCS of axis of damage");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSDamStart=",0,"! Transient value in WCS of starting point of damage");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamKimax=",0,"Kimax 1/Li(z,r,l) at the point where Li(z,r,l) is minimal, i.e. where damages are maximal");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fDamFitKimax=",0,"! Fit giving Kimax as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamFmax=",0,"fmax: value of damage distribution f(z,r) where it is maximal");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamStep=",0,"steps [cm] for calculating absorption");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamSupFac=",0,"supplementary constant factor by which Ki(lambda) can be multiplied [default 1]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH2D),-1,-1,2,"fHDamage=",0,"histogram recording 1 - damage factor.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamZm=",0,"mean of gaussian  in z representing damages f(z,r)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamZs=",0,"sigma of gaussian in z representing damages f(z,r)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamRs=",0,"sigma of gaussian in r representing damages f(z,r)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamGz=",0,"value at a given depth of g(z): the z distribution provided by the user.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamGzMax=",0,"maximum value taken by g(z)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fDamFitGz=",0,"! fit giving g(z)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDamByShower=",0,"damages have been caused by showers. ShowerDamage() has been called, not RadiationDamage()");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamE0=",0,"energy in Mev of the showers having caused damage");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDamGamma=",0,"true if damages caused by gammas. If false, damages caused by electrons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamA=",0,"a of ShowerDamage");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRk2=",0,"K^2 of the r distribution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDamFac=",0,"constant factor in front of dependent factor in f(z,r)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEmitPhoton=",0,"True if photons can be emitted from the TGeoVolume associated with this TLitVolume");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist),-1,-1,2,"fKindOfEmission=",0,"Kind of distribution for the direction of emission of photon");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fPath=",0,"! Transient path for the instance [node] of the TLitVolume actally in use");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSourceFixed=",0,"If true, all photons are emitted from the fixed point source inside shape. Default false");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fSourcePoint=",0,"Actual point of emission of photon in local coordinate of shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSSourcePoint=",0,"! fSourcePoint in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisDir=",0,"Axis around which photons are generated in local coordinates of the shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fSourceDir=",0,"Actual direction of emission of photon in local coordinate of shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSSourceDir=",0,"! fSourceDir in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaMax=",0,"Maximum theta angle around fSourceDir in radian");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitDist=",0,"TSplineFit to be used in case fKindOfEmission == provided");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFromFace=",0,"If true, emission from face of TGeoVolume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fDirFace=",0,"Direction to take to reach face, in LCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSDirFace=",0,"! Idem fDirFace in WCS");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_ChoiceOfn),-1,-1,2,"fChooseIndex=",0,"Chooses between the 2 possible values of index in case of anisotropy");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fE=",0,"! Generated direction for the E field in LCS of the TGeoVolume associated with this TLitVolume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSE=",0,"! fE  in World Coordinate System");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPolarized=",0,"True if photon linearly polarized at emission");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fPolar=",0,"Direction of polarization for the E field in LCS of the TGeoVolume associated with this TLitVolume");
   G__memvar_setup((void*)((long)(&p->fM)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,1,"fM=",0,"! Transient value in WCS of Rot. matrix which transforms Ox(WCS) to Ox'(DTS). DTS = Dielectric tensor system");
   G__memvar_setup((void*)((long)(&p->fMt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,1,"fMt=",0,"! Transient value in WCS of transposed of Rot. matrix which transforms  E(WCS) to  E'(DTS). DTS = Dielectric tensor system. fMt is the transpose matrix of fM.");
   G__memvar_setup((void*)((long)(&p->fDTmu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33),-1,-1,1,"fDTmu=",0,"! Transient value in WCS of dielectric tensor MULTIPLIED BY MAGNETIC PERMEABILITY");
   G__memvar_setup((void*)((long)(&p->fCDTmu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TMat33C),-1,-1,1,"fCDTmu=",0,"! Transient value in WCS of complex fDTmu to calculate complex index of wave");
   G__memvar_setup((void*)(&TLitVolume::fgLitVolume),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-2,1,"fgLitVolume=",0,"List of all TLitVolume");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLit */
static void G__setup_memvarTLit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLit));
   { TLit *p; p=(TLit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fTestCalc=",0,"if true, many checks to calculations");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-2,4,"fgSize=",0,"Size of main canvas of TwoPadDisplay [ 1 <= size <= 8 ]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgNbButtons=",0,"Number of buttons wanted in TwoPadDisplay");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgTopXGen=",0,"Top x  of general canvas fCanvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgTopYGen=",0,"Top y  of general canvas fCanvas");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgWithDate=",0,"if true, date and time are appended to the name of the ROOT file and of the listing");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-2,4,"fgDate=",0,"Date when program runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-2,4,"fgTime=",0,"Time when program runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-2,4,"fgDateTime=",0,"Date and Time when program runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-2,4,"fgRootFileName=",0,"Name of .root file created by SLitrani");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-2,4,"fgListFileName=",0,"Name of .lis  file created by SLitrani");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-2,4,"fgLineSize=",0,"Length of line in output and listing. Default 119 char");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLit),-1,-2,4,"fgLit=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRef)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TReference),-1,-1,1,"fRef=",0,"Reference of program");
   G__memvar_setup((void*)((long)(&p->fBTRchanged)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fBTRchanged=",0,"True if default comments have been changed");
   G__memvar_setup((void*)((long)(&p->fTRComment)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,1,"fTRComment=",0,"Comment appearing at top right of main canvas");
   G__memvar_setup((void*)((long)(&p->fBRComment)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,1,"fBRComment=",0,"Comment appearing at bottom right of main canvas");
   G__memvar_setup((void*)((long)(&p->fSaveFitSpec)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSaveFitSpec=",0,"If true, TSplinefit fits used and TLitSpectrum spectra used are saved on root file. Default");
   G__memvar_setup((void*)((long)(&p->fLitFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TFile),-1,-1,1,"fLitFile=",0,".root file created by SLitrani");
   G__memvar_setup((void*)((long)(&p->fLitBufSize)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fLitBufSize=",0,"buffer size of file");
   G__memvar_setup((void*)((long)(&p->fLitNb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fLitNb=",0,"pointer on actual size of file");
   G__memvar_setup((void*)((long)(&p->fLitTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TTree),-1,-1,1,"fLitTree=",0,"tree of histos and statistics for each run.");
   G__memvar_setup((void*)((long)(&p->fLitBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TBranch),-1,-1,1,"fLitBranch=",0,"branch of tree");
   G__memvar_setup((void*)((long)(&p->fNFits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNFits=",0,"Number of fits in fFitColl");
   G__memvar_setup((void*)((long)(&p->fKFit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fKFit=",0,"Counter of fits drawn");
   G__memvar_setup((void*)((long)(&p->fFitColl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-1,1,"fFitColl=",0,"Collection of fits");
   G__memvar_setup((void*)((long)(&p->fNSpecs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNSpecs=",0,"Number of spectra in fSpecColl");
   G__memvar_setup((void*)((long)(&p->fKSpec)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fKSpec=",0,"Counter of spectra drawn");
   G__memvar_setup((void*)((long)(&p->fSpecColl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-1,1,"fSpecColl=",0,"Collection of spectra");
   G__memvar_setup((void*)((long)(&p->fFilesClosed)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fFilesClosed=",0,"True if summary files have been closed");
   G__memvar_setup((void*)((long)(&p->fStatItems)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fStatItems=",0,"Must be set equal to 17, dimension of fS...Def[]");
   G__memvar_setup((void*)((long)(&p->fSShortDef)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,1,"fSShortDef[18]=",0,"Summary statistics of photons. Short definitions");
   G__memvar_setup((void*)((long)(&p->fSLongDef)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,1,"fSLongDef[18]=",0,"Summary statistics of photons. Full definitions");
   G__memvar_setup((void*)((long)(&p->fSeen)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSeen=",0,"true if photon seen");
   G__memvar_setup((void*)((long)(&p->fX0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fX0=",0,"x coordinate of death of seen photons in WCS");
   G__memvar_setup((void*)((long)(&p->fY0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fY0=",0,"y coordinate of death of seen photons in WCS");
   G__memvar_setup((void*)((long)(&p->fZ0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fZ0=",0,"z coordinate of death of seen photons in WCS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitResults */
static void G__setup_memvarTLitResults(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults));
   { TLitResults *p; p=(TLitResults*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRun=",0,"run number. If 0 : global statistics");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fConclusion=",0,"true only when Conclusion() has been called");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXparam=",0,"parameter to take as abscissa for TLitMarrow");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNfluo=",0,"Nb of components of fluorescence for material histogrammed");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fNbHistos=",0,"Number of histograms or graphs (not belonging to detectors) to be plotted");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-1,2,"fListOfDet=",0,"List of physical detectors with their histograms");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TPaveLabel),-1,-1,2,"fPavel=",0,"! Pave Label for the summary plot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TPaveText),-1,-1,2,"fPavet=",0,"! Pave Text for the summary plot");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fKN1=",0,"! histo to be plotted by N1()");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fKD1=",0,"! histo to be plotted by D1()");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fKDet=",0,"! Kth detector to be plotted");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdet=",0,"! Number of detectors");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNh=",0,"! Number of booked histos in detector");
   G__memvar_setup((void*)(&TLitResults::fgEnergyOfGamma),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fgEnergyOfGamma=",0,"Maximal energy of gammas defined in TLitGamma;");
   G__memvar_setup((void*)((long)(&p->fNpGener)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpGener=",0,"Nb. of photons generated");
   G__memvar_setup((void*)((long)(&p->fHPoints)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHPoints=",0,"( 0) - Nb. of points on photon trajectory");
   G__memvar_setup((void*)((long)(&p->fNpSeen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpSeen=",0,"Nb. of photons seen");
   G__memvar_setup((void*)((long)(&p->fPhweigth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPhweigth=",0,"(Photons arrived at detector with QE)*(Quantum Efficiency)");
   G__memvar_setup((void*)((long)(&p->fHTimeSeen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHTimeSeen=",0,"( 1) - time of arrival of detected photons on any detector");
   G__memvar_setup((void*)((long)(&p->fHDistSeen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHDistSeen=",0,"( 2) - distance travelled by photons seen in any detector");
   G__memvar_setup((void*)((long)(&p->fHWvlgthSeen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHWvlgthSeen=",0,"( 3) - Wavelength of photons seen");
   G__memvar_setup((void*)((long)(&p->fNpLossAny)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpLossAny=",0,"Nb. of photons lost for ANY reason");
   G__memvar_setup((void*)((long)(&p->fNpAbsMat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpAbsMat=",0,"Nb. of photons lost inside non-sensitive material");
   G__memvar_setup((void*)((long)(&p->fNpAbsBef)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpAbsBef=",0,"Nb. of photons absorbed before wrapping (supplementary absorption)");
   G__memvar_setup((void*)((long)(&p->fNpAbsRvt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpAbsRvt=",0,"Nb. of photons absorbed by wrapping");
   G__memvar_setup((void*)((long)(&p->fNpOutSide)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpOutSide=",0,"Nb. of photons lost because they leave the setup");
   G__memvar_setup((void*)((long)(&p->fNpAbnorm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpAbnorm=",0,"Nb. of photons lost for abnormal reasons");
   G__memvar_setup((void*)((long)(&p->fNpTooLate)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpTooLate=",0,"Nb. of photons lost because seen too late");
   G__memvar_setup((void*)((long)(&p->fNpTooFew)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpTooFew=",0,"photons lost because of too few electrons in APD");
   G__memvar_setup((void*)((long)(&p->fNpLossAng)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpLossAng=",0,"Lost because of acceptance angle");
   G__memvar_setup((void*)((long)(&p->fNpLossQE)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpLossQE=",0,"Lost because of quantum efficiency");
   G__memvar_setup((void*)((long)(&p->fNpAbsL0)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpAbsL0=",0,"Lost because user put a value of 0 for absorption length");
   G__memvar_setup((void*)((long)(&p->fHAbsAny)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHAbsAny=",0,"( 4) - distance travelled by photons lost anywhere");
   G__memvar_setup((void*)((long)(&p->fHAbsMat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHAbsMat=",0,"( 5) - Nb. of photons absorbed in various material");
   G__memvar_setup((void*)((long)(&p->fHAbsBef)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHAbsBef=",0,"( 6) - Nb. of photons absorbed before various wrappings");
   G__memvar_setup((void*)((long)(&p->fHAbsRvt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHAbsRvt=",0,"( 7) - Nb. of photons absorbed by various wrappings");
   G__memvar_setup((void*)((long)(&p->fHOutSide)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHOutSide=",0,"( 8) - distance travelled by photons leaving the setup");
   G__memvar_setup((void*)((long)(&p->fHAbnLost)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHAbnLost=",0,"( 9) - distance travelled by photons abnormally lost");
   G__memvar_setup((void*)((long)(&p->fHTooLate)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHTooLate=",0,"(10) - Wavelength of photons seen, but too late");
   G__memvar_setup((void*)((long)(&p->fHDiffusion)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHDiffusion=",0,"(11) - Number of diffusions done by photon");
   G__memvar_setup((void*)((long)(&p->fHTimeAll)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHTimeAll=",0,"(12) - generated time of emission, all components of fluorescence");
   G__memvar_setup((void*)((long)(&p->fHWvlgthAll)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHWvlgthAll=",0,"(13) - generated wavelength all components of fluorescence");
   G__memvar_setup((void*)((long)(&p->fHTimeCer)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHTimeCer=",0,"(14) - generated time of emission for Cerenkov photons");
   G__memvar_setup((void*)((long)(&p->fHWvlgthCer)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHWvlgthCer=",0,"(15) - generated wavelength for Cerenkov photons");
   G__memvar_setup((void*)((long)(&p->fHTimeEach)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH2F),-1,-1,1,"fHTimeEach=",0,"(16) - generated time of emission, each component of fluorescence");
   G__memvar_setup((void*)((long)(&p->fHWvlgthEach)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH2F),-1,-1,1,"fHWvlgthEach=",0,"(17) - generated wavelength each component of fluorescence");
   G__memvar_setup((void*)((long)(&p->fNbPart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNbPart=",0,"number of particles generated");
   G__memvar_setup((void*)((long)(&p->fHPMomentum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHPMomentum=",0,"(18) - momentum of generated particles");
   G__memvar_setup((void*)((long)(&p->fHPTheta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1D),-1,-1,1,"fHPTheta=",0,"(19) - theta distribution of generated particles");
   G__memvar_setup((void*)((long)(&p->fHEnergyInShape)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH2F),-1,-1,1,"fHEnergyInShape=",0,"(20) - Energy deposited in shape k by gamma");
   G__memvar_setup((void*)((long)(&p->fHMatMat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH2F),-1,-1,1,"fHMatMat=",0,"(21) - Transition from one material towards another material");
   G__memvar_setup((void*)((long)(&p->fHMatNot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH2F),-1,-1,1,"fHMatNot=",0,"(22) - Reflection from one material by another material");
   G__memvar_setup((void*)((long)(&p->fHMatRev)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH2F),-1,-1,1,"fHMatRev=",0,"(23) - Absorption by wrapping when coming from mat");
   G__memvar_setup((void*)((long)(&p->fHRevMat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH2F),-1,-1,1,"fHRevMat=",0,"(24) - Reflection by wrapping when coming from mat");
   G__memvar_setup((void*)(&TLitResults::fgResults),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray),-1,-2,1,"fgResults=",0,"List of all statistics of run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitMarrow */
static void G__setup_memvarTLitMarrow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow));
   { TLitMarrow *p; p=(TLitMarrow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fInMem=",0,"statistics is in memory.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fK=",0,"histogram to be drawn");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDet=",0,"number of detectors");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNHperDet=",0,"number of summary histogram per detector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbins=",0,"number of bins");
   G__memvar_setup((void*)((long)(&p->fHEfficiency)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHEfficiency=",0,"Efficiency per run");
   G__memvar_setup((void*)((long)(&p->fHAbsMat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHAbsMat=",0,"Photons lost inside non-sensitive material per run");
   G__memvar_setup((void*)((long)(&p->fHAbsBef)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHAbsBef=",0,"Photons absorbed before wrapping per run");
   G__memvar_setup((void*)((long)(&p->fHAbsRvt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHAbsRvt=",0,"Photons absorbed by wrapping per run");
   G__memvar_setup((void*)((long)(&p->fHOutSide)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHOutSide=",0,"Photons lost because they leave the setup per run");
   G__memvar_setup((void*)((long)(&p->fHAbnorm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHAbnorm=",0,"Photons lost for abnormal reasons per run");
   G__memvar_setup((void*)((long)(&p->fHTooLate)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHTooLate=",0,"Photons lost because seen too late per run");
   G__memvar_setup((void*)((long)(&p->fHTooFew)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHTooFew=",0,"Photons lost because of too few electrons in APD per run");
   G__memvar_setup((void*)((long)(&p->fHLossAng)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHLossAng=",0,"Lost because of acceptance angle per run");
   G__memvar_setup((void*)((long)(&p->fHLossQE)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,1,"fHLossQE=",0,"Lost because of quantum efficiency per run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitSpontan */
static void G__setup_memvarTLitSpontan(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan));
   { TLitSpontan *p; p=(TLitSpontan*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullName=",0,"Name + run number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullTitle=",0,"Title + run number");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMoving=",0,"True if photon cradle moving from run to run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCheckMove=",0,"True if chek for extrusion after move");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoPhysicalNode),-1,-1,2,"fGeoPhysNode=",0,"! TGeoPhysicalNode used when photon cradle has to be moved");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fStartGeoVol=",0,"! TGeoVolume acting as photon cradle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fStartLitVol=",0,"! TLitVolume associated with fStartGeoVol");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fLitMedium=",0,"! Medium of TGeoVolume associated with fStartLitVol");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fSourcePath=",0,"Path of the beam cradle of photons");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fWvlgthFixed=",0,"If true, wavelength fixed, not generated by material");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWvlgth=",0,"Value of wavelength");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRun=",0,"Run number");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRunStat=",0,"Ask for separate statistics and histograms for this run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fForgetLast=",0,"If false [default] statistics keeped from run to run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton),-1,-1,2,"fPhot=",0,"! pointer to generated photons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fT0=",0,"Start time of photon in picoseconds");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFillDeath=",0,"True if FillDeath has to be called");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,2,"fHX0=",0,"! histo of x coord of death point of seen photons, defined in CINT");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,2,"fHY0=",0,"! histo of y coord of death point of seen photons, defined in CINT");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,2,"fHZ0=",0,"! histo of z coord of death point of seen photons, defined in CINT");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDrawCode=",0,"! Track Nb of track to be drawn. If -1, no track to draw. If >1000000, all tracks to be drawn");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fTrackColor=",0,"! Color of track to be drawn [1-9]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRecordedTracks=",0,"! Counter of tracks recorded to be drawn");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTrackIndex=",0,"! Index of the newly created track to be recorded");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitranino */
static void G__setup_memvarTLitranino(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino));
   { TLitranino *p; p=(TLitranino*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullName=",0,"fName + run number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullTitle=",0,"fTitle + run number");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRunStat=",0,"Ask for separate statistics and histograms for this run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fForgetLast=",0,"If false [default] statistics keeped from run to run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fStartLitVol=",0,"TLitVolume from which litranino starts");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fSourcePath=",0,"Path of the source of litranino");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxLength=",0,"Maximum length that litranino can travel before dying");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRun=",0,"Run number (>=1)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPoints=",0,"Number of interaction points on the neutralino trajectory");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWaveLength=",0,"Wave length of litranino is chosen randomly between 300 and 800 nm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsLength=",0,"Absorption length valid for all TLitMedium for a litranino");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLengthInDet=",0,"! Length of path travelled in detector before stopping");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLengthMax=",0,"! Longest path length reached by litranino");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,"! Current length of the path of the litranino");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fT0=",0,"! Current time since birth of Litranino");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsOnBoundary=",0,"! True if on boundary and OnFace() has to be called");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fCurrentPoint=",0,"! Current point");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fCurrentDir=",0,"! Current direction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fStopPoint=",0,"! Last point of trajectory of litranino");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fFN=",0,"! Normal vector to the next crossed surface at crossing point");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStep=",0,"! Step to be done in tracking");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSafety=",0,"! Safe distance");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEntering=",0,"! True if the current track will enter inside some daughter of the current volume");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPhtLive=",0,"! True while litranino living");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAnomaly=",0,"! True if anomaly encountered, killing the neutralino is necessary");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fNode=",0,"! Current node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fGeoVolume=",0,"! Current volume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fPath=",0,"! Current path");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fLitVolume=",0,"! TLitVolume associated with fGeoVolume, if any");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-1,2,"fLitDet=",0,"! Current instance of run specific detector if fLitVolume is a detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-1,2,"fLitDetG=",0,"! Current instance of global detector if fLitVolume is a detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMedium),-1,-1,2,"fGeoMedium=",0,"! Current medium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fLitMedium=",0,"! Current medium if it is a TLitMedium, not a TGeoMedium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fNextNode=",0,"! Possible next node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fNextGeoVolume=",0,"! Next volume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNextPath=",0,"! Next path");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fNextLitVolume=",0,"! TLitVolume associated with fNextGeoVolume, if any");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-1,2,"fNextLitDet=",0,"! Next instance of run specific detector if fLitVolume is a detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector),-1,-1,2,"fNextLitDetG=",0,"! Next instance of global detector if fLitVolume is a detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMedium),-1,-1,2,"fNextGeoMedium=",0,"! Next medium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fNextLitMedium=",0,"! Next medium if it is a TLitMedium, not a TGeoMedium");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTrackNb=",0,"! Track Nb of track to be drawn. If -1, no track to draw. If >1000000, all tracks to be drawn");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRecordedTracks=",0,"! Counter of tracks recorded to be drawn");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fToDraw=",0,"! True if current track is to be drawn");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTrackIndex=",0,"! Index of the newly created track to be recorded");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVirtualGeoTrack),-1,-1,2,"fCurrentTrack=",0,"! Track to be drawn");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAnimateTracks=",0,"! If false, tracks only drawn. If true, tracks animated");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNframes=",0,"! Number of frames to be used for the animation");
   G__memvar_setup((void*)(&TLitranino::fgNPointsMax),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"fgNPointsMax=",0,"Max nb. of interaction on photon trajectory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitParticle */
static void G__setup_memvarTLitParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle));
   { TLitParticle *p; p=(TLitParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_PDistribution),-1,-1,2,"fPdist=",0,"Type of momentum distribution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmean=",0,"Mean momentum in Gev/c in case singlevalued or gaussian");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmin=",0,"Min. momentum in Gev/c, case straigth, gaussian or exponential");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmax=",0,"Max. momentum in Gev/c, case straigth, gaussian or exponential");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSig=",0,"Sigma of gaussian distribution in Gev/c");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSlope=",0,"Slope of exponential in [Gev/c]-1");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fExp1=",0,"1st constant in case {exponential}");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fD=",0,"Difference fExp1 - fExp2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fP=",0,"! Generated momentum [Gev/c]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBeta=",0,"! Beta = fP/fE of particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSpeed=",0,"! Speed of particle  [cm/picoseconds]");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEmitCerenkov=",0,"If true (default) particle will also emit Cerenkov light");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCerCos=",0,"Cosine of Cerenkov angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCerSin=",0,"Sine   of Cerenkov angle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCerNphot=",0,"Number of cerenkov photons emitted");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitBeam */
static void G__setup_memvarTLitBeam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam));
   { TLitBeam *p; p=(TLitBeam*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRun=",0,"Run number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullName=",0,"Name + run number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullTitle=",0,"Title + run number");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRunStat=",0,"Ask for separate statistics and histograms for this run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fForgetLast=",0,"If false [default] statistics keeped from run to run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle),-1,-1,2,"fParticle=",0,"Particle of the beam, with energy distribution");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMoving=",0,"True if beam cradle moving from run to run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCheckMove=",0,"True if chek for extrusion after move");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fSourcePath=",0,"Path of the beam cradle of particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoPhysicalNode),-1,-1,2,"fGeoPhysNode=",0,"! TGeoPhysicalNode used when beam cradle has to be moved");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fStartGeoVol=",0,"! TGeoVolume being the beam cradle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fStartLitVol=",0,"! TLitVolume perhaps associated with fStartGeoVol [not required]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fX=",0,"! Current coordinates of particle in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fDir=",0,"! Current direction of particle [in fact fixed!]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRoad=",0,"! Length of path travelled by particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,"! Time for particle to reach fX");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStep=",0,"! current step along particle trajectory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fNode=",0,"! Current node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fGeoVolume=",0,"! TGeoVolume in which particle is");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fPath=",0,"! Current path");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fLitVolume=",0,"! TLitVolume in which particle is");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMedium),-1,-1,2,"fGeoMedium=",0,"! Current TGeoMedium, TGeoMedium of fGeoVolume");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fLitMedium=",0,"! != 0 if fGeoMedium is a TLitMedium");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsdEdx=",0,"! True if dEdx in this TLitMedium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fNextNode=",0,"! Possible next node");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist),-1,-1,2,"fKindOfEmission=",0,"Kind of distribution for the direction of emission of particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaMax=",0,"Maximum theta angle around fSourceDir in radian");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fApercos=",0,"Cos of fThetaMax");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fApersin=",0,"Sin of fThetaMax");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisDirx=",0,"Complements fAxisDirz to have full coord. system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisDiry=",0,"Complements fAxisDirz to have full coord. system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisDirz=",0,"Axis around which particles are generated in local coordinates of the shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fDistName=",0,"Name of SplineFit to be used in case fKindOfEmission == provided");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitDist=",0,"! TSplineFit to be used in case fKindOfEmission == provided");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSourceFixed=",0,"If true, all particles are emitted from the fixed point source inside shape.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFromFace=",0,"If true, emission from face of TGeoVolume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fDirFace=",0,"Direction to take to reach face, in LCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSDirFace=",0,"! Idem fDirFace in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fSourcePoint=",0,"Chosen or generated point of emission of particle in local coordinate of shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSSourcePoint=",0,"! fSourcePoint in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fSourceDir=",0,"! Generated direction of emission around fAxisDirz of particle in local coordinate of shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisb1=",0,"! Complement fWCSSourceDir to have full coordinate system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisb2=",0,"! Complement fWCSSourceDir to have full coordinate system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSSourceDir=",0,"! fSourceDir in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"! Generated theta for the emission of the particle or of the particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"! Generated phi for the emission of the particle or of the particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fnCerenkov=",0,"! Index of refraction to be used in Cerenkov formulae for fLitMedium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton),-1,-1,2,"fPhot=",0,"! Pointer to generated photon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWvlgth=",0,"! Wavelength of this photon in [nm]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fX0=",0,"! Starting point of photon;");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fT0=",0,"! Time of emission of this photon in [ps]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitCascade */
static void G__setup_memvarTLitCascade(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade));
   { TLitCascade *p; p=(TLitCascade*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRun=",0,"Run number");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRunStat=",0,"Ask for separate statistics and histograms for this run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fForgetLast=",0,"If false [default] statistics keeped from run to run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fName=",0,"Name of this TLitCascade");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullName=",0,"name + run number. Name of histos file created");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fTitle=",0,"Title of this TLitCascade");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullTitle=",0,"Title + run number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fSourcePath=",0,"Path name of the TGeoVolume containing the starting point of the cascade");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fStartGeoNode=",0,"! Node to which fStartGeoVol belongs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fStartGeoVol=",0,"! Reference TGeoVolume for positionning the cascade");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fRefLitMedium=",0,"! Only TLitMedium inside which cascade generates light");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fStart=",0,"Starting point of the cascade, in LCS of fStartGeoVol");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSStart=",0,"! Starting point of the cascade, in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fZaxis=",0,"Axis of the cascade, pointing from start to end in LCS of fStartGeoVol");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSXaxis=",0,"! Complement fWCSZaxis to full coordinnate system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSYaxis=",0,"! Complement fWCSZaxis to full coordinnate system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSZaxis=",0,"! Axis of the cascade, pointing from start to end in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fE0=",0,"Energy of the cascade in Mev");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCj=",0,"Parameter Cj \"Review of Particle Physics\" (23.26) p 148");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fA=",0,"Parameter  a \"Review of Particle Physics\" (23.25) p 148");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fB=",0,"Parameter  b \"Review of Particle Physics\" (23.25) p 148");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFacdEdz=",0,"Factor in front of (23.25)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFacdEdr=",0,"Factor in front of (23.27)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fK=",0,"Parameter  R \"Review of Particle Physics\" (23.27) p 148");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZmax=",0,"Maximal length of cascade in cm. Beyond no energy deposit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRmax=",0,"Maximal radius of cascade in cm. Beyond no energy deposit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX0=",0,"Radiation length of material fRefLitMedium");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRm=",0,"Moliere's radius of material fRefLitMedium");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEc=",0,"Critical energy of material fRefLitMedium");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotFac=",0,"Factor to diminish the number of produced photons");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXdV=",0,"! x coord. of center of volume element in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYdV=",0,"! y coord. of center of volume element in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZdV=",0,"! z coord. of center of volume element in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX=",0,"! x coord. of current point of emission of photons in volume element [WCS]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY=",0,"! y coord. of current point of emission of photons in volume element [WCS]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ=",0,"! z coord. of current point of emission of photons in volume element [WCS]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fNode=",0,"! Node in which (fXdV,fYdV,fZdV) or the current (x,y,z) is");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fGeoVolume=",0,"! TGeoVolume in which (fXdV,fYdV,fZdV) is");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMedium),-1,-1,2,"fGeoMedium=",0,"! TGeoMedium of fGeoVolume");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fLitMedium=",0,"! != 0 if fGeoMedium is a TLitMedium");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRcasc=",0,"! r coord. of volume element in cascade coord. system");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFcasc=",0,"! phi coord. of volume element in cascade coord. system");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZcasc=",0,"! z coord. of volume element in cascade coord. system");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDStepL=",0,"! Longitudinal step increment");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDStepR=",0,"! Radial step increment");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDStepF=",0,"! Angular step increment");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNStepL=",0,"Number of longitudinal steps");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNStepR=",0,"Number of radial steps");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNStepF=",0,"Number of steps in phi");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIStepL=",0,"! Actual longitudinal step");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIStepR=",0,"! Actual radial step");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIStepF=",0,"! Actual step in phi");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton),-1,-1,2,"fPhot=",0,"! Pointer to generated photons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNphot=",0,"! Photon number. At the end: total number of photons generated");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNphotOut=",0,"! Number of photons killed by SetGeo because not in fRefLitMedium");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWvlgth=",0,"! Value of generated wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fT0=",0,"! Start time of photon in picoseconds");
   G__memvar_setup((void*)(&TLitCascade::fZmaxLR),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fZmaxLR=",0,"maximal length of cascade in rad. length. Beyond no energy deposit");
   G__memvar_setup((void*)(&TLitCascade::fRmaxMR),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fRmaxMR=",0,"maximal radius of cascade in Moliere radius. Beyond no energy deposit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitGamma */
static void G__setup_memvarTLitGamma(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma));
   { TLitGamma *p; p=(TLitGamma*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRun=",0,"Run number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fName=",0,"Name of this TLitCascade");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullName=",0,"name + run number. Name of histos file created");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fTitle=",0,"Title of this TLitCascade");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fFullTitle=",0,"Title + run number");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRunStat=",0,"Ask for separate statistics and histograms for this run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fForgetLast=",0,"If false [default] statistics keeped from run to run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMoving=",0,"True if beam cradle moving from run to run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCheckMove=",0,"True if chek for extrusion after move");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fSourcePath=",0,"Path of the beam cradle of particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoPhysicalNode),-1,-1,2,"fGeoPhysNode=",0,"! TGeoPhysicalNode used when beam cradle has to be moved");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fStartGeoVol=",0,"! TGeoVolume being the beam cradle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fStartLitVol=",0,"! TLitVolume perhaps associated with fStartGeoVol [not required]");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist),-1,-1,2,"fKindOfEmission=",0,"Kind of distribution for the direction of emission of particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaMax=",0,"Maximum theta angle around fSourceDir in radian");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fApercos=",0,"Cos of fThetaMax");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fApersin=",0,"Sin of fThetaMax");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisDirx=",0,"Complements fAxisDirz to have full coord. system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisDiry=",0,"Complements fAxisDirz to have full coord. system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisDirz=",0,"Axis around which particles are generated in local coordinates of the shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fDistName=",0,"Name of SplineFit to be used in case fKindOfEmission == provided");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fFitDist=",0,"! TSplineFit to be used in case fKindOfEmission == provided");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSourceFixed=",0,"If true, all particles are emitted from the fixed point source inside shape.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFromFace=",0,"If true, emission from face of TGeoVolume");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fDirFace=",0,"Direction to take to reach face, in LCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSDirFace=",0,"! Idem fDirFace in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fSourcePoint=",0,"Chosen or generated point of emission of particle in local coordinate of shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSSourcePoint=",0,"! fSourcePoint in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fSourceDir=",0,"! Generated direction of emission around fAxisDirz of particle in local coordinate of shape");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisb1=",0,"! Complement fWCSSourceDir to have full coordinate system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fAxisb2=",0,"! Complement fWCSSourceDir to have full coordinate system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fWCSSourceDir=",0,"! fSourceDir in WCS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"! Generated theta for the emission of the particle or of the particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"! Generated phi for the emission of the particle or of the particle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fX=",0,"! Current position of Gamma in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fDir=",0,"! Current direction of Gamma in WCS");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fDirElec=",0,"! Direction of the scattered electron. Of use later, if tracking of scattered e-");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRoad=",0,"! Length of path travelled by particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,"! Time for gamma to reach fX");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fNode=",0,"! Node to which fStartGeoVol belongs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fGeoVolume=",0,"! TGeoVolume in which particle is");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fKGeoVolume=",0,"! Index of fGeoVolume in collection TGeoManager::fVolumes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fPath=",0,"! Current path");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fLitVolume=",0,"! TLitVolume in which particle is");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMedium),-1,-1,2,"fGeoMedium=",0,"! Current TGeoMedium, TGeoMedium of fGeoVolume");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fLitMedium=",0,"! != 0 if fGeoMedium is a TLitMedium");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ=",0,"! Z of fGeoMedium");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fA=",0,"! A of fGeoMedium");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDensity=",0,"! Density of fGeoMedium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoNode),-1,-1,2,"fNextNode=",0,"! Possible next node");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStepMax=",0,"! Maximum possible step to stay inside fGeoVolume");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fComptonOk=",0,"! True if Compton effect possible in fGeoMedium: A,Z and rho defined");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPhotoElecOk=",0,"! True if PhotoElectric effect possible in fLitMedium");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fComptonCut=",0,"! True if Compton cross section cut at 0.1 Mev");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fGammaDead=",0,"! Did gamma gave all its energy, for instance by photo-electric cross-section");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_EDepProcess),-1,-1,2,"fProcess=",0,"! Current process {kPhotoElectric,kComptonScattering,kCascade,kBeam}");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEIncident=",0,"! Energy [Mev] of incidental gamma");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEScattered=",0,"! Energy [Mev] of scattered gamma in Compton Scattering");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEDeposit=",0,"! Energy [Mev] deposited in step. By PE or by scattered e- in CS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTotEdeposit=",0,"! Total energy deposited in fGeoVolume");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNCompton=",0,"! Compton interaction counter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXsecCompton=",0,"! Compton scattering cross section * 10E+24 cm2 in fGeoVolume at energy fEIncident");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXsecPhotoEl=",0,"! PhotoElectric cross section      * 10E+24 cm2 in fGeoVolume at energy fEIncident");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNphot=",0,"! Number of photons generated by this gamma");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton),-1,-1,2,"fPhot=",0,"! Pointer to generated photon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWvlgth=",0,"! Wavelength of this photon in [nm]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fX0=",0,"! Starting point of photon;");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fT0=",0,"! Time of emission of this photon in [ps]");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFillDeath=",0,"! true if FillDeath has to be called");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,2,"fHX0=",0,"! hist of x coord of death point of seen photons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,2,"fHY0=",0,"! hist of y coord of death point of seen photons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TH1F),-1,-1,2,"fHZ0=",0,"! hist of z coord of death point of seen photons");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fToDraw=",0,"! Gamma is to be drawn");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDrawCode=",0,"! Gamma Nb of gamma to be drawn. If -1, no gamma to draw. If >1000000, all gammas to be drawn");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fTrackColor=",0,"! Color of gamma to be drawn [1-9]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRecordedTracks=",0,"! Counter of gammas recorded to be drawn");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTrackIndex=",0,"! Index of the newly created gamma to be recorded");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVirtualGeoTrack),-1,-1,2,"fCurrentTrack=",0,"! Track to be drawn");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLitAlbedo */
static void G__setup_memvarTLitAlbedo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo));
   { TLitAlbedo *p; p=(TLitAlbedo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fAlbedo=",0,"Albedo as a function of wavelength");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit),-1,-1,2,"fImPart=",0,"Arbitrary chosen imaginay part of index as a function of wavelength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWrapDiffus=",0,"Proportion of diffusion versus reflection for the wrapping. Default 1.0 [100%]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMaterial),-1,-1,2,"fSrcMat=",0,"! Material of SOURCE");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fSrcMed=",0,"! Medium of SOURCE");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMaterial),-1,-1,2,"fDetMat=",0,"! Material of DETECTOR");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fDetMed=",0,"! Medium of DETECTOR");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMaterial),-1,-1,2,"fWrapMat=",0,"! Material of WRAPPING");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium),-1,-1,2,"fWrapMed=",0,"! Medium of WRAPPING");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMaterial),-1,-1,2,"fVacuumMat=",0,"! Material of TOP");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoMedium),-1,-1,2,"fVacuum=",0,"! Medium of TOP");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fL=",0,"Half size of TGeoBBox WRAPPING. TGeoBBox TOP has half size fL+fD");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fD=",0,"TGeoBBox DETECTOR has half sizes [fL-0.5*fD,fL,fL]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoTranslation),-1,-1,2,"fT1=",0,"! Translation of DETECTOR with respect to WRAPPING");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoTranslation),-1,-1,2,"fT2=",0,"! Translation of SOURCE with respect to DETECTOR");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fTop=",0,"! TGeoVolume TOP");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fWrapping=",0,"! TGeoVolume WRAPPING");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fDetector=",0,"! TGeoVolume DETECTOR");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fLitDet=",0,"! Associated TLitVolume");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume),-1,-1,2,"fSource=",0,"! TGeoVolume SOURCE");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume),-1,-1,2,"fLitSource=",0,"! Associated TLitVolume");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDistPoint=",0,"Distance of point of emission of photon from center of SOURCE [negativ!]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStartAngle=",0,"Starting angle of emission in the (Ox,Oy) plane [radian]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLastAngle=",0,"Last angle of emission in the (Ox,Oy) plane [radian]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStepAngle=",0,"Step for angle of emission in the (Ox,Oy) plane [radian]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNAngles=",0,"Number of steps to be done");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAperture=",0,"Aperture of the beam of photons in degree [default 5.0]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmitAngle=",0,"! Angle of emission in the (Ox,Oy) plane [radian]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fSourcePoint=",0,"Point emitting photons inside fSource");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TVector3),-1,-1,2,"fSourceDir=",0,"! Axis around which photons are emitted inside fSource");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNWaveLength=",0,"Number of wavelengths used");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWaveLength=",0,"[fNWaveLength] List of wavelength used");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxReal=",0,"Maximum possible value for the real part of the index of studied wrapping");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbStepsReal=",0,"Number of steps in looking for the right value of real index");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fSize=",0,"Size of main canvas [ 1 <= fSize <= 8 ]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbButtons=",0,"Number of buttons wanted in TwoPadDisplay. Bigger than 10 [default 24]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fXminC=",0,"x coordinate, in pixel, of top left corner of main canvas [default 2]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fYminC=",0,"y coordinate, in pixel, of top left corner of main canvas [default 2]");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fWithDate=",0,"If true, date and time are appended to the name of the ROOT file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fNameFile=",0,"Name of the .root file that SLitrani produces");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fListFile=",0,"Name of the .lis  file that SLitrani produces");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fUpcom=",0,"Comment at top right of main canvas");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TString),-1,-1,2,"fDowncom=",0,"Comment at bottom right of main canvas");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSLitraniDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTLitPol3(void) {
   /* TLitPol3 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3));
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag1",326,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag2",327,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NotSmallIm",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Order",508,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Yn",199,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Yn",199,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 2, 8, "u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Yn",199,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Yn",199,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - - u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitPol3",731,G__SLitraniDict_114_0_10, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitPol3",731,G__SLitraniDict_114_0_11, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitPol3",731,G__SLitraniDict_114_0_12, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3), -1, 0, 1, 1, 1, 0, "u 'TLitPol3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindRoots",920,G__SLitraniDict_114_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '-1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getabcd",682,G__SLitraniDict_114_0_15, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAn",463,G__SLitraniDict_114_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetERoot",777,G__SLitraniDict_114_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMag",565,G__SLitraniDict_114_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNc",465,G__SLitraniDict_114_0_19, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNd",466,G__SLitraniDict_114_0_20, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNr",480,G__SLitraniDict_114_0_21, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__SLitraniDict_114_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ",369,G__SLitraniDict_114_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRoot",708,G__SLitraniDict_114_0_24, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXt",492,G__SLitraniDict_114_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsComplex",916,G__SLitraniDict_114_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsComplex",916,G__SLitraniDict_114_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"s - 'Short_t' 0 - - d - 'Double_t' 0 - lim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__SLitraniDict_114_0_30, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRoots",1060,G__SLitraniDict_114_0_31, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__SLitraniDict_114_0_32, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_114_0_33, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_114_0_34, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 1, 8, "u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_114_0_35, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_114_0_36, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_114_0_37, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_114_0_38, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 1, 8, "u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_114_0_39, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_114_0_40, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__SLitraniDict_114_0_41, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol3), -1, 1, 1, 1, 1, 0, "u 'TLitPol3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__SLitraniDict_114_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TLitPol3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_114_0_43, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitPol3::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_114_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPol3::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_114_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitPol3::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_114_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitPol3::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_114_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_114_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPol3::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_114_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitPol3::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_114_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPol3::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_114_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitPol3::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLitPol3", 857, G__SLitraniDict_114_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitPol4(void) {
   /* TLitPol4 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4));
   G__memfunc_setup("ClearP",567,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Derivative",1043,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ImAtEnd",642,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MostIsolated",1240,(G__InterfaceMethod) NULL, 115, -1, G__defined_typename("Short_t"), 0, 1, 1, 2, 8, "g - 'Bool_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Newton",635,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Newton",635,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 8, 
"u 'TComplex' - 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NotSmallIm",992,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Order",508,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Starting",844,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'TComplex' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Yn",199,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Yn",199,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 2, 8, "u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Yn",199,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Yn",199,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - - u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitPol4",732,G__SLitraniDict_116_0_15, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitPol4",732,G__SLitraniDict_116_0_16, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitPol4",732,G__SLitraniDict_116_0_17, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4), -1, 0, 1, 1, 1, 0, "u 'TLitPol4' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindRoots",920,G__SLitraniDict_116_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRootsRMP",1159,G__SLitraniDict_116_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getabcde",783,G__SLitraniDict_116_0_21, 121, -1, -1, 0, 5, 1, 1, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAn",463,G__SLitraniDict_116_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetERoot",777,G__SLitraniDict_116_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMag",565,G__SLitraniDict_116_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNc",465,G__SLitraniDict_116_0_25, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNe",467,G__SLitraniDict_116_0_26, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrig",689,G__SLitraniDict_116_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNr",480,G__SLitraniDict_116_0_28, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__SLitraniDict_116_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ",369,G__SLitraniDict_116_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetR",370,G__SLitraniDict_116_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRoot",708,G__SLitraniDict_116_0_32, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXextr",827,G__SLitraniDict_116_0_33, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXt",492,G__SLitraniDict_116_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYextr",828,G__SLitraniDict_116_0_35, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsComplex",916,G__SLitraniDict_116_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsComplex",916,G__SLitraniDict_116_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"s - 'Short_t' 0 - - d - 'Double_t' 0 - lim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__SLitraniDict_116_0_40, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRoots",1060,G__SLitraniDict_116_0_41, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__SLitraniDict_116_0_42, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_116_0_43, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_116_0_44, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 1, 8, "u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_116_0_45, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_116_0_46, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_116_0_47, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_116_0_48, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 1, 8, "u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_116_0_49, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_116_0_50, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__SLitraniDict_116_0_51, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPol4), -1, 1, 1, 1, 1, 0, "u 'TLitPol4' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__SLitraniDict_116_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TLitPol4' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_116_0_53, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitPol4::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_116_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPol4::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_116_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitPol4::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_116_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitPol4::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_116_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_116_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPol4::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_116_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitPol4::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_116_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPol4::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_116_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitPol4::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLitPol4", 858, G__SLitraniDict_116_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitEqIndex(void) {
   /* TLitEqIndex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex));
   G__memfunc_setup("Disposition",1173,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exchange",803,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"s - 'Short_t' 0 - - s - 'Short_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Newton1",684,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 8, 
"d - 'Double_t' 1 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Newton2",685,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 8, 
"u 'TComplex' - 1 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Order1",557,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Order2",558,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Order3",559,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rac",278,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 2, 8, 
"u 'TComplex' - 11 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReviSign0",855,(G__InterfaceMethod) NULL, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReviSign1",856,(G__InterfaceMethod) NULL, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveDegen",1004,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveSimple",1139,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitEqIndex",1067,G__SLitraniDict_169_0_15, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex), -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitEqIndex",1067,G__SLitraniDict_169_0_16, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitEqIndex",1067,G__SLitraniDict_169_0_17, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 '-1.0e+99' - "
"g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BetterConj",1008,G__SLitraniDict_169_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"u 'TComplex' - 1 - - u 'TComplex' - 1 - -", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TComplex&, TComplex&))(&TLitEqIndex::BetterConj) ), 0);
   G__memfunc_setup("BookHRes",765,G__SLitraniDict_169_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClosestFrom",1137,G__SLitraniDict_169_0_20, 115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoefficients",1522,G__SLitraniDict_169_0_21, 121, -1, -1, 0, 5, 1, 1, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoefficients",1522,G__SLitraniDict_169_0_22, 121, -1, -1, 0, 6, 1, 1, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfB",456,G__SLitraniDict_169_0_23, 121, -1, -1, 0, 4, 1, 1, 8, 
"g - 'Bool_t' 1 - - g - 'Bool_t' 1 - - "
"g - 'Bool_t' 1 - - g - 'Bool_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfB",456,G__SLitraniDict_169_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfD",458,G__SLitraniDict_169_0_25, 121, -1, -1, 0, 4, 1, 1, 8, 
"u 'TComplex' - 1 - - u 'TComplex' - 1 - - "
"u 'TComplex' - 1 - - u 'TComplex' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfD",458,G__SLitraniDict_169_0_26, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 1, 8, "s - 'Short_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfR",472,G__SLitraniDict_169_0_27, 121, -1, -1, 0, 4, 1, 1, 8, 
"g - 'Bool_t' 1 - - g - 'Bool_t' 1 - - "
"g - 'Bool_t' 1 - - g - 'Bool_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfR",472,G__SLitraniDict_169_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfZ",480,G__SLitraniDict_169_0_29, 121, -1, -1, 0, 4, 1, 1, 8, 
"u 'TComplex' - 1 - - u 'TComplex' - 1 - - "
"u 'TComplex' - 1 - - u 'TComplex' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfZ",480,G__SLitraniDict_169_0_30, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 1, 1, 8, "s - 'Short_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGd",459,G__SLitraniDict_169_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNr",480,G__SLitraniDict_169_0_32, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQs2",534,G__SLitraniDict_169_0_33, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQs2",534,G__SLitraniDict_169_0_34, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQsc",583,G__SLitraniDict_169_0_35, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQsc",583,G__SLitraniDict_169_0_36, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResidue",1009,G__SLitraniDict_169_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTypeEq",888,G__SLitraniDict_169_0_38, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TypeOfEquation), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWithRMP",939,G__SLitraniDict_169_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintEquation",1363,G__SLitraniDict_169_0_42, 121, -1, -1, 0, 2, 1, 1, 8, 
"i 'KindOfMessage' - 0 'info' - C - - 10 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintResult",1164,G__SLitraniDict_169_0_43, 121, -1, -1, 0, 1, 1, 1, 8, "i 'KindOfMessage' - 0 'info' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__SLitraniDict_169_0_44, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 '-1.0e+99' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebug",787,G__SLitraniDict_169_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWithRMP",951,G__SLitraniDict_169_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowEqu",716,G__SLitraniDict_169_0_47, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 '1000' - d - 'Double_t' 0 '0.0' - "
"d - 'Double_t' 0 '-1.0' - d - 'Double_t' 0 '0.0' - "
"d - 'Double_t' 0 '-1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowResidue",1138,G__SLitraniDict_169_0_48, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Solve",521,G__SLitraniDict_169_0_49, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "s - 'Short_t' 0 '3' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_169_0_50, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 1, 8, 
"u 'TComplex' - 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_169_0_51, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_169_0_52, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 3, 1, 1, 8, 
"s - 'Short_t' 0 - - u 'TComplex' - 0 - - "
"g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__SLitraniDict_169_0_53, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 3, 1, 1, 8, 
"s - 'Short_t' 0 - - d - 'Double_t' 0 - - "
"g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YAbs",367,G__SLitraniDict_169_0_54, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"u 'TComplex' - 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YAbs",367,G__SLitraniDict_169_0_55, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_169_0_56, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 1, 8, 
"u 'TComplex' - 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__SLitraniDict_169_0_57, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__SLitraniDict_169_0_58, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TLitEqIndex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_169_0_59, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitEqIndex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_169_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitEqIndex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_169_0_61, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitEqIndex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_169_0_62, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitEqIndex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_169_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_169_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitEqIndex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_169_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitEqIndex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_169_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitEqIndex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_169_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitEqIndex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitEqIndex", 1067, G__SLitraniDict_169_0_71, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex), -1, 0, 1, 1, 1, 0, "u 'TLitEqIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitEqIndex", 1193, G__SLitraniDict_169_0_72, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_169_0_73, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex), -1, 1, 1, 1, 1, 0, "u 'TLitEqIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitWave(void) {
   /* TLitWave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave));
   G__memfunc_setup("TLitWave",784,G__SLitraniDict_208_0_1, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitWave",784,G__SLitraniDict_208_0_2, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Split",524,G__SLitraniDict_208_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VerifySplit",1153,G__SLitraniDict_208_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VerifyStart",1155,G__SLitraniDict_208_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - - u 'TMat33' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_208_0_6, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitWave::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_208_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitWave::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_208_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitWave::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_208_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitWave::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_208_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_208_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitWave::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_208_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitWave::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_208_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitWave::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_208_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitWave::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitWave", 784, G__SLitraniDict_208_0_18, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave), -1, 0, 1, 1, 1, 0, "u 'TLitWave' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitWave", 910, G__SLitraniDict_208_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_208_0_20, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitWave), -1, 1, 1, 1, 1, 0, "u 'TLitWave' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitPhoton(void) {
   /* TLitPhoton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton));
   G__memfunc_setup("AgainstRev",1012,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AgainstShape",1208,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlfaDelta",862,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 7, 3, 2, 0, 
"u 'TVector3' - 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlfaDelta",862,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 7, 3, 2, 0, 
"u 'TVec3C' - 11 - - u 'TComplex' - 11 - - "
"u 'TComplex' - 11 - - u 'TComplex' - 1 - - "
"u 'TComplex' - 1 - - u 'TComplex' - 1 - - "
"u 'TComplex' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AniToAni",755,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AniToIso",774,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildBPUP",807,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 8, 
"u 'TVector3' - 11 - - u 'TVector3' - 11 - - "
"u 'TVector3' - 1 - - u 'TVector3' - 1 - - "
"u 'TVector3' - 1 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1111",399,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1112",400,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1121",400,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1113",401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1114",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1122",401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1123",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1124",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1131",401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1132",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1133",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1141",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1142",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1144",405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1211",400,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1212",401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1213",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1214",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1221",401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1222",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1223",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1224",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1231",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1232",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1233",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1241",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1242",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1244",406,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1311",401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1312",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1313",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1321",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1322",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1323",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1331",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1332",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch1333",405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2111",400,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2112",401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2121",401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2113",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2114",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2122",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2123",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2124",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2131",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2132",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2133",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2141",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2142",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2144",406,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2211",401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2212",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2213",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2214",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2221",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2222",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2223",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2224",405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2231",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2232",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2233",405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2241",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2242",405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2244",407,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2311",402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2312",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2313",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2321",403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2322",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2323",405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2331",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2332",405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ch2333",406,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Choose",609,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearNewVolume",1417,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVolume",1119,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CosFromSin",995,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 1, 3, 2, 0, "u 'TComplex' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Depolish",824,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diffused",810,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindAbsLength",1273,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindDielAni",1047,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindDielIso",1066,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindProcessAndLength",2005,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImin12",784,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"s - 'Short_t' 0 - - s - 'Short_t' 1 - - "
"s - 'Short_t' 1 - - s - 'Short_t' 0 '-1' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ICStoWCS",687,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InDetRecord",1075,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitTracking",1223,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDamage",763,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsoToAni",774,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsoToIso",793,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsoTsIso",797,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("K",75,(G__InterfaceMethod) NULL, 115, -1, G__defined_typename("Short_t"), 0, 2, 1, 2, 8, 
"s - 'Short_t' 0 - i s - 'Short_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinOrthoN",894,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 3, 2, 0, 
"u 'TVector3' - 1 - x u 'TVector3' - 11 - v "
"d - 'Double_t' 1 - s d - 'Double_t' 1 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewVolume",930,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintWhich",1024,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Regenerate",1026,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i 'OpticalProcess' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RPhi",371,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 3, 2, 0, 
"u 'TComplex' - 0 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SliceToRev",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SliceToShape",1188,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Smallest",837,(G__InterfaceMethod) NULL, 115, -1, G__defined_typename("Short_t"), 0, 1, 3, 2, 0, "u 'TVector3' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartPhoton",1158,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToICS",418,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Toss",425,(G__InterfaceMethod) NULL, 115, -1, G__defined_typename("Short_t"), 0, 1, 1, 2, 0, "s - 'Short_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VerifyAtoI",994,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VerifyItoA",994,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitPhoton",1013,G__SLitraniDict_209_0_116, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitPhoton",1013,G__SLitraniDict_209_0_117, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton), -1, 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"u 'TVector3' - 11 - - U 'TGeoVolume' - 0 - - "
"C - - 10 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - u 'TVector3' - 1 - - "
"u 'TVector3' - 1 - - s - 'Short_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitPhoton",1013,G__SLitraniDict_209_0_118, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton), -1, 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"u 'TVector3' - 11 - - U 'TLitVolume' - 0 - - "
"C - - 10 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - u 'TVector3' - 1 - - "
"u 'TVector3' - 1 - - s - 'Short_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Detector",826,G__SLitraniDict_209_0_119, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectorN",904,G__SLitraniDict_209_0_120, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExitFace",777,G__SLitraniDict_209_0_121, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnomaly",1009,G__SLitraniDict_209_0_122, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentTrack",1528,G__SLitraniDict_209_0_123, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TVirtualGeoTrack), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetToDraw",881,G__SLitraniDict_209_0_124, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Jump",412,G__SLitraniDict_209_0_125, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Move",407,G__SLitraniDict_209_0_126, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnFace",556,G__SLitraniDict_209_0_127, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentTrack",1540,G__SLitraniDict_209_0_128, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetToDraw",893,G__SLitraniDict_209_0_129, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transition",1067,G__SLitraniDict_209_0_130, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_209_0_131, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitPhoton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_209_0_132, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPhoton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_209_0_133, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitPhoton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_209_0_134, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitPhoton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_209_0_138, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_209_0_139, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPhoton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_209_0_140, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitPhoton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_209_0_141, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPhoton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_209_0_142, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitPhoton::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitPhoton", 1013, G__SLitraniDict_209_0_143, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton), -1, 0, 1, 1, 1, 0, "u 'TLitPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitPhoton", 1139, G__SLitraniDict_209_0_144, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_209_0_145, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhoton), -1, 1, 1, 1, 1, 0, "u 'TLitPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitHistParams(void) {
   /* TLitHistParams */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams));
   G__memfunc_setup("TLitHistParams",1401,G__SLitraniDict_211_0_1, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitHistParams",1401,G__SLitraniDict_211_0_2, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams), -1, 0, 9, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - i - 'Int_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"i - 'Int_t' 0 '0' - d - 'Double_t' 0 '0.0' - "
"d - 'Double_t' 0 '0.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__SLitraniDict_211_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TLitHistParams' - 0 - -", (char*)NULL, (void*) G__func2void( (void (*)(TLitHistParams*))(&TLitHistParams::Add) ), 0);
   G__memfunc_setup("Add",265,G__SLitraniDict_211_0_4, 121, -1, -1, 0, 9, 3, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - i - 'Int_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"i - 'Int_t' 0 '0' - d - 'Double_t' 0 '0.0' - "
"d - 'Double_t' 0 '0.0' -", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*, const char*, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t))(&TLitHistParams::Add) ), 0);
   G__memfunc_setup("CloseXmlFile",1191,G__SLitraniDict_211_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitHistParams::CloseXmlFile) ), 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateHistParams",1616,G__SLitraniDict_211_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitHistParams::CreateHistParams) ), 0);
   G__memfunc_setup("Get",288,G__SLitraniDict_211_0_8, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams), -1, 0, 1, 3, 1, 0, "C - - 10 - -", (char*)NULL, (void*) G__func2void( (TLitHistParams* (*)(const char*))(&TLitHistParams::Get) ), 0);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenXmlFileR",1173,G__SLitraniDict_211_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitHistParams::OpenXmlFileR) ), 0);
   G__memfunc_setup("Purge",515,G__SLitraniDict_211_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitHistParams::Purge) ), 0);
   G__memfunc_setup("PurgeStatic",1131,G__SLitraniDict_211_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitHistParams::PurgeStatic) ), 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_211_0_14, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitHistParams::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_211_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitHistParams::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_211_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitHistParams::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_211_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitHistParams::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_211_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_211_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitHistParams::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_211_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitHistParams::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_211_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitHistParams::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_211_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitHistParams::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitHistParams", 1401, G__SLitraniDict_211_0_26, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams), -1, 0, 1, 1, 1, 0, "u 'TLitHistParams' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitHistParams", 1527, G__SLitraniDict_211_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_211_0_28, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitHistParams), -1, 1, 1, 1, 1, 0, "u 'TLitHistParams' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitPhys(void) {
   /* TLitPhys */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhys));
   G__memfunc_setup("TLitPhys",801,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhys), -1, 0, 0, 1, 4, 0, "", "Private constructor: TLitPhys is a singleton!", (void*) NULL, 0);
   G__memfunc_setup("Alpha",486,G__SLitraniDict_219_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Anomalies",921,G__SLitraniDict_219_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AvoDivE26",758,G__SLitraniDict_219_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Avogadro",819,G__SLitraniDict_219_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BiggestStep",1121,G__SLitraniDict_219_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("C",67,G__SLitraniDict_219_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ccmps",502,G__SLitraniDict_219_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cmks",398,G__SLitraniDict_219_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E",69,G__SLitraniDict_219_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eps0",344,G__SLitraniDict_219_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__SLitraniDict_219_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "U 'TGeoMedium' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__SLitraniDict_219_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "U 'TGeoMedium' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hbar",381,G__SLitraniDict_219_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxWaveL",773,G__SLitraniDict_219_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Me",178,G__SLitraniDict_219_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Meg",281,G__SLitraniDict_219_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinWaveL",771,G__SLitraniDict_219_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R02",180,G__SLitraniDict_219_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAnomal",900,G__SLitraniDict_219_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBiggestStep",1421,G__SLitraniDict_219_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLate",690,G__SLitraniDict_219_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - late", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxWaveL",1073,G__SLitraniDict_219_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinMaxWL",1049,G__SLitraniDict_219_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinWaveL",1071,G__SLitraniDict_219_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThreshe",1023,G__SLitraniDict_219_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Threshe",723,G__SLitraniDict_219_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TooLate",696,G__SLitraniDict_219_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vphot",529,G__SLitraniDict_219_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ASin",363,G__SLitraniDict_219_0_30, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&TLitPhys::ASin) ), 0);
   G__memfunc_setup("ACos",358,G__SLitraniDict_219_0_31, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&TLitPhys::ACos) ), 0);
   G__memfunc_setup("Book",395,G__SLitraniDict_219_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitPhys::Book) ), 0);
   G__memfunc_setup("Get",288,G__SLitraniDict_219_0_33, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhys), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TLitPhys* (*)())(&TLitPhys::Get) ), 0);
   G__memfunc_setup("Kill",396,G__SLitraniDict_219_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitPhys::Kill) ), 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_219_0_35, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitPhys::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_219_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPhys::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_219_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitPhys::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_219_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitPhys::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__SLitraniDict_219_0_39, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__SLitraniDict_219_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__SLitraniDict_219_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_219_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_219_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPhys::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_219_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitPhys::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_219_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitPhys::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_219_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitPhys::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitPhys", 801, G__SLitraniDict_219_0_47, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhys), -1, 0, 1, 1, 1, 0, "u 'TLitPhys' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_219_0_48, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitPhys), -1, 1, 1, 1, 1, 0, "u 'TLitPhys' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitTrap(void) {
   /* TLitTrap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap));
   G__memfunc_setup("DelPoints",914,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakePlanar",988,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToParam",692,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToPoints",832,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitTrap",788,G__SLitraniDict_232_0_6, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitTrap",788,G__SLitraniDict_232_0_7, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap), -1, 0, 11, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitTrap",788,G__SLitraniDict_232_0_8, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap), -1, 0, 15, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitTrap",788,G__SLitraniDict_232_0_9, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitTrap",788,G__SLitraniDict_232_0_10, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap), -1, 0, 2, 1, 1, 0, 
"s - 'Short_t' 0 - - d - 'Double_t' 0 '0.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AllParams",893,G__SLitraniDict_232_0_11, 121, -1, -1, 0, 11, 1, 1, 0, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeoTrap",690,G__SLitraniDict_232_0_12, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TGeoTrap), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getalpha1",855,G__SLitraniDict_232_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getalpha2",856,G__SLitraniDict_232_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getbl1",543,G__SLitraniDict_232_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getbl2",544,G__SLitraniDict_232_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCMSdim",829,G__SLitraniDict_232_0_17, 121, -1, -1, 0, 9, 1, 1, 8, 
"s - 'Short_t' 0 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 0 '0.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getdz",510,G__SLitraniDict_232_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfV",476,G__SLitraniDict_232_0_19, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Geth1",441,G__SLitraniDict_232_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Geth2",442,G__SLitraniDict_232_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getphi",609,G__SLitraniDict_232_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPoints",925,G__SLitraniDict_232_0_23, 121, -1, -1, 0, 24, 1, 1, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gettl1",561,G__SLitraniDict_232_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gettl2",562,G__SLitraniDict_232_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gettheta",822,G__SLitraniDict_232_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__SLitraniDict_232_0_27, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPts",836,G__SLitraniDict_232_0_28, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_232_0_29, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitTrap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_232_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitTrap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_232_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitTrap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_232_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitTrap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_232_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_232_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitTrap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_232_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitTrap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_232_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitTrap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_232_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitTrap::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitTrap", 788, G__SLitraniDict_232_0_41, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap), -1, 0, 1, 1, 1, 0, "u 'TLitTrap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitTrap", 914, G__SLitraniDict_232_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_232_0_43, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitTrap), -1, 1, 1, 1, 1, 0, "u 'TLitTrap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitSpectrumCp(void) {
   /* TLitSpectrumCp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrumCp",1411,G__SLitraniDict_233_0_2, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrumCp",1411,G__SLitraniDict_233_0_3, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrumCp",1411,G__SLitraniDict_233_0_4, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 '-1.0' - d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrumCp",1411,G__SLitraniDict_233_0_5, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrumCp",1411,G__SLitraniDict_233_0_6, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp), -1, 0, 12, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrumCp",1411,G__SLitraniDict_233_0_7, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - i - 'Int_t' 0 - - "
"D - 'Double_t' 0 - - D - 'Double_t' 0 - - "
"D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrumCp",1411,G__SLitraniDict_233_0_8, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp), -1, 0, 1, 1, 1, 0, "u 'TLitSpectrumCp' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTimeComponent",1611,G__SLitraniDict_233_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToGaussAmpNN",1417,G__SLitraniDict_233_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__SLitraniDict_233_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenDecayTime",1167,G__SLitraniDict_233_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenWaveLength",1295,G__SLitraniDict_233_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArea",665,G__SLitraniDict_233_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecayTime",1173,G__SLitraniDict_233_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussAmp",1089,G__SLitraniDict_233_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussAmpNN",1245,G__SLitraniDict_233_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussMean",1188,G__SLitraniDict_233_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussSigma",1300,G__SLitraniDict_233_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbTimes",978,G__SLitraniDict_233_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNormalized",1333,G__SLitraniDict_233_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRiseTime",1090,G__SLitraniDict_233_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeWeight",1303,G__SLitraniDict_233_0_24, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeWeightNN",1459,G__SLitraniDict_233_0_25, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Normalize",945,G__SLitraniDict_233_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__SLitraniDict_233_0_29, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGaussAmp",1101,G__SLitraniDict_233_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - A", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGaussAmpNN",1257,G__SLitraniDict_233_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - A", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_233_0_32, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitSpectrumCp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_233_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSpectrumCp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_233_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitSpectrumCp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_233_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpectrumCp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_233_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_233_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSpectrumCp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_233_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitSpectrumCp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_233_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSpectrumCp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_233_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitSpectrumCp::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLitSpectrumCp", 1537, G__SLitraniDict_233_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_233_0_45, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp), -1, 1, 1, 1, 1, 0, "u 'TLitSpectrumCp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitSpectrum(void) {
   /* TLitSpectrum */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum));
   G__memfunc_setup("FindDate",767,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrum",1232,G__SLitraniDict_279_0_3, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrum",1232,G__SLitraniDict_279_0_4, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum), -1, 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpectrum",1232,G__SLitraniDict_279_0_5, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum), -1, 0, 1, 1, 1, 0, "u 'TLitSpectrum' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddOneComponent",1502,G__SLitraniDict_279_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddOneComponent",1502,G__SLitraniDict_279_0_7, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 '-1.0' - d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddOneComponent",1502,G__SLitraniDict_279_0_8, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddOneComponent",1502,G__SLitraniDict_279_0_9, 121, -1, -1, 0, 12, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddOneComponent",1502,G__SLitraniDict_279_0_10, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - i - 'Int_t' 0 - - "
"D - 'Double_t' 0 - - D - 'Double_t' 0 - - "
"D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSpectrum",1116,G__SLitraniDict_279_0_11, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TLitSpectrum' - 0 - -", (char*)NULL, (void*) G__func2void( (void (*)(TLitSpectrum*))(&TLitSpectrum::AddSpectrum) ), 0);
   G__memfunc_setup("AddThisSpectrum",1524,G__SLitraniDict_279_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTimeComponent",1611,G__SLitraniDict_279_0_13, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTimeComponent",1611,G__SLitraniDict_279_0_14, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TLitSpectrumCp' - 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BetterPeaks",1114,G__SLitraniDict_279_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - - D - 'Double_t' 0 - - "
"D - 'Double_t' 0 - - D - 'Double_t' 0 - - "
"S - 'Short_t' 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__SLitraniDict_279_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearGraphs",1100,G__SLitraniDict_279_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawDecayTimes",1398,G__SLitraniDict_279_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '500000' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawNextInCollection",2032,G__SLitraniDict_279_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpectrum::DrawNextInCollection) ), 0);
   G__memfunc_setup("DrawSpectraInCollection",2339,G__SLitraniDict_279_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpectrum::DrawSpectraInCollection) ), 0);
   G__memfunc_setup("DrawSpectraInFile",1687,G__SLitraniDict_279_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpectrum::DrawSpectraInFile) ), 0);
   G__memfunc_setup("DrawSpectrum",1249,G__SLitraniDict_279_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '501' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindComponent",1332,G__SLitraniDict_279_0_24, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrumCp), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFit",676,G__SLitraniDict_279_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeaks",885,G__SLitraniDict_279_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 '80' - d - 'Double_t' 0 '0.002' - "
"d - 'Double_t' 0 '14.0' - d - 'Double_t' 0 '16.0' tooclose "
"g - 'Bool_t' 0 'kFALSE' - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSpectrum",1236,G__SLitraniDict_279_0_27, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum), -1, 0, 2, 3, 1, 0, 
"C - - 10 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) G__func2void( (TLitSpectrum* (*)(const char*, Bool_t))(&TLitSpectrum::FindSpectrum) ), 0);
   G__memfunc_setup("GenWaveLAndDecayT",1606,G__SLitraniDict_279_0_28, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInSplineFitDB",1515,G__SLitraniDict_279_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMacro",786,G__SLitraniDict_279_0_30, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfComponents",1707,G__SLitraniDict_279_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNormalized",1333,G__SLitraniDict_279_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSplineFit",1198,G__SLitraniDict_279_0_33, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitStatic",1020,G__SLitraniDict_279_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpectrum::InitStatic) ), 0);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInCollection",1407,G__SLitraniDict_279_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInCollection",1407,G__SLitraniDict_279_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "U 'TLitSpectrum' - 0 - -", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TLitSpectrum*))(&TLitSpectrum::IsInCollection) ), 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NameFile",769,G__SLitraniDict_279_0_39, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 '\"SpectraDB.rdb\"' -", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&TLitSpectrum::NameFile) ), 0);
   G__memfunc_setup("Normalize",945,G__SLitraniDict_279_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OrderFile",892,G__SLitraniDict_279_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Bool_t))(&TLitSpectrum::OrderFile) ), 0);
   G__memfunc_setup("Print",525,G__SLitraniDict_279_0_42, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintComment",1248,G__SLitraniDict_279_0_43, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSpectrum2File",1810,G__SLitraniDict_279_0_44, 121, -1, -1, 0, 4, 1, 1, 8, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 '0' - d - 'Double_t' 0 '1.E-3' cutoff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Purge",515,G__SLitraniDict_279_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpectrum::Purge) ), 0);
   G__memfunc_setup("PurgeStatic",1131,G__SLitraniDict_279_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpectrum::PurgeStatic) ), 0);
   G__memfunc_setup("RemoveSpectrumFromFile",2261,G__SLitraniDict_279_0_47, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"C - - 10 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const char*, Bool_t))(&TLitSpectrum::RemoveSpectrumFromFile) ), 0);
   G__memfunc_setup("SetDefaultLabels",1604,G__SLitraniDict_279_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMacro",798,G__SLitraniDict_279_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSource",925,G__SLitraniDict_279_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVLabel",866,G__SLitraniDict_279_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXLabel",868,G__SLitraniDict_279_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowSpectraInFile",1706,G__SLitraniDict_279_0_53, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpectrum::ShowSpectraInFile) ), 0);
   G__memfunc_setup("UpdateFile",995,G__SLitraniDict_279_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VerifyNotInFile",1501,G__SLitraniDict_279_0_55, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_279_0_56, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitSpectrum::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_279_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSpectrum::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_279_0_58, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitSpectrum::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_279_0_59, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpectrum::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_279_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_279_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSpectrum::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_279_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitSpectrum::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_279_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSpectrum::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_279_0_67, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitSpectrum::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLitSpectrum", 1358, G__SLitraniDict_279_0_68, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitDetector(void) {
   /* TLitDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector));
   G__memfunc_setup("AddMe",443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookHistos",1029,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitDetector",1207,G__SLitraniDict_288_0_5, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitDetector",1207,G__SLitraniDict_288_0_6, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector), -1, 0, 9, 1, 1, 0, 
"C - - 10 - - i 'KindOfDet' - 0 - - "
"g - 'Bool_t' 0 - - g - 'Bool_t' 0 - - "
"g - 'Bool_t' 0 - - g - 'Bool_t' 0 'kFALSE' - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '0.0' - "
"d - 'Double_t' 0 '0.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearHistos",1121,G__SLitraniDict_288_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Conclusion",1053,G__SLitraniDict_288_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillDepth",892,G__SLitraniDict_288_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillInside",995,G__SLitraniDict_288_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillQEff",745,G__SLitraniDict_288_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTimeSeen",1185,G__SLitraniDict_288_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillWvlgthNot",1332,G__SLitraniDict_288_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillWvlgthSeen",1422,G__SLitraniDict_288_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillXYEntrance",1384,G__SLitraniDict_288_0_16, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindDetector",1211,G__SLitraniDict_288_0_17, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector), -1, 0, 2, 3, 1, 0, 
"u 'TString' - 0 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) G__func2void( (TLitDetector* (*)(TString, Bool_t))(&TLitDetector::FindDetector) ), 0);
   G__memfunc_setup("GetGlob",676,G__SLitraniDict_288_0_18, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNbHistos",1098,G__SLitraniDict_288_0_20, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbSumHist",1181,G__SLitraniDict_288_0_21, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAPD",401,G__SLitraniDict_288_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEntrance",1004,G__SLitraniDict_288_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsGendet",787,G__SLitraniDict_288_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGlob",576,G__SLitraniDict_288_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMe",366,G__SLitraniDict_288_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPhototube",1142,G__SLitraniDict_288_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsStopAlways",1235,G__SLitraniDict_288_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsVolEnt",788,G__SLitraniDict_288_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__SLitraniDict_288_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_288_0_33, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_288_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_288_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_288_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_288_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_288_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_288_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_288_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_288_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitDetector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitDetector", 1207, G__SLitraniDict_288_0_45, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector), -1, 0, 1, 1, 1, 0, "u 'TLitDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitDetector", 1333, G__SLitraniDict_288_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_288_0_47, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitDetector), -1, 1, 1, 1, 1, 0, "u 'TLitDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitSellmeier(void) {
   /* TLitSellmeier */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier));
   G__memfunc_setup("TLitSellmeier",1311,G__SLitraniDict_289_0_1, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSellmeier",1311,G__SLitraniDict_289_0_2, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '0.0' - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '0.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddComponent",1212,G__SLitraniDict_289_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiel",670,G__SLitraniDict_289_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__SLitraniDict_289_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_289_0_6, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitSellmeier::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_289_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSellmeier::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_289_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitSellmeier::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_289_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSellmeier::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_289_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_289_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSellmeier::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_289_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitSellmeier::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_289_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSellmeier::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_289_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitSellmeier::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitSellmeier", 1311, G__SLitraniDict_289_0_18, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier), -1, 0, 1, 1, 1, 0, "u 'TLitSellmeier' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitSellmeier", 1437, G__SLitraniDict_289_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_289_0_20, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitSellmeier), -1, 1, 1, 1, 1, 0, "u 'TLitSellmeier' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitMedium(void) {
   /* TLitMedium */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium));
   G__memfunc_setup("AddMe",443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "Add this medium to the list of media", (void*) NULL, 0);
   G__memfunc_setup("FindIindex",994,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 11 - -", "Find imaginary part of index of refraction of wrapping", (void*) NULL, 0);
   G__memfunc_setup("FindRindex",1003,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 11 - -", "Find real part of index of refraction of wrapping", (void*) NULL, 0);
   G__memfunc_setup("FindWrapDiffus",1404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 11 - -", "Find % of diffusion for wrapping.", (void*) NULL, 0);
   G__memfunc_setup("FindWrapMu",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 11 - -", "Find fit for magnetic permeability mu of wrapping.", (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "basic initialization", (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "Pointers to 0", (void*) NULL, 0);
   G__memfunc_setup("InitWrapping",1244,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "initializes variables for wrappings", (void*) NULL, 0);
   G__memfunc_setup("MoreAbsorption",1460,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - -", "Defines supplementary absorption, if any.", (void*) NULL, 0);
   G__memfunc_setup("NewPhiMu",781,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - -", "calculates the 3 fPhiMua/b/c", (void*) NULL, 0);
   G__memfunc_setup("PrintProblem",1246,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", "Header for signaling a problem", (void*) NULL, 0);
   G__memfunc_setup("PrintName",910,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", "prints the name of the medium", (void*) NULL, 0);
   G__memfunc_setup("ProblemHeader",1306,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", "header before reporting a problem", (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_14, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_15, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 9, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"U 'TGeoMaterial' - 10 - - g - 'Bool_t' 0 - - "
"C - - 10 - - C - - 10 - - "
"C - - 10 '\"\"' - C - - 10 '\"\"' - "
"D - 'Double_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_16, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 9, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"U 'TGeoMaterial' - 10 - - g - 'Bool_t' 0 - - "
"C - - 10 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 '-1' - d - 'Double_t' 0 '-1' - "
"D - 'Double_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_17, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 9, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"U 'TGeoMaterial' - 10 - - g - 'Bool_t' 0 - - "
"d - 'Double_t' 0 - - C - - 10 - - "
"C - - 10 '\"\"' - C - - 10 '\"\"' - "
"D - 'Double_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_18, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 9, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"U 'TGeoMaterial' - 10 - - g - 'Bool_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 '-1' - d - 'Double_t' 0 '-1' - "
"D - 'Double_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_19, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 16, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - g - 'Bool_t' 0 - - "
"C - - 10 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_20, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 16, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - g - 'Bool_t' 0 - - "
"C - - 10 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_21, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 16, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - g - 'Bool_t' 0 - - "
"d - 'Double_t' 0 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_22, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 16, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - g - 'Bool_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_23, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 5, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"U 'TGeoMaterial' - 10 - - C - - 10 '\"\"' - "
"D - 'Double_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMedium",990,G__SLitraniDict_319_0_24, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 5, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"U 'TGeoMaterial' - 10 - - d - 'Double_t' 0 - - "
"D - 'Double_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckIt",667,G__SLitraniDict_319_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dEdx",389,G__SLitraniDict_319_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - - d - 'Double_t' 0 - - "
"g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dEdxActiv",892,G__SLitraniDict_319_0_27, 105, G__get_linked_tagnum(&G__SLitraniDictLN_dEdxMethod), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diffus",609,G__SLitraniDict_319_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoWLS",425,G__SLitraniDict_319_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"i - 'Int_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindLitMedium",1291,G__SLitraniDict_319_0_30, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 1, 3, 1, 0, "C - - 10 - -", (char*)NULL, (void*) G__func2void( (TLitMedium* (*)(const char*))(&TLitMedium::FindLitMedium) ), 0);
   G__memfunc_setup("FindSpectrum",1236,G__SLitraniDict_319_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FluoComponent",1353,G__SLitraniDict_319_0_32, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbsL",642,G__SLitraniDict_319_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbsLb",740,G__SLitraniDict_319_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbsLc",741,G__SLitraniDict_319_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAniAbsL",922,G__SLitraniDict_319_0_36, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnisotropy",1368,G__SLitraniDict_319_0_37, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanStopElectron",1812,G__SLitraniDict_319_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdEdx",677,G__SLitraniDict_319_0_39, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiffLength",1275,G__SLitraniDict_319_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDPLCosTheta",1307,G__SLitraniDict_319_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDPLIsDepol",1200,G__SLitraniDict_319_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDPLNextMed",1205,G__SLitraniDict_319_0_43, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDPLTheta",1014,G__SLitraniDict_319_0_44, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEc",456,G__SLitraniDict_319_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetElectronProperties",2185,G__SLitraniDict_319_0_46, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsa",681,G__SLitraniDict_319_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsb",682,G__SLitraniDict_319_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpsc",683,G__SLitraniDict_319_0_49, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFluorescent",1450,G__SLitraniDict_319_0_50, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHasAbsorption",1629,G__SLitraniDict_319_0_51, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHasDiffusion",1507,G__SLitraniDict_319_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHasRayleigh",1393,G__SLitraniDict_319_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHasWLS",818,G__SLitraniDict_319_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistFluo",1102,G__SLitraniDict_319_0_55, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIChangeWithWvl",1668,G__SLitraniDict_319_0_56, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__SLitraniDict_319_0_57, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKind",678,G__SLitraniDict_319_0_58, 105, G__get_linked_tagnum(&G__SLitraniDictLN_KindOfMedium), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLitSpectrum",1436,G__SLitraniDict_319_0_59, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpectrum), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatCounter",1314,G__SLitraniDict_319_0_60, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatCounterD",1382,G__SLitraniDict_319_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMu",482,G__SLitraniDict_319_0_62, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetnCerenkov",1227,G__SLitraniDict_319_0_63, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPhot",777,G__SLitraniDict_319_0_64, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - Edep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPEOk",623,G__SLitraniDict_319_0_65, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhimua",900,G__SLitraniDict_319_0_66, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhimub",901,G__SLitraniDict_319_0_67, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhimuc",902,G__SLitraniDict_319_0_68, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhotMev",995,G__SLitraniDict_319_0_69, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRayleighLength",1719,G__SLitraniDict_319_0_70, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRevCounter",1325,G__SLitraniDict_319_0_71, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRevCounterD",1393,G__SLitraniDict_319_0_72, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRm",479,G__SLitraniDict_319_0_73, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSinThetaMax",1382,G__SLitraniDict_319_0_74, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSupplAbs",1098,G__SLitraniDict_319_0_75, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSFitIndex",1250,G__SLitraniDict_319_0_76, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSFitMu",940,G__SLitraniDict_319_0_77, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSIndex",959,G__SLitraniDict_319_0_78, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSMu",649,G__SLitraniDict_319_0_79, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSNameIndex",1344,G__SLitraniDict_319_0_80, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TString), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSNameMu",1034,G__SLitraniDict_319_0_81, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TString), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSNextMed",1148,G__SLitraniDict_319_0_82, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSThinSlice",1354,G__SLitraniDict_319_0_83, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSWidth",967,G__SLitraniDict_319_0_84, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWLSL",610,G__SLitraniDict_319_0_85, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWrapIndex",1202,G__SLitraniDict_319_0_86, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TComplex), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWrapMu",892,G__SLitraniDict_319_0_87, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX0",424,G__SLitraniDict_319_0_88, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXSectnPE",1034,G__SLitraniDict_319_0_89, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - MeV", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoodForCPE",904,G__SLitraniDict_319_0_90, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBirefr",790,G__SLitraniDict_319_0_91, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBirefr",790,G__SLitraniDict_319_0_92, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBirefr",790,G__SLitraniDict_319_0_93, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBirefr",790,G__SLitraniDict_319_0_94, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TLitSellmeier' - 40 - - U 'TLitSellmeier' - 40 - - "
"U 'TLitSellmeier' - 40 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDepolish",1012,G__SLitraniDict_319_0_95, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TLitMedium' - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFluorescent",1350,G__SLitraniDict_319_0_96, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIsotropic",1144,G__SLitraniDict_319_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIsotropic",1144,G__SLitraniDict_319_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIsotropic",1144,G__SLitraniDict_319_0_99, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '0.0' - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '0.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIsotropic",1144,G__SLitraniDict_319_0_100, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TLitSellmeier' - 40 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNonProportional",1776,G__SLitraniDict_319_0_101, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSensible",1009,G__SLitraniDict_319_0_102, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSlice",684,G__SLitraniDict_319_0_103, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSupplAbs",998,G__SLitraniDict_319_0_104, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsThinSlice",1087,G__SLitraniDict_319_0_105, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TLitMedium' - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUniAxialNegBirefr",1867,G__SLitraniDict_319_0_106, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUniAxialNegBirefr",1867,G__SLitraniDict_319_0_107, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUniAxialNegBirefr",1867,G__SLitraniDict_319_0_108, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUniAxialNegBirefr",1867,G__SLitraniDict_319_0_109, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TLitSellmeier' - 40 - - U 'TLitSellmeier' - 40 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUniAxialPosBirefr",1891,G__SLitraniDict_319_0_110, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUniAxialPosBirefr",1891,G__SLitraniDict_319_0_111, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUniAxialPosBirefr",1891,G__SLitraniDict_319_0_112, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUniAxialPosBirefr",1891,G__SLitraniDict_319_0_113, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TLitSellmeier' - 40 - - U 'TLitSellmeier' - 40 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsThinSlice",1087,G__SLitraniDict_319_0_114, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TLitMedium' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWrapping",1028,G__SLitraniDict_319_0_115, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewWavelength",1343,G__SLitraniDict_319_0_116, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewWavelengthAll",1624,G__SLitraniDict_319_0_117, 121, -1, -1, 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Bool_t))(&TLitMedium::NewWavelengthAll) ), 0);
   G__memfunc_setup("Print",525,G__SLitraniDict_319_0_118, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbsLa",751,G__SLitraniDict_319_0_119, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbsLa",751,G__SLitraniDict_319_0_120, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbsLb",752,G__SLitraniDict_319_0_121, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbsLb",752,G__SLitraniDict_319_0_122, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbsLc",753,G__SLitraniDict_319_0_123, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbsLc",753,G__SLitraniDict_319_0_124, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsWrapping",1320,G__SLitraniDict_319_0_125, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '90.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsWrapping",1320,G__SLitraniDict_319_0_126, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - d - 'Double_t' 0 '1.0' - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '90.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsWrapping",1320,G__SLitraniDict_319_0_127, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - C - - 10 - - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '90.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsWrapping",1320,G__SLitraniDict_319_0_128, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 '1.0' - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '90.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsWrapping",1320,G__SLitraniDict_319_0_129, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '90.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsWrapping",1320,G__SLitraniDict_319_0_130, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - C - - 10 - - "
"C - - 10 - - d - 'Double_t' 0 '1.0' - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '90.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsWrapping",1320,G__SLitraniDict_319_0_131, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - C - - 10 - - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '90.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsWrapping",1320,G__SLitraniDict_319_0_132, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 '1.0' - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '90.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanStopElectron",1824,G__SLitraniDict_319_0_133, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCascades",1091,G__SLitraniDict_319_0_134, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 '-1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCascades",1091,G__SLitraniDict_319_0_135, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDepolished",1325,G__SLitraniDict_319_0_136, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TLitMedium' - 0 - - d - 'Double_t' 0 '60.0' ThetaDepls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiffusionLength",1845,G__SLitraniDict_319_0_137, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiffusionLength",1845,G__SLitraniDict_319_0_138, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEc",468,G__SLitraniDict_319_0_139, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFactorOnAbsL",1450,G__SLitraniDict_319_0_140, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistFluo",1114,G__SLitraniDict_319_0_141, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLitSpectrum",1448,G__SLitraniDict_319_0_142, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TLitSpectrum' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKind",690,G__SLitraniDict_319_0_143, 121, -1, -1, 0, 1, 1, 1, 0, "i 'KindOfMedium' - 0 - kind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNonPropLightYield",2023,G__SLitraniDict_319_0_144, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhotMev",1007,G__SLitraniDict_319_0_145, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - photmev d - 'Double_t' 0 '1.0' resScale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRayleighLength",1731,G__SLitraniDict_319_0_146, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRayleighLength",1731,G__SLitraniDict_319_0_147, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRm",491,G__SLitraniDict_319_0_148, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - rm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWLS",546,G__SLitraniDict_319_0_149, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TLitSpectrum' - 0 - - d - 'Double_t' 0 - wlsl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWLS",546,G__SLitraniDict_319_0_150, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TLitSpectrum' - 0 - - C - - 10 - wlslFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWrapIndex",1214,G__SLitraniDict_319_0_151, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX0",436,G__SLitraniDict_319_0_152, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXSectnPE",1046,G__SLitraniDict_319_0_153, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXSectnPE",1046,G__SLitraniDict_319_0_154, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSplineFit' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WaveAndLife",1062,G__SLitraniDict_319_0_155, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"i - 'Int_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WithThinSlice",1311,G__SLitraniDict_319_0_156, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TLitMedium' - 0 - - d - 'Double_t' 0 - - "
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WithThinSlice",1311,G__SLitraniDict_319_0_157, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TLitMedium' - 0 - - d - 'Double_t' 0 - - "
"C - - 10 - - d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WithThinSlice",1311,G__SLitraniDict_319_0_158, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TLitMedium' - 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WithThinSlice",1311,G__SLitraniDict_319_0_159, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TLitMedium' - 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_319_0_160, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitMedium::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_319_0_161, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitMedium::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_319_0_162, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitMedium::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_319_0_163, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitMedium::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_319_0_167, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_319_0_168, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitMedium::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_319_0_169, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitMedium::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_319_0_170, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitMedium::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_319_0_171, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitMedium::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitMedium", 990, G__SLitraniDict_319_0_172, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 1, 1, 1, 0, "u 'TLitMedium' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitMedium", 1116, G__SLitraniDict_319_0_173, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitVolume(void) {
   /* TLitVolume */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume));
   G__memfunc_setup("AddMe",443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitVolume",1013,G__SLitraniDict_322_0_4, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitVolume",1013,G__SLitraniDict_322_0_5, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume), -1, 0, 1, 1, 1, 0, "U 'TGeoVolume' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitVolume",1013,G__SLitraniDict_322_0_6, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume), -1, 0, 5, 1, 1, 0, 
"U 'TGeoVolume' - 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEmission",1326,G__SLitraniDict_322_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearWCSdone",1146,G__SLitraniDict_322_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmissionToWCS",1271,G__SLitraniDict_322_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gen",282,G__SLitraniDict_322_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenEField",835,G__SLitraniDict_322_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSourceDir",1194,G__SLitraniDict_322_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSourcePoint",1429,G__SLitraniDict_322_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAniAbsL",922,G__SLitraniDict_322_0_14, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAniOx",767,G__SLitraniDict_322_0_15, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAniOy",768,G__SLitraniDict_322_0_16, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAniOz",769,G__SLitraniDict_322_0_17, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnisotropic",1451,G__SLitraniDict_322_0_18, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChooseIndex",1401,G__SLitraniDict_322_0_19, 105, G__get_linked_tagnum(&G__SLitraniDictLN_ChoiceOfn), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosAccept",1173,G__SLitraniDict_322_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamage",863,G__SLitraniDict_322_0_21, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'TVector3' - 10 - - d - 'Double_t' 0 - L0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamA",627,G__SLitraniDict_322_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamAxis",967,G__SLitraniDict_322_0_23, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamByShower",1381,G__SLitraniDict_322_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamE0",679,G__SLitraniDict_322_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamFac",828,G__SLitraniDict_322_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamFitGz",1046,G__SLitraniDict_322_0_27, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamFitKimax",1359,G__SLitraniDict_322_0_28, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamFmax",958,G__SLitraniDict_322_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamGamma",1045,G__SLitraniDict_322_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamGz",755,G__SLitraniDict_322_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamGzMax",1049,G__SLitraniDict_322_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamKimax",1068,G__SLitraniDict_322_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamStart",1088,G__SLitraniDict_322_0_34, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamStep",974,G__SLitraniDict_322_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamSupFac",1140,G__SLitraniDict_322_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamZm",761,G__SLitraniDict_322_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDamZs",767,G__SLitraniDict_322_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetAxis",978,G__SLitraniDict_322_0_39, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetKind",963,G__SLitraniDict_322_0_40, 105, G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDet), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDielChange",1252,G__SLitraniDict_322_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistCatAn",1147,G__SLitraniDict_322_0_42, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEmission",1127,G__SLitraniDict_322_0_43, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'TVector3' - 1 - - u 'TVector3' - 1 - - "
"u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEmitPhoton",1319,G__SLitraniDict_322_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntrance",1104,G__SLitraniDict_322_0_45, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEx",477,G__SLitraniDict_322_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEy",478,G__SLitraniDict_322_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEz",479,G__SLitraniDict_322_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitQE",729,G__SLitraniDict_322_0_49, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFromFace",1059,G__SLitraniDict_322_0_50, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGainProfile",1392,G__SLitraniDict_322_0_51, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TSplineFit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeoVolume",1203,G__SLitraniDict_322_0_52, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TGeoVolume), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsQE",626,G__SLitraniDict_322_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKindOfEmission",1698,G__SLitraniDict_322_0_54, 105, G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLitMedium",1194,G__SLitraniDict_322_0_55, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMedium), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNameGP",824,G__SLitraniDict_322_0_56, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNameQE",823,G__SLitraniDict_322_0_57, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPath",685,G__SLitraniDict_322_0_58, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQE",438,G__SLitraniDict_322_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRk2",527,G__SLitraniDict_322_0_60, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourceDir",1200,G__SLitraniDict_322_0_61, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourcePoint",1435,G__SLitraniDict_322_0_62, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStep",700,G__SLitraniDict_322_0_63, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStopAlways",1335,G__SLitraniDict_322_0_64, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaMax",1084,G__SLitraniDict_322_0_65, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVDrifte",980,G__SLitraniDict_322_0_66, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSdone",947,G__SLitraniDict_322_0_67, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSE",594,G__SLitraniDict_322_0_68, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSEntrance",1341,G__SLitraniDict_322_0_69, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSSourceDir",1437,G__SLitraniDict_322_0_70, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSSourcePoint",1672,G__SLitraniDict_322_0_71, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXYZEntrance",1371,G__SLitraniDict_322_0_72, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAccept",780,G__SLitraniDict_322_0_73, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDamage",763,G__SLitraniDict_322_0_74, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsStepping",1030,G__SLitraniDict_322_0_75, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewWavelength",1343,G__SLitraniDict_322_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewWavelengthAll",1624,G__SLitraniDict_322_0_77, 121, -1, -1, 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Bool_t))(&TLitVolume::NewWavelengthAll) ), 0);
   G__memfunc_setup("RadiationDamage",1498,G__SLitraniDict_322_0_78, 103, -1, G__defined_typename("Bool_t"), 0, 8, 1, 1, 0, 
"U 'TVector3' - 10 - - U 'TVector3' - 10 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 '0.4' - d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RadiationDamage",1498,G__SLitraniDict_322_0_79, 103, -1, G__defined_typename("Bool_t"), 0, 8, 1, 1, 0, 
"U 'TVector3' - 10 - - U 'TVector3' - 10 - - "
"C - - 10 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 '0.4' - d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RadiationDamage",1498,G__SLitraniDict_322_0_80, 103, -1, G__defined_typename("Bool_t"), 0, 7, 1, 1, 0, 
"U 'TVector3' - 10 - - U 'TVector3' - 10 - - "
"d - 'Double_t' 0 - - C - - 10 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 '0.4' - "
"d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RadiationDamage",1498,G__SLitraniDict_322_0_81, 103, -1, G__defined_typename("Bool_t"), 0, 7, 1, 1, 0, 
"U 'TVector3' - 10 - - U 'TVector3' - 10 - - "
"C - - 10 - - C - - 10 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 '0.4' - "
"d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecordDamages",1297,G__SLitraniDict_322_0_82, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - - "
"i - 'Int_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAPD",513,G__SLitraniDict_322_0_83, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - - s - 'Short_t' 0 - - "
"d - 'Double_t' 0 '-1.0' - d - 'Double_t' 0 '1.0e+8' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAxisDir",992,G__SLitraniDict_322_0_84, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '0.0' - "
"d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__SLitraniDict_322_0_85, 121, -1, -1, 0, 6, 1, 1, 0, 
"g - 'Bool_t' 0 - - C - - 10 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 '0.0' - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDielTensor",1317,G__SLitraniDict_322_0_86, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEField",853,G__SLitraniDict_322_0_87, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' - d - 'Double_t' 0 '90.0' - "
"d - 'Double_t' 0 '0.0' - i 'ChoiceOfn' - 0 'israndom' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEmission",1139,G__SLitraniDict_322_0_88, 103, -1, G__defined_typename("Bool_t"), 0, 8, 1, 1, 0, 
"i 'KindOfDist' - 0 'on4pi' - d - 'Double_t' 0 '180.0' - "
"u 'TVector3' - 0 '{0.0,0.0,0.0}' - C - - 10 '\"\"' - "
"g - 'Bool_t' 0 'kFALSE' - u 'TVector3' - 0 '{0.0,0.0,0.0}' - "
"g - 'Bool_t' 0 'kFALSE' - u 'TVector3' - 0 '{0.0,0.0,0.0}' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeoVolume",1215,G__SLitraniDict_322_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGeoVolume' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKindOfEmission",1710,G__SLitraniDict_322_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "i 'KindOfDist' - 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetM",377,G__SLitraniDict_322_0_91, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPath",697,G__SLitraniDict_322_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNoDamage",1064,G__SLitraniDict_322_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOpticalAxis",1421,G__SLitraniDict_322_0_94, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhotoTube",1222,G__SLitraniDict_322_0_95, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - - d - 'Double_t' 0 - dir "
"d - 'Double_t' 0 '-1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSourcePoint",1447,G__SLitraniDict_322_0_96, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - - u 'TVector3' - 0 '{0.0,0.0,0.0}' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStep",712,G__SLitraniDict_322_0_97, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWCS",537,G__SLitraniDict_322_0_98, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowDamage",992,G__SLitraniDict_322_0_99, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowerDamage",1207,G__SLitraniDict_322_0_100, 103, -1, G__defined_typename("Bool_t"), 0, 7, 1, 1, 0, 
"U 'TVector3' - 10 - - U 'TVector3' - 10 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"g - 'Bool_t' 0 'kTRUE' - d - 'Double_t' 0 '0.4' - "
"d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowerDamage",1207,G__SLitraniDict_322_0_101, 103, -1, G__defined_typename("Bool_t"), 0, 7, 1, 1, 0, 
"U 'TVector3' - 10 - - U 'TVector3' - 10 - - "
"C - - 10 - - d - 'Double_t' 0 - - "
"g - 'Bool_t' 0 'kTRUE' - d - 'Double_t' 0 '0.4' - "
"d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_322_0_102, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitVolume::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_322_0_103, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitVolume::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_322_0_104, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitVolume::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_322_0_105, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitVolume::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_322_0_109, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_322_0_110, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitVolume::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_322_0_111, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitVolume::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_322_0_112, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitVolume::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_322_0_113, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitVolume::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitVolume", 1013, G__SLitraniDict_322_0_114, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume), -1, 0, 1, 1, 1, 0, "u 'TLitVolume' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitVolume", 1139, G__SLitraniDict_322_0_115, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_322_0_116, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitVolume), -1, 1, 1, 1, 1, 0, "u 'TLitVolume' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLit(void) {
   /* TLit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLit));
   G__memfunc_setup("TLit",381,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLit), -1, 0, 0, 1, 4, 0, "", "Private constructor: TLit is a singleton!", (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRef",689,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDate",682,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StatDef",683,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Book",395,G__SLitraniDict_385_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLit::Book) ), 0);
   G__memfunc_setup("BookCanvas",999,G__SLitraniDict_385_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookCanvas",999,G__SLitraniDict_385_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookCanvas",999,G__SLitraniDict_385_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPath",875,G__SLitraniDict_385_0_11, 115, -1, G__defined_typename("Short_t"), 0, 1, 1, 1, 8, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseFiles",1001,G__SLitraniDict_385_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseFilesR",1083,G__SLitraniDict_385_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__SLitraniDict_385_0_14, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLit), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TLit* (*)())(&TLit::Get) ), 0);
   G__memfunc_setup("GetLineSize",1091,G__SLitraniDict_385_0_15, 115, -1, G__defined_typename("Short_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Short_t (*)())(&TLit::GetLineSize) ), 0);
   G__memfunc_setup("GetListFileName",1469,G__SLitraniDict_385_0_16, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TString), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TString* (*)())(&TLit::GetListFileName) ), 0);
   G__memfunc_setup("GetNbButtons",1215,G__SLitraniDict_385_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&TLit::GetNbButtons) ), 0);
   G__memfunc_setup("GetRootFileName",1477,G__SLitraniDict_385_0_18, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TString), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TString* (*)())(&TLit::GetRootFileName) ), 0);
   G__memfunc_setup("GetSize",699,G__SLitraniDict_385_0_19, 115, -1, G__defined_typename("Short_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Short_t (*)())(&TLit::GetSize) ), 0);
   G__memfunc_setup("GetTestCalc",1075,G__SLitraniDict_385_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTopXGen",965,G__SLitraniDict_385_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&TLit::GetTopXGen) ), 0);
   G__memfunc_setup("GetTopYGen",966,G__SLitraniDict_385_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&TLit::GetTopYGen) ), 0);
   G__memfunc_setup("GetWCSofNode",1128,G__SLitraniDict_385_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 - - u 'TVector3' - 1 - - "
"u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWithDate",1082,G__SLitraniDict_385_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&TLit::GetWithDate) ), 0);
   G__memfunc_setup("Kill",396,G__SLitraniDict_385_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLit::Kill) ), 0);
   G__memfunc_setup("OpenFilesR",983,G__SLitraniDict_385_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenFilesR",983,G__SLitraniDict_385_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenFilesW",988,G__SLitraniDict_385_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPeriod",1136,G__SLitraniDict_385_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '50000' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PublishVersion",1469,G__SLitraniDict_385_0_30, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RestoreComments",1578,G__SLitraniDict_385_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectRun",917,G__SLitraniDict_385_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectRun",917,G__SLitraniDict_385_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineSize",1103,G__SLitraniDict_385_0_34, 121, -1, -1, 0, 1, 3, 1, 0, "s - 'Short_t' 0 '119' -", (char*)NULL, (void*) G__func2void( (void (*)(Short_t))(&TLit::SetLineSize) ), 0);
   G__memfunc_setup("SetListFileName",1481,G__SLitraniDict_385_0_35, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 '\"slitrani\"' -", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&TLit::SetListFileName) ), 0);
   G__memfunc_setup("SetNbButtons",1227,G__SLitraniDict_385_0_36, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 '20' -", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&TLit::SetNbButtons) ), 0);
   G__memfunc_setup("SetParameters",1344,G__SLitraniDict_385_0_37, 121, -1, -1, 0, 8, 3, 1, 0, 
"s - 'Short_t' 0 '5' - i - 'Int_t' 0 '20' - "
"i - 'Int_t' 0 '2' - i - 'Int_t' 0 '2' - "
"g - 'Bool_t' 0 'kFALSE' - C - - 10 '\"slitrani\"' - "
"C - - 10 '\"slitrani\"' - s - 'Short_t' 0 '119' -", (char*)NULL, (void*) G__func2void( (void (*)(Short_t, Int_t, Int_t, Int_t, Bool_t, const char*, const char*, Short_t))(&TLit::SetParameters) ), 0);
   G__memfunc_setup("SetRootFileName",1489,G__SLitraniDict_385_0_38, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 '\"slitrani\"' -", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&TLit::SetRootFileName) ), 0);
   G__memfunc_setup("SetSize",711,G__SLitraniDict_385_0_39, 121, -1, -1, 0, 1, 3, 1, 0, "s - 'Short_t' 0 - size", (char*)NULL, (void*) G__func2void( (void (*)(Short_t))(&TLit::SetSize) ), 0);
   G__memfunc_setup("SetTestCalc",1087,G__SLitraniDict_385_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - test", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTopXGen",977,G__SLitraniDict_385_0_41, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 '2' -", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&TLit::SetTopXGen) ), 0);
   G__memfunc_setup("SetTopYGen",978,G__SLitraniDict_385_0_42, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 '2' -", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&TLit::SetTopYGen) ), 0);
   G__memfunc_setup("SetWithDate",1094,G__SLitraniDict_385_0_43, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&TLit::SetWithDate) ), 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_385_0_44, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_385_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_385_0_46, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_385_0_47, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__SLitraniDict_385_0_48, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__SLitraniDict_385_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__SLitraniDict_385_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_385_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_385_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_385_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_385_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_385_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLit", 381, G__SLitraniDict_385_0_56, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLit), -1, 0, 1, 1, 1, 0, "u 'TLit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_385_0_57, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLit), -1, 1, 1, 1, 1, 0, "u 'TLit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitResults(void) {
   /* TLitResults */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults));
   G__memfunc_setup("AtLeastOne",976,(G__InterfaceMethod) NULL, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 2, 0, "", "Chooses at least one fluorescent material to histogram", (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "Initialization", (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "Put pointers to 0", (void*) NULL, 0);
   G__memfunc_setup("TLitResults",1135,G__SLitraniDict_407_0_4, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitResults",1135,G__SLitraniDict_407_0_5, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults), -1, 0, 4, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"i - 'Int_t' 0 - - d - 'Double_t' 0 '-2.0e+20' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToList",872,G__SLitraniDict_407_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CInit",471,G__SLitraniDict_407_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Conclusion",1053,G__SLitraniDict_407_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("D",68,G__SLitraniDict_407_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("D1",117,G__SLitraniDict_407_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DelHistos",911,G__SLitraniDict_407_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DelPaveT",757,G__SLitraniDict_407_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoStat",591,G__SLitraniDict_407_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfDet",1166,G__SLitraniDict_407_0_15, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__SLitraniDict_407_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXparam",905,G__SLitraniDict_407_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GInit",475,G__SLitraniDict_407_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasFluo",690,G__SLitraniDict_407_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("N",78,G__SLitraniDict_407_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N1",127,G__SLitraniDict_407_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetCounters",1366,G__SLitraniDict_407_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_407_0_25, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitResults::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_407_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitResults::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_407_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitResults::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_407_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitResults::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_407_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_407_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitResults::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_407_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitResults::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_407_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitResults::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_407_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitResults::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitResults", 1135, G__SLitraniDict_407_0_37, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults), -1, 0, 1, 1, 1, 0, "u 'TLitResults' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitResults", 1261, G__SLitraniDict_407_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_407_0_39, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults), -1, 1, 1, 1, 1, 0, "u 'TLitResults' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitMarrow(void) {
   /* TLitMarrow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow));
   G__memfunc_setup("BookHistos",1029,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "All booking of histograms", (void*) NULL, 0);
   G__memfunc_setup("FillHistos",1025,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "Filling of all histograms", (void*) NULL, 0);
   G__memfunc_setup("GlobalP",673,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults), -1, 0, 0, 1, 2, 8, "", "Pointer to global statistics", (void*) NULL, 0);
   G__memfunc_setup("TLitMarrow",1013,G__SLitraniDict_408_0_4, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitMarrow",1013,G__SLitraniDict_408_0_5, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow), -1, 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearHistos",1121,G__SLitraniDict_408_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("D",68,G__SLitraniDict_408_0_7, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawAbnorm",1005,G__SLitraniDict_408_0_8, 121, -1, -1, 0, 0, 1, 1, 8, "", "Photons lost for abnormal reasons per run", (void*) NULL, 0);
   G__memfunc_setup("DrawAbsBef",945,G__SLitraniDict_408_0_9, 121, -1, -1, 0, 0, 1, 1, 8, "", "Photons absorbed before wrapping per run", (void*) NULL, 0);
   G__memfunc_setup("DrawAbsMat",966,G__SLitraniDict_408_0_10, 121, -1, -1, 0, 0, 1, 1, 8, "", "Photons lost inside non-sensitive material per run", (void*) NULL, 0);
   G__memfunc_setup("DrawAbsRvt",992,G__SLitraniDict_408_0_11, 121, -1, -1, 0, 0, 1, 1, 8, "", "Photons absorbed by wrapping per run", (void*) NULL, 0);
   G__memfunc_setup("DrawAllLosses",1312,G__SLitraniDict_408_0_12, 121, -1, -1, 0, 0, 1, 1, 8, "", "Draw all losses, superimposed.", (void*) NULL, 0);
   G__memfunc_setup("DrawEfficiency",1411,G__SLitraniDict_408_0_13, 121, -1, -1, 0, 0, 1, 1, 8, "", "Efficincy per run", (void*) NULL, 0);
   G__memfunc_setup("DrawLossAng",1093,G__SLitraniDict_408_0_14, 121, -1, -1, 0, 0, 1, 1, 8, "", "Lost because of acceptance angle per run", (void*) NULL, 0);
   G__memfunc_setup("DrawLossQE",965,G__SLitraniDict_408_0_15, 121, -1, -1, 0, 0, 1, 1, 8, "", "Lost because of quantum efficiency per run", (void*) NULL, 0);
   G__memfunc_setup("DrawOutSide",1099,G__SLitraniDict_408_0_16, 121, -1, -1, 0, 0, 1, 1, 8, "", "Photons lost because they leave the setup per run", (void*) NULL, 0);
   G__memfunc_setup("DrawTooFew",994,G__SLitraniDict_408_0_17, 121, -1, -1, 0, 0, 1, 1, 8, "", "Photons lost because of too few electrons in APD per run", (void*) NULL, 0);
   G__memfunc_setup("DrawTooLate",1094,G__SLitraniDict_408_0_18, 121, -1, -1, 0, 0, 1, 1, 8, "", "Photons lost because seen too late per run", (void*) NULL, 0);
   G__memfunc_setup("GetfH",462,G__SLitraniDict_408_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,G__SLitraniDict_408_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N",78,G__SLitraniDict_408_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N1",127,G__SLitraniDict_408_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetCounter",1251,G__SLitraniDict_408_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Summary",750,G__SLitraniDict_408_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_408_0_25, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitMarrow::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_408_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitMarrow::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_408_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitMarrow::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_408_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitMarrow::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_408_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_408_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitMarrow::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_408_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitMarrow::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_408_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitMarrow::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_408_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitMarrow::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitMarrow", 1013, G__SLitraniDict_408_0_37, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow), -1, 0, 1, 1, 1, 0, "u 'TLitMarrow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitMarrow", 1139, G__SLitraniDict_408_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_408_0_39, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow), -1, 1, 1, 1, 1, 0, "u 'TLitMarrow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitSpontan(void) {
   /* TLitSpontan */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan));
   G__memfunc_setup("FillDeath",877,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpontan",1120,G__SLitraniDict_409_0_4, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpontan",1120,G__SLitraniDict_409_0_5, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan), -1, 0, 5, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - g - 'Bool_t' 0 'kFALSE' - "
"g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitSpontan",1120,G__SLitraniDict_409_0_6, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - d - 'Double_t' 0 - - "
"g - 'Bool_t' 0 'kFALSE' - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AllTracksToDraw",1490,G__SLitraniDict_409_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gen",282,G__SLitraniDict_409_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 '1' - "
"d - 'Double_t' 0 '-2.0e+20' - g - 'Bool_t' 0 'kTRUE' - "
"g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecordedTracks",1712,G__SLitraniDict_409_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MoveCradle",994,G__SLitraniDict_409_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGeoMatrix' - 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NameFromPath",1186,G__SLitraniDict_409_0_11, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Periodicity",1157,G__SLitraniDict_409_0_12, 121, -1, -1, 0, 1, 1, 1, 8, "n - 'Long64_t' 0 '5000' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__SLitraniDict_409_0_13, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEmission",1139,G__SLitraniDict_409_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 8, 1, 1, 0, 
"i 'KindOfDist' - 0 'on4pi' - d - 'Double_t' 0 '180.0' - "
"u 'TVector3' - 0 '{0.0,0.0,0.0}' - C - - 10 '\"\"' - "
"g - 'Bool_t' 0 'kFALSE' - u 'TVector3' - 0 '{0.0,0.0,0.0}' - "
"g - 'Bool_t' 0 'kFALSE' - u 'TVector3' - 0 '{0.0,0.0,0.0}' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillDeath",1177,G__SLitraniDict_409_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1F' - 0 - - U 'TH1F' - 0 - - "
"U 'TH1F' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecordedTracks",1724,G__SLitraniDict_409_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWvlgth",936,G__SLitraniDict_409_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackToDraw",1094,G__SLitraniDict_409_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_409_0_19, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitSpontan::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_409_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSpontan::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_409_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitSpontan::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_409_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitSpontan::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_409_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_409_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSpontan::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_409_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitSpontan::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_409_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitSpontan::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_409_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitSpontan::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitSpontan", 1120, G__SLitraniDict_409_0_31, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan), -1, 0, 1, 1, 1, 0, "u 'TLitSpontan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitSpontan", 1246, G__SLitraniDict_409_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_409_0_33, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitSpontan), -1, 1, 1, 1, 1, 0, "u 'TLitSpontan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitranino(void) {
   /* TLitranino */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino));
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitranino",1028,G__SLitraniDict_410_0_3, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitranino",1028,G__SLitraniDict_410_0_4, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino), -1, 0, 5, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - U 'TLitVolume' - 0 - - "
"d - 'Double_t' 0 '500.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AgainstRev",1012,G__SLitraniDict_410_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AgainstShape",1208,G__SLitraniDict_410_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AllTracksToDraw",1490,G__SLitraniDict_410_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Detector",826,G__SLitraniDict_410_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectorN",904,G__SLitraniDict_410_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gen",282,G__SLitraniDict_410_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 '1' - "
"d - 'Double_t' 0 '-1.0e+20' - g - 'Bool_t' 0 'kTRUE' - "
"g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbsLength",1176,G__SLitraniDict_410_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InDetRecord",1075,G__SLitraniDict_410_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InMatRecord",1080,G__SLitraniDict_410_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InRevRecord",1091,G__SLitraniDict_410_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Jump",412,G__SLitraniDict_410_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Move",407,G__SLitraniDict_410_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnFace",556,G__SLitraniDict_410_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RestartPrinting",1584,G__SLitraniDict_410_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 '1' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbsLength",1188,G__SLitraniDict_410_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - L", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAnimateTracks",1619,G__SLitraniDict_410_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNframes",1016,G__SLitraniDict_410_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackToDraw",1094,G__SLitraniDict_410_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_410_0_23, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitranino::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_410_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitranino::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_410_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitranino::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_410_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitranino::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_410_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_410_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitranino::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_410_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitranino::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_410_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitranino::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_410_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitranino::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitranino", 1028, G__SLitraniDict_410_0_35, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino), -1, 0, 1, 1, 1, 0, "u 'TLitranino' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitranino", 1154, G__SLitraniDict_410_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_410_0_37, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitranino), -1, 1, 1, 1, 1, 0, "u 'TLitranino' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitParticle(void) {
   /* TLitParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle));
   G__memfunc_setup("Exp12",400,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitParticle",1201,G__SLitraniDict_450_0_2, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitParticle",1201,G__SLitraniDict_450_0_3, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle), -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - - i 'PDistribution' - 0 'singlevalued' - "
"d - 'Double_t' 0 '100.0' - d - 'Double_t' 0 '1.0' - "
"d - 'Double_t' 0 '10.0' - d - 'Double_t' 0 '0.5' - "
"d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CerCos",575,G__SLitraniDict_450_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cerenkov",829,G__SLitraniDict_450_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 '1.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CerSin",580,G__SLitraniDict_450_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitCerenkov",1228,G__SLitraniDict_450_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenP",362,G__SLitraniDict_450_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeta",668,G__SLitraniDict_450_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetD",356,G__SLitraniDict_450_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyMev",1202,G__SLitraniDict_450_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExp1",638,G__SLitraniDict_450_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__SLitraniDict_450_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdist",804,G__SLitraniDict_450_0_14, 105, G__get_linked_tagnum(&G__SLitraniDictLN_PDistribution), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPmax",694,G__SLitraniDict_450_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPmean",785,G__SLitraniDict_450_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPmin",692,G__SLitraniDict_450_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSig",579,G__SLitraniDict_450_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlope",803,G__SLitraniDict_450_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpeed",785,G__SLitraniDict_450_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__SLitraniDict_450_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NbCerPhot",869,G__SLitraniDict_450_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__SLitraniDict_450_0_23, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEmitCerenkov",1528,G__SLitraniDict_450_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLorentzE",1119,G__SLitraniDict_450_0_25, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_450_0_26, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_450_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_450_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_450_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_450_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_450_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_450_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_450_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_450_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitParticle", 1201, G__SLitraniDict_450_0_38, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle), -1, 0, 1, 1, 1, 0, "u 'TLitParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitParticle", 1327, G__SLitraniDict_450_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_450_0_40, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle), -1, 1, 1, 1, 1, 0, "u 'TLitParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitBeam(void) {
   /* TLitBeam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam));
   G__memfunc_setup("EmissionToWCS",1271,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitLight",903,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gen4pi",551,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenE",351,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"u 'TVector3' - 11 - - u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenFlat",673,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenK",357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenKECer",708,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"u 'TVector3' - 1 - - u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSourceDir",1194,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenProvided",1111,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSinCos",873,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSourcePoint",1429,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitTracking",1223,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NameFile",769,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextCrossing",1255,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartOneParticle",1636,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WandLCerenkov",1299,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitBeam",754,G__SLitraniDict_452_0_19, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitBeam",754,G__SLitraniDict_452_0_20, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - U 'TLitParticle' - 0 '0' - "
"g - 'Bool_t' 0 'kFALSE' - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gen",282,G__SLitraniDict_452_0_21, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 '1' - "
"d - 'Double_t' 0 '-2.0e+20' - g - 'Bool_t' 0 'kTRUE' - "
"g - 'Bool_t' 0 'kFALSE' - d - 'Double_t' 0 '0.5' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FullName",788,G__SLitraniDict_452_0_22, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FullTitle",917,G__SLitraniDict_452_0_23, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAxisDirx",1100,G__SLitraniDict_452_0_24, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAxisDiry",1101,G__SLitraniDict_452_0_25, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAxisDirz",1102,G__SLitraniDict_452_0_26, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirFace",942,G__SLitraniDict_452_0_27, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistName",1077,G__SLitraniDict_452_0_28, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFromFace",1059,G__SLitraniDict_452_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKindOfEmission",1698,G__SLitraniDict_452_0_30, 105, G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__SLitraniDict_452_0_31, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TLitParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourceFixed",1409,G__SLitraniDict_452_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourcePath",1310,G__SLitraniDict_452_0_33, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourcePoint",1435,G__SLitraniDict_452_0_34, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaMax",1084,G__SLitraniDict_452_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MoveCradle",994,G__SLitraniDict_452_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGeoMatrix' - 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NameFromPath",1186,G__SLitraniDict_452_0_37, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCerenkov",1129,G__SLitraniDict_452_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEmission",1139,G__SLitraniDict_452_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 8, 1, 1, 0, 
"i 'KindOfDist' - 0 'flat' - d - 'Double_t' 0 '1.0' - "
"u 'TVector3' - 0 '{0.0,0.0,0.0}' - C - - 10 '\"\"' - "
"g - 'Bool_t' 0 'kFALSE' - u 'TVector3' - 0 '{0.0,0.0,0.0}' - "
"g - 'Bool_t' 0 'kTRUE' - u 'TVector3' - 0 '{0.0,0.0,0.0}' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticle",1120,G__SLitraniDict_452_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TLitParticle' - 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_452_0_41, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitBeam::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_452_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitBeam::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_452_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitBeam::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_452_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitBeam::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_452_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_452_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitBeam::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_452_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitBeam::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_452_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitBeam::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_452_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitBeam::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitBeam", 754, G__SLitraniDict_452_0_53, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam), -1, 0, 1, 1, 1, 0, "u 'TLitBeam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitBeam", 880, G__SLitraniDict_452_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_452_0_55, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitBeam), -1, 1, 1, 1, 1, 0, "u 'TLitBeam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitCascade(void) {
   /* TLitCascade */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade));
   G__memfunc_setup("CoordStep",915,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaE",559,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 8, "d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmissionToWCS",1271,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitLight",903,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirstStep",932,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenE",351,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"u 'TVector3' - 11 - - u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenK",357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenPositionIndV",1504,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPrint",929,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 8, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NameFile",769,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NameFromPath",1186,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextCrossing",1255,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextStep",827,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeo",583,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitCascade",1057,G__SLitraniDict_453_0_16, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitCascade",1057,G__SLitraniDict_453_0_17, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade), -1, 0, 9, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"i - 'Int_t' 0 '22' - d - 'Double_t' 0 '100.0' - "
"u 'TVector3' - 0 'TVector3(1000000000.0,1000000000.0,1000000000.0)' - u 'TVector3' - 0 'TVector3(0.0,0.0,0.0)' - "
"d - 'Double_t' 0 '0.05' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitCascade",1057,G__SLitraniDict_453_0_18, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade), -1, 0, 9, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - U 'TLitMedium' - 0 - - "
"i - 'Int_t' 0 '22' - d - 'Double_t' 0 '100.0' - "
"u 'TVector3' - 0 'TVector3(1000000000.0,1000000000.0,1000000000.0)' - u 'TVector3' - 0 'TVector3(0.0,0.0,0.0)' - "
"d - 'Double_t' 0 '0.05' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitCascade",1057,G__SLitraniDict_453_0_19, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade), -1, 0, 8, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - u 'TVector3' - 0 - - "
"u 'TVector3' - 0 'TVector3(0.0,0.0,0.0)' - i - 'Int_t' 0 '22' - "
"d - 'Double_t' 0 '100.0' - d - 'Double_t' 0 '0.05' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitCascade",1057,G__SLitraniDict_453_0_20, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade), -1, 0, 8, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"U 'TLitMedium' - 0 - - u 'TVector3' - 0 - - "
"u 'TVector3' - 0 'TVector3(0.0,0.0,0.0)' - i - 'Int_t' 0 '22' - "
"d - 'Double_t' 0 '100.0' - d - 'Double_t' 0 '0.05' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gen",282,G__SLitraniDict_453_0_21, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 '-2.0e+20' - "
"g - 'Bool_t' 0 'kTRUE' - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhotFac",965,G__SLitraniDict_453_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewEnergy",916,G__SLitraniDict_453_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewPosition",1151,G__SLitraniDict_453_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - - u 'TVector3' - 0 '{1000000000.0,1000000000.0,1000000000.0}' - "
"u 'TVector3' - 0 '{0.0,0.0,0.0}' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewPosition",1151,G__SLitraniDict_453_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 0 - - u 'TVector3' - 0 '{0.0,0.0,0.0}' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__SLitraniDict_453_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhotFac",977,G__SLitraniDict_453_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSteps",827,G__SLitraniDict_453_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 '35' - "
"i - 'Int_t' 0 '120' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__SLitraniDict_453_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_453_0_32, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitCascade::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_453_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitCascade::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_453_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitCascade::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_453_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitCascade::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_453_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_453_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitCascade::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_453_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitCascade::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_453_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitCascade::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_453_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitCascade::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitCascade", 1057, G__SLitraniDict_453_0_44, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade), -1, 0, 1, 1, 1, 0, "u 'TLitCascade' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitCascade", 1183, G__SLitraniDict_453_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_453_0_46, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitCascade), -1, 1, 1, 1, 1, 0, "u 'TLitCascade' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitGamma(void) {
   /* TLitGamma */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma));
   G__memfunc_setup("AdaptHistMom",1195,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TH1D' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DepositEnergy",1346,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmissionToWCS",1271,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitLight",903,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillDeath",877,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gen4pi",551,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenE",351,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"u 'TVector3' - 11 - - u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenFlat",673,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenK",357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenProvided",1111,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSinCos",873,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSourceDir",1194,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSourcePoint",1429,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_dSigma_dOmega",1664,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPathLength",1295,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXSectnKN",1038,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "Get Klein Nishina  X-Section", (void*) NULL, 0);
   G__memfunc_setup("GetXSectnPE",1034,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "Get Photo-electric X-Section", (void*) NULL, 0);
   G__memfunc_setup("IndexGeoVol",1092,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitTracking",1223,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitTV",574,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NameFile",769,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextCrossing",1255,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartOneGamma",1299,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitGamma",864,G__SLitraniDict_542_0_27, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitGamma",864,G__SLitraniDict_542_0_28, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma), -1, 0, 11, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - d - 'Double_t' 0 '1.0' - "
"g - 'Bool_t' 0 'kFALSE' - g - 'Bool_t' 0 'kFALSE' - "
"i 'PDistribution' - 0 'singlevalued' - d - 'Double_t' 0 '1.0' - "
"d - 'Double_t' 0 '1.0' - d - 'Double_t' 0 '0.1' - "
"d - 'Double_t' 0 '1000.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckDead",844,G__SLitraniDict_542_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComptonCut",1036,G__SLitraniDict_542_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComptonCut",1036,G__SLitraniDict_542_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComptonOk",922,G__SLitraniDict_542_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gen",282,G__SLitraniDict_542_0_33, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 '1' - "
"d - 'Double_t' 0 '-2.0e+20' - g - 'Bool_t' 0 'kTRUE' - "
"g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAxisDirx",1100,G__SLitraniDict_542_0_34, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAxisDiry",1101,G__SLitraniDict_542_0_35, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAxisDirz",1102,G__SLitraniDict_542_0_36, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCompton",1024,G__SLitraniDict_542_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirFace",942,G__SLitraniDict_542_0_38, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetForgetLast",1307,G__SLitraniDict_542_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFromFace",1059,G__SLitraniDict_542_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMoving",912,G__SLitraniDict_542_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRun",597,G__SLitraniDict_542_0_43, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunStat",1009,G__SLitraniDict_542_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourceFixed",1409,G__SLitraniDict_542_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourcePath",1310,G__SLitraniDict_542_0_46, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourcePoint",1435,G__SLitraniDict_542_0_47, 117, G__get_linked_tagnum(&G__SLitraniDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaMax",1084,G__SLitraniDict_542_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsToDraw",781,G__SLitraniDict_542_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KindOfEmission",1410,G__SLitraniDict_542_0_51, 105, G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MoveCradle",994,G__SLitraniDict_542_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGeoMatrix' - 0 - - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NameFromPath",1186,G__SLitraniDict_542_0_53, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEmission",1139,G__SLitraniDict_542_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 8, 1, 1, 0, 
"i 'KindOfDist' - 0 'flat' - d - 'Double_t' 0 '1.0' - "
"u 'TVector3' - 0 '{0.0,0.0,0.0}' - C - - 10 '\"\"' - "
"g - 'Bool_t' 0 'kFALSE' - u 'TVector3' - 0 '{0.0,0.0,0.0}' - "
"g - 'Bool_t' 0 'kTRUE' - u 'TVector3' - 0 '{0.0,0.0,0.0}' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillDeath",1177,G__SLitraniDict_542_0_55, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1F' - 0 - - U 'TH1F' - 0 - - "
"U 'TH1F' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WhichToDraw",1092,G__SLitraniDict_542_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_542_0_57, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitGamma::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_542_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitGamma::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_542_0_59, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitGamma::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_542_0_60, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitGamma::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_542_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_542_0_65, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitGamma::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_542_0_66, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitGamma::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_542_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitGamma::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_542_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitGamma::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitGamma", 864, G__SLitraniDict_542_0_69, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma), -1, 0, 1, 1, 1, 0, "u 'TLitGamma' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitGamma", 990, G__SLitraniDict_542_0_70, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_542_0_71, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitGamma), -1, 1, 1, 1, 1, 0, "u 'TLitGamma' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLitAlbedo(void) {
   /* TLitAlbedo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo));
   G__memfunc_setup("ClearP",567,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitP",484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitAlbedo",964,G__SLitraniDict_544_0_4, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLitAlbedo",964,G__SLitraniDict_544_0_5, 105, G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo), -1, 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 '\"Aluminium\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildGeometry",1340,G__SLitraniDict_544_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gen",282,G__SLitraniDict_544_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAperture",1128,G__SLitraniDict_544_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetD",356,G__SLitraniDict_544_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistPoint",1214,G__SLitraniDict_544_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDowncom",1015,G__SLitraniDict_544_0_11, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetL",364,G__SLitraniDict_544_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListFile",1084,G__SLitraniDict_544_0_13, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxReal",970,G__SLitraniDict_544_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNameFile",1057,G__SLitraniDict_544_0_15, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNAngles",968,G__SLitraniDict_544_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbButtons",1215,G__SLitraniDict_544_0_17, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbStepsReal",1379,G__SLitraniDict_544_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNWaveLength",1379,G__SLitraniDict_544_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__SLitraniDict_544_0_20, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartAngle",1301,G__SLitraniDict_544_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepAngle",1187,G__SLitraniDict_544_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpcom",804,G__SLitraniDict_544_0_23, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWavelength",1333,G__SLitraniDict_544_0_24, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWithDate",1082,G__SLitraniDict_544_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWrapDiffus",1307,G__SLitraniDict_544_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXminC",767,G__SLitraniDict_544_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYminC",768,G__SLitraniDict_544_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Go",182,G__SLitraniDict_544_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAngles",1127,G__SLitraniDict_544_0_30, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAperture",1140,G__SLitraniDict_544_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetD",368,G__SLitraniDict_544_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefWaveL",1050,G__SLitraniDict_544_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDistPoint",1226,G__SLitraniDict_544_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDowncom",1027,G__SLitraniDict_544_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetL",376,G__SLitraniDict_544_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetListFile",1096,G__SLitraniDict_544_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxReal",982,G__SLitraniDict_544_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameFile",1069,G__SLitraniDict_544_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNAngles",980,G__SLitraniDict_544_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNbButtons",1227,G__SLitraniDict_544_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - N", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNbStepsReal",1391,G__SLitraniDict_544_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSize",711,G__SLitraniDict_544_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartAngle",1313,G__SLitraniDict_544_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpcom",816,G__SLitraniDict_544_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWaveL",779,G__SLitraniDict_544_0_46, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWithDate",1094,G__SLitraniDict_544_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWrapDiffus",1319,G__SLitraniDict_544_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXminC",779,G__SLitraniDict_544_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYminC",780,G__SLitraniDict_544_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SLitraniDict_544_0_51, 85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLitAlbedo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SLitraniDict_544_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitAlbedo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SLitraniDict_544_0_53, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLitAlbedo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SLitraniDict_544_0_54, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLitAlbedo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SLitraniDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SLitraniDict_544_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SLitraniDict_544_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitAlbedo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SLitraniDict_544_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitAlbedo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SLitraniDict_544_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLitAlbedo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SLitraniDict_544_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLitAlbedo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLitAlbedo", 964, G__SLitraniDict_544_0_63, (int) ('i'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo), -1, 0, 1, 1, 1, 0, "u 'TLitAlbedo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLitAlbedo", 1090, G__SLitraniDict_544_0_64, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SLitraniDict_544_0_65, (int) ('u'), G__get_linked_tagnum(&G__SLitraniDictLN_TLitAlbedo), -1, 1, 1, 1, 1, 0, "u 'TLitAlbedo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSLitraniDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)(&gLitIdx),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitEqIndex),-1,-1,1,"gLitIdx=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist),-1,-1,1,"on4pi=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist),-1,-1,1,"flat=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist),-1,-1,1,"sinuscosinus=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_KindOfDist),-1,-1,1,"provided=3",0,(char*)NULL);
   G__memvar_setup((void*)(&gRandom3),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TRandom3),-1,-1,1,"gRandom3=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_LitMemForDet),-1,-1,1,"nohist=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_LitMemForDet),-1,-1,1,"punyhist=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_LitMemForDet),-1,-1,1,"smallhist=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_LitMemForDet),-1,-1,1,"normalhist=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_LitMemForDet),-1,-1,1,"bighist=4",0,(char*)NULL);
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
   G__memvar_setup((void*)(&gLitGs),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults),-1,-1,1,"gLitGs=",0,(char*)NULL);
   G__memvar_setup((void*)(&gLitCs),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitResults),-1,-1,1,"gLitCs=",0,(char*)NULL);
   G__memvar_setup((void*)(&gLitGp),85,0,0,G__get_linked_tagnum(&G__SLitraniDictLN_TLitMarrow),-1,-1,1,"gLitGp=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_PDistribution),-1,-1,1,"singlevalued=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_PDistribution),-1,-1,1,"straigth=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_PDistribution),-1,-1,1,"gaussian=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SLitraniDictLN_PDistribution),-1,-1,1,"exponential=3",0,(char*)NULL);
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSLitraniDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSLitraniDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SLitraniDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TComplex = { "TComplex" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitPol3 = { "TLitPol3" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitPol4 = { "TLitPol4" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_KindOfMessage = { "KindOfMessage" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_TypeOfEquation = { "TypeOfEquation" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitEqIndex = { "TLitEqIndex" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TVec3C = { "TVec3C" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMat33 = { "TMat33" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_Sharing = { "Sharing" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitWave = { "TLitWave" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitPhoton = { "TLitPhoton" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitHistParams = { "TLitHistParams" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_KindOfDist = { "KindOfDist" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_EDepProcess = { "EDepProcess" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_OpticalProcess = { "OpticalProcess" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_KindOfDet = { "KindOfDet" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_TGeoMedium = { "TGeoMedium" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitPhys = { "TLitPhys" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TGeoMatrix = { "TGeoMatrix" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TGeoTrap = { "TGeoTrap" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitTrap = { "TLitTrap" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitSpectrumCp = { "TLitSpectrumCp" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__SLitraniDictLN_TPolyMarker = { "TPolyMarker" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TSplineFit = { "TSplineFit" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitSpectrum = { "TLitSpectrum" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_LitMemForDet = { "LitMemForDet" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitDetector = { "TLitDetector" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitSellmeier = { "TLitSellmeier" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TGeoMaterial = { "TGeoMaterial" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_KindOfMedium = { "KindOfMedium" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_MethodUsed = { "MethodUsed" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_dEdxMethod = { "dEdxMethod" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitMedium = { "TLitMedium" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMat33C = { "TMat33C" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_ChoiceOfn = { "ChoiceOfn" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitVolume = { "TLitVolume" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TReference = { "TReference" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLit = { "TLit" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TGeoNode = { "TGeoNode" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TVirtualGeoTrack = { "TVirtualGeoTrack" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TGeoPhysicalNode = { "TGeoPhysicalNode" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitResults = { "TLitResults" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitMarrow = { "TLitMarrow" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitSpontan = { "TLitSpontan" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitranino = { "TLitranino" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TPaveLabel = { "TPaveLabel" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_PDistribution = { "PDistribution" , 101 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitParticle = { "TLitParticle" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitBeam = { "TLitBeam" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitCascade = { "TLitCascade" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__SLitraniDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitGamma = { "TLitGamma" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TGeoTranslation = { "TGeoTranslation" , 99 , -1 };
G__linked_taginfo G__SLitraniDictLN_TLitAlbedo = { "TLitAlbedo" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSLitraniDict() {
  G__SLitraniDictLN_TClass.tagnum = -1 ;
  G__SLitraniDictLN_TBuffer.tagnum = -1 ;
  G__SLitraniDictLN_TMemberInspector.tagnum = -1 ;
  G__SLitraniDictLN_TObject.tagnum = -1 ;
  G__SLitraniDictLN_TNamed.tagnum = -1 ;
  G__SLitraniDictLN_TString.tagnum = -1 ;
  G__SLitraniDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SLitraniDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SLitraniDictLN_TObjArray.tagnum = -1 ;
  G__SLitraniDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SLitraniDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SLitraniDictLN_TComplex.tagnum = -1 ;
  G__SLitraniDictLN_TLitPol3.tagnum = -1 ;
  G__SLitraniDictLN_TLitPol4.tagnum = -1 ;
  G__SLitraniDictLN_TAttLine.tagnum = -1 ;
  G__SLitraniDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TH1.tagnum = -1 ;
  G__SLitraniDictLN_TH1F.tagnum = -1 ;
  G__SLitraniDictLN_TGraph.tagnum = -1 ;
  G__SLitraniDictLN_TArrayD.tagnum = -1 ;
  G__SLitraniDictLN_TH1D.tagnum = -1 ;
  G__SLitraniDictLN_KindOfMessage.tagnum = -1 ;
  G__SLitraniDictLN_TypeOfEquation.tagnum = -1 ;
  G__SLitraniDictLN_TLitEqIndex.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__SLitraniDictLN_TVector3.tagnum = -1 ;
  G__SLitraniDictLN_TVec3C.tagnum = -1 ;
  G__SLitraniDictLN_TMat33.tagnum = -1 ;
  G__SLitraniDictLN_Sharing.tagnum = -1 ;
  G__SLitraniDictLN_TLitWave.tagnum = -1 ;
  G__SLitraniDictLN_TLitPhoton.tagnum = -1 ;
  G__SLitraniDictLN_TFile.tagnum = -1 ;
  G__SLitraniDictLN_TLitHistParams.tagnum = -1 ;
  G__SLitraniDictLN_TRandom3.tagnum = -1 ;
  G__SLitraniDictLN_KindOfDist.tagnum = -1 ;
  G__SLitraniDictLN_EDepProcess.tagnum = -1 ;
  G__SLitraniDictLN_OpticalProcess.tagnum = -1 ;
  G__SLitraniDictLN_KindOfDet.tagnum = -1 ;
  G__SLitraniDictLN_TGeoMedium.tagnum = -1 ;
  G__SLitraniDictLN_TLitPhys.tagnum = -1 ;
  G__SLitraniDictLN_TGeoMatrix.tagnum = -1 ;
  G__SLitraniDictLN_TGeoVolume.tagnum = -1 ;
  G__SLitraniDictLN_TGeoTrap.tagnum = -1 ;
  G__SLitraniDictLN_TLitTrap.tagnum = -1 ;
  G__SLitraniDictLN_TLitSpectrumCp.tagnum = -1 ;
  G__SLitraniDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__SLitraniDictLN_TPolyMarker.tagnum = -1 ;
  G__SLitraniDictLN_TBranch.tagnum = -1 ;
  G__SLitraniDictLN_TTree.tagnum = -1 ;
  G__SLitraniDictLN_TSplineFit.tagnum = -1 ;
  G__SLitraniDictLN_TLitSpectrum.tagnum = -1 ;
  G__SLitraniDictLN_TH2.tagnum = -1 ;
  G__SLitraniDictLN_TH2F.tagnum = -1 ;
  G__SLitraniDictLN_TH2D.tagnum = -1 ;
  G__SLitraniDictLN_LitMemForDet.tagnum = -1 ;
  G__SLitraniDictLN_TLitDetector.tagnum = -1 ;
  G__SLitraniDictLN_TLitSellmeier.tagnum = -1 ;
  G__SLitraniDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__SLitraniDictLN_TGeoMaterial.tagnum = -1 ;
  G__SLitraniDictLN_KindOfMedium.tagnum = -1 ;
  G__SLitraniDictLN_MethodUsed.tagnum = -1 ;
  G__SLitraniDictLN_dEdxMethod.tagnum = -1 ;
  G__SLitraniDictLN_TLitMedium.tagnum = -1 ;
  G__SLitraniDictLN_TMat33C.tagnum = -1 ;
  G__SLitraniDictLN_ChoiceOfn.tagnum = -1 ;
  G__SLitraniDictLN_TLitVolume.tagnum = -1 ;
  G__SLitraniDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__SLitraniDictLN_TReference.tagnum = -1 ;
  G__SLitraniDictLN_TLit.tagnum = -1 ;
  G__SLitraniDictLN_TAtt3D.tagnum = -1 ;
  G__SLitraniDictLN_TGeoNode.tagnum = -1 ;
  G__SLitraniDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__SLitraniDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SLitraniDictLN_TVirtualGeoTrack.tagnum = -1 ;
  G__SLitraniDictLN_TGeoPhysicalNode.tagnum = -1 ;
  G__SLitraniDictLN_TLitResults.tagnum = -1 ;
  G__SLitraniDictLN_TLitMarrow.tagnum = -1 ;
  G__SLitraniDictLN_TLitSpontan.tagnum = -1 ;
  G__SLitraniDictLN_TLitranino.tagnum = -1 ;
  G__SLitraniDictLN_TPaveLabel.tagnum = -1 ;
  G__SLitraniDictLN_TPaveText.tagnum = -1 ;
  G__SLitraniDictLN_TParticle.tagnum = -1 ;
  G__SLitraniDictLN_PDistribution.tagnum = -1 ;
  G__SLitraniDictLN_TLitParticle.tagnum = -1 ;
  G__SLitraniDictLN_TLitBeam.tagnum = -1 ;
  G__SLitraniDictLN_TLitCascade.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__SLitraniDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__SLitraniDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__SLitraniDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SLitraniDictLN_TLitGamma.tagnum = -1 ;
  G__SLitraniDictLN_TGeoTranslation.tagnum = -1 ;
  G__SLitraniDictLN_TLitAlbedo.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSLitraniDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TString);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TComplex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitPol3),sizeof(TLitPol3),-1,327424,"Handling of 3rd degree polynomials",G__setup_memvarTLitPol3,G__setup_memfuncTLitPol3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitPol4),sizeof(TLitPol4),-1,327424,"Handle polynomials of 4th degree",G__setup_memvarTLitPol4,G__setup_memfuncTLitPol4);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TGraph);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_KindOfMessage);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TypeOfEquation);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitEqIndex),sizeof(TLitEqIndex),-1,324864,"Equation giving the 2 indices in case of anisotropy",G__setup_memvarTLitEqIndex,G__setup_memfuncTLitEqIndex);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TVec3C);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMat33);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_Sharing);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitWave),sizeof(TLitWave),-1,323840,"characteristics of el-magn. wave",G__setup_memvarTLitWave,G__setup_memfuncTLitWave);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitPhoton),sizeof(TLitPhoton),-1,324864,"Full description of a photon inside the set-up",G__setup_memvarTLitPhoton,G__setup_memfuncTLitPhoton);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitHistParams),sizeof(TLitHistParams),-1,324864,"Histogram parameters for SLitrani into xml file",G__setup_memvarTLitHistParams,G__setup_memfuncTLitHistParams);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TRandom3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_KindOfDist),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_EDepProcess);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_OpticalProcess);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_KindOfDet);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TGeoMedium);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitPhys),sizeof(TLitPhys),-1,263424,"All physical constants used by SLitrani.",G__setup_memvarTLitPhys,G__setup_memfuncTLitPhys);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TGeoMatrix);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TGeoTrap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitTrap),sizeof(TLitTrap),-1,324864,"Help for defining TGeoTrap",G__setup_memvarTLitTrap,G__setup_memfuncTLitTrap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitSpectrumCp),sizeof(TLitSpectrumCp),-1,325376,"One gaussian component of the emission spectrum TLitSpectrum of an optical material",G__setup_memvarTLitSpectrumCp,G__setup_memfuncTLitSpectrumCp);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TPolyMarker);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TSplineFit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitSpectrum),sizeof(TLitSpectrum),-1,325376,"Emission spectrum of an optical material",G__setup_memvarTLitSpectrum,G__setup_memfuncTLitSpectrum);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TH2);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TH2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_LitMemForDet),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitDetector),sizeof(TLitDetector),-1,324864,"Contains all statistics and histograms for a detector",G__setup_memvarTLitDetector,G__setup_memfuncTLitDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitSellmeier),sizeof(TLitSellmeier),-1,323840,"Defines LitSellmeier law",G__setup_memvarTLitSellmeier,G__setup_memfuncTLitSellmeier);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TGeoMaterial);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_KindOfMedium);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_MethodUsed);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_dEdxMethod);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitMedium),sizeof(TLitMedium),-1,324864,"Add optical properties to a TGeoMedium",G__setup_memvarTLitMedium,G__setup_memfuncTLitMedium);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMat33C);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_ChoiceOfn);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitVolume),sizeof(TLitVolume),-1,324864,"Addition to TGeoVolume needed by SLitrani",G__setup_memvarTLitVolume,G__setup_memfuncTLitVolume);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TReference);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLit),sizeof(TLit),-1,263424,"Steering class of SLitrani",G__setup_memvarTLit,G__setup_memfuncTLit);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TAtt3D);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TGeoNode);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TVirtualGeoTrack);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TGeoPhysicalNode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitResults),sizeof(TLitResults),-1,324864,"Summary of all statistics and histograms for one run",G__setup_memvarTLitResults,G__setup_memfuncTLitResults);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitMarrow),sizeof(TLitMarrow),-1,324864,"Make the final analysis.",G__setup_memvarTLitMarrow,G__setup_memfuncTLitMarrow);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitSpontan),sizeof(TLitSpontan),-1,324864,"Spontaneous source of photon inside a TGeoVolume",G__setup_memvarTLitSpontan,G__setup_memfuncTLitSpontan);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitranino),sizeof(TLitranino),-1,324864,"Simplest possible particle to test SLitrani",G__setup_memvarTLitranino,G__setup_memfuncTLitranino);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TPaveLabel);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TPaveText);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_PDistribution),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitParticle),sizeof(TLitParticle),-1,324864,"Define a particle which will generate photons",G__setup_memvarTLitParticle,G__setup_memfuncTLitParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitBeam),sizeof(TLitBeam),-1,324864,"Defines a beam of particles",G__setup_memvarTLitBeam,G__setup_memfuncTLitBeam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitCascade),sizeof(TLitCascade),-1,324864,"Generation of electromagnetic showers",G__setup_memvarTLitCascade,G__setup_memfuncTLitCascade);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitGamma),sizeof(TLitGamma),-1,324864,"Generation of gamma rays of energy less than ~1 Mev",G__setup_memvarTLitGamma,G__setup_memfuncTLitGamma);
   G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TGeoTranslation);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SLitraniDictLN_TLitAlbedo),sizeof(TLitAlbedo),-1,324864,"Complex index of wrapping from albedo",G__setup_memvarTLitAlbedo,G__setup_memfuncTLitAlbedo);
}
extern "C" void G__cpp_setupSLitraniDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSLitraniDict()");
  G__set_cpp_environmentSLitraniDict();
  G__cpp_setup_tagtableSLitraniDict();

  G__cpp_setup_inheritanceSLitraniDict();

  G__cpp_setup_typetableSLitraniDict();

  G__cpp_setup_memvarSLitraniDict();

  G__cpp_setup_memfuncSLitraniDict();
  G__cpp_setup_globalSLitraniDict();
  G__cpp_setup_funcSLitraniDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSLitraniDict();
  return;
}
class G__cpp_setup_initSLitraniDict {
  public:
    G__cpp_setup_initSLitraniDict() { G__add_setup_func("SLitraniDict",(G__incsetup)(&G__cpp_setupSLitraniDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSLitraniDict() { G__remove_setup_func("SLitraniDict"); }
};
G__cpp_setup_initSLitraniDict G__cpp_setup_initializerSLitraniDict;

